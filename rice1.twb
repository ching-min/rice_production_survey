<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20212.21.0712.0907                               -->
<workbook source-build='2021.2.1 (20212.21.0712.0907)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-style' value='as-phased' />
      <format attr='animation-duration' value='0.0099999997764825821' />
      <format attr='animation-on' value='ao-on' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='columns' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='10'>
        <calculation class='tableau' formula='10' />
      </column>
    </datasource>
    <datasource caption='Extract+ (Multiple Connections)' inline='true' name='federated.005265b185p9051dufzqs1luelsx' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='rice_production' name='hyper.0wgn39l0p6ixtu1ghbwly1sn9z2o'>
            <connection authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/minhu/Desktop/rice/data/rice_production.hyper' default-settings='yes' sslmode='' username='tableau_internal_user' />
          </named-connection>
          <named-connection caption='temperature' name='hyper.08rb91v0x3zggx11dkzqe063q7tt'>
            <connection authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/minhu/Desktop/rice/data/temperature.hyper' default-settings='yes' sslmode='' username='tableau_internal_user' />
          </named-connection>
          <named-connection caption='pricipitation' name='hyper.0eogshg19cjkdt15400yz1k561dj'>
            <connection authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/minhu/Desktop/rice/data/pricipitation.hyper' default-settings='yes' sslmode='' username='tableau_internal_user' />
          </named-connection>
          <named-connection caption='land_agri' name='hyper.16zpl5q069kq661g5yaa31mmkhz4'>
            <connection authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/minhu/Desktop/rice/data/land_agri.hyper' default-settings='yes' sslmode='' username='tableau_internal_user' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='left' type='join'>
          <clause type='join'>
            <expression op='AND'>
              <expression op='='>
                <expression op='[rice_production].[Year]' />
                <expression op='int([land_agri].[year-1])' />
              </expression>
              <expression op='='>
                <expression op='[rice_production].[Area_Code]' />
                <expression op='[land_agri].[country_code]' />
              </expression>
            </expression>
          </clause>
          <relation join='left' type='join'>
            <clause type='join'>
              <expression op='AND'>
                <expression op='='>
                  <expression op='[rice_production].[Area_Code]' />
                  <expression op='[precipitation].[Code]' />
                </expression>
                <expression op='='>
                  <expression op='[rice_production].[Year]' />
                  <expression op='[precipitation].[Year]' />
                </expression>
              </expression>
            </clause>
            <relation join='left' type='join'>
              <clause type='join'>
                <expression op='AND'>
                  <expression op='='>
                    <expression op='[rice_production].[Year]' />
                    <expression op='[temperature].[Year]' />
                  </expression>
                  <expression op='='>
                    <expression op='[rice_production].[Area_Code]' />
                    <expression op='[temperature].[ISO3]' />
                  </expression>
                </expression>
              </clause>
              <relation connection='hyper.0wgn39l0p6ixtu1ghbwly1sn9z2o' name='rice_production' table='[Extract].[Extract]' type='table' />
              <relation connection='hyper.08rb91v0x3zggx11dkzqe063q7tt' name='temperature' table='[Extract].[Extract]' type='table' />
            </relation>
            <relation connection='hyper.0eogshg19cjkdt15400yz1k561dj' name='precipitation' table='[Extract].[Extract]' type='table' />
          </relation>
          <relation connection='hyper.16zpl5q069kq661g5yaa31mmkhz4' name='land_agri' table='[Extract].[Extract]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='left' type='join'>
          <clause type='join'>
            <expression op='AND'>
              <expression op='='>
                <expression op='[rice_production].[Year]' />
                <expression op='int([land_agri].[year-1])' />
              </expression>
              <expression op='='>
                <expression op='[rice_production].[Area_Code]' />
                <expression op='[land_agri].[country_code]' />
              </expression>
            </expression>
          </clause>
          <relation join='left' type='join'>
            <clause type='join'>
              <expression op='AND'>
                <expression op='='>
                  <expression op='[rice_production].[Area_Code]' />
                  <expression op='[precipitation].[Code]' />
                </expression>
                <expression op='='>
                  <expression op='[rice_production].[Year]' />
                  <expression op='[precipitation].[Year]' />
                </expression>
              </expression>
            </clause>
            <relation join='left' type='join'>
              <clause type='join'>
                <expression op='AND'>
                  <expression op='='>
                    <expression op='[rice_production].[Year]' />
                    <expression op='[temperature].[Year]' />
                  </expression>
                  <expression op='='>
                    <expression op='[rice_production].[Area_Code]' />
                    <expression op='[temperature].[ISO3]' />
                  </expression>
                </expression>
              </clause>
              <relation connection='hyper.0wgn39l0p6ixtu1ghbwly1sn9z2o' name='rice_production' table='[Extract].[Extract]' type='table' />
              <relation connection='hyper.08rb91v0x3zggx11dkzqe063q7tt' name='temperature' table='[Extract].[Extract]' type='table' />
            </relation>
            <relation connection='hyper.0eogshg19cjkdt15400yz1k561dj' name='precipitation' table='[Extract].[Extract]' type='table' />
          </relation>
          <relation connection='hyper.16zpl5q069kq661g5yaa31mmkhz4' name='land_agri' table='[Extract].[Extract]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Area]' value='[rice_production].[Area]' />
          <map key='[Area_Code]' value='[rice_production].[Area_Code]' />
          <map key='[Average monthly precipitation]' value='[precipitation].[Average monthly precipitation]' />
          <map key='[Code]' value='[precipitation].[Code]' />
          <map key='[Country]' value='[temperature].[Country]' />
          <map key='[Entity]' value='[precipitation].[Entity]' />
          <map key='[Flag Description]' value='[rice_production].[Flag Description]' />
          <map key='[ISO3]' value='[temperature].[ISO3]' />
          <map key='[Statistics]' value='[temperature].[Statistics]' />
          <map key='[Temperature - (Celsius)]' value='[temperature].[Temperature - (Celsius)]' />
          <map key='[Unit]' value='[rice_production].[Unit]' />
          <map key='[Value]' value='[rice_production].[Value]' />
          <map key='[Year (Extract1)]' value='[temperature].[Year]' />
          <map key='[Year (Extract2)]' value='[precipitation].[Year]' />
          <map key='[Year]' value='[rice_production].[Year]' />
          <map key='[country-1]' value='[land_agri].[country-1]' />
          <map key='[country]' value='[land_agri].[country]' />
          <map key='[country_code-1]' value='[land_agri].[country_code-1]' />
          <map key='[country_code]' value='[land_agri].[country_code]' />
          <map key='[land]' value='[land_agri].[land]' />
          <map key='[per]' value='[land_agri].[per]' />
          <map key='[year-1]' value='[land_agri].[year-1]' />
          <map key='[year]' value='[land_agri].[year]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Area</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Area]</local-name>
            <parent-name>[rice_production]</parent-name>
            <remote-alias>Area</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>148</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[rice_production]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>59</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Unit]</local-name>
            <parent-name>[rice_production]</parent-name>
            <remote-alias>Unit</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[rice_production]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>3176</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Flag Description</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Flag Description]</local-name>
            <parent-name>[rice_production]</parent-name>
            <remote-alias>Flag Description</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>2</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area_Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Area_Code]</local-name>
            <parent-name>[rice_production]</parent-name>
            <remote-alias>Area_Code</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>147</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Temperature - (Celsius)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Temperature - (Celsius)]</local-name>
            <parent-name>[temperature]</parent-name>
            <remote-alias>Temperature - (Celsius)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1848</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (Extract1)]</local-name>
            <parent-name>[temperature]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>120</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Statistics</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Statistics]</local-name>
            <parent-name>[temperature]</parent-name>
            <remote-alias>Statistics</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>12</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[temperature]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>224</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ISO3</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ISO3]</local-name>
            <parent-name>[temperature]</parent-name>
            <remote-alias>ISO3</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>224</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Entity</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Entity]</local-name>
            <parent-name>[precipitation]</parent-name>
            <remote-alias>Entity</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>191</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code]</local-name>
            <parent-name>[precipitation]</parent-name>
            <remote-alias>Code</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>191</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (Extract2)]</local-name>
            <parent-name>[precipitation]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>115</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average monthly precipitation</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Average monthly precipitation]</local-name>
            <parent-name>[precipitation]</parent-name>
            <remote-alias>Average monthly precipitation</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>20879</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[land_agri]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>274</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>5</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[land_agri]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>58</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>land</remote-name>
            <remote-type>5</remote-type>
            <local-name>[land]</local-name>
            <parent-name>[land_agri]</parent-name>
            <remote-alias>land</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>769</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country-1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country-1]</local-name>
            <parent-name>[land_agri]</parent-name>
            <remote-alias>country-1</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>274</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year-1</remote-name>
            <remote-type>5</remote-type>
            <local-name>[year-1]</local-name>
            <parent-name>[land_agri]</parent-name>
            <remote-alias>year-1</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>58</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>per</remote-name>
            <remote-type>5</remote-type>
            <local-name>[per]</local-name>
            <parent-name>[land_agri]</parent-name>
            <remote-alias>per</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>4063</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_code-1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_code-1]</local-name>
            <parent-name>[land_agri]</parent-name>
            <remote-alias>country_code-1</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>274</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_code]</local-name>
            <parent-name>[land_agri]</parent-name>
            <remote-alias>country_code</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>274</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column datatype='string' name='[Area_Code]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <semantic-values semantic-role='[Geographical].[Latitude]'>
          <semantic-value key='&quot;228&quot;' value='55.749966000000001' />
          <semantic-value key='&quot;248&quot;' value='44.816670500000001' />
        </semantic-values>
        <semantic-values semantic-role='[Geographical].[Longitude]'>
          <semantic-value key='&quot;228&quot;' value='37.617037000000003' />
          <semantic-value key='&quot;248&quot;' value='20.447811300000001' />
        </semantic-values>
      </column>
      <column datatype='real' name='[Average monthly precipitation]' role='measure' type='quantitative' />
      <column caption='amount' datatype='real' name='[Calculation_1633399295923511297]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IIF(ISNULL([Statistics]),[Value],{ FIXED [Area_Code],[year]: AVG([Value])})' />
      </column>
      <column caption='avg_temp_year' datatype='real' name='[Calculation_204069364967424000]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{fixed [Area_Code],[year]:AVG([Temperature - (Celsius)])}' />
      </column>
      <column caption='amount_temp' datatype='real' name='[Calculation_204069364967735297]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Calculation_204069364967424000]:sum([Calculation_1633399295923511297])}' />
      </column>
      <column caption='top_temp' datatype='real' name='[Calculation_204069365583814658]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Area],[year]: MAX([Temperature - (Celsius)])}' />
      </column>
      <column caption='Asia_region' datatype='string' name='[Calculation_204069365610815491]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [East_Asia] then &quot;East_Asia&quot;&#13;&#10;ELSEIF [South_Esatern_Asia] THEN &quot;Southeast_Asia&quot;&#13;&#10;ELSEIF [South_Asia] then &quot;South_Asia&quot;&#13;&#10;ELSEIF [West_Asia] then &quot;West_Asia&quot;&#13;&#10;ELSEIF [Central_Asia] then &quot;Central_Asia&quot;&#13;&#10;ELSEIF [North_Asia] THEN &quot;North_Asia&quot;&#13;&#10;else &quot;other&quot;&#13;&#10;end' />
      </column>
      <column caption='X' datatype='integer' name='[Calculation_204069365618114564]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(INDEX()-1)%[Parameters].[Parameter 1]'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Y' datatype='integer' name='[Calculation_204069365618233349]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='int((INDEX()-1)/[Parameters].[Parameter 1])'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='agri_area' datatype='real' name='[Calculation_204069365620584457]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([land]*[per])/100' />
      </column>
      <column caption='area_step' datatype='integer' name='[Calculation_204069365682880522]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='int([Calculation_204069365620584457]/100000)*100000' />
      </column>
      <column caption='amount_sqkm' datatype='real' name='[Calculation_204069365706162187]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_1633399295923511297]/[Calculation_204069365620584457]' />
      </column>
      <column caption='code' datatype='string' name='[Calculation_2151031778104000512]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <calculation class='tableau' formula='IIF([Area_Code]=&apos;228&apos;,&apos;SUN&apos;,IIF([Area_Code]=&apos;248&apos;,&apos;YUG&apos;,[Area_Code]))' />
        <semantic-values semantic-role='[Geographical].[Latitude]'>
          <semantic-value key='&quot;SUN&quot;' value='55.749966000000001' />
          <semantic-value key='&quot;YUG&quot;' value='44.816670500000001' />
        </semantic-values>
        <semantic-values semantic-role='[Geographical].[Longitude]'>
          <semantic-value key='&quot;SUN&quot;' value='37.617037000000003' />
          <semantic-value key='&quot;YUG&quot;' value='20.447811300000001' />
        </semantic-values>
      </column>
      <column caption='continent' datatype='string' name='[Calculation_2151031778112688129]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if [Africa]THEN &apos;Africa&apos;&#13;&#10;ELSEIF [American] then &apos;America&apos;&#13;&#10;ELSEIF [Asia] then &apos;Asia&apos;&#13;&#10;ELSEIF [Europe] then &apos;Europe&apos;&#13;&#10;ELSEIF [Oceania] then &apos;Oceania&apos;&#13;&#10;ELSE &apos;other&apos;&#13;&#10;END' />
      </column>
      <column caption='America_region' datatype='string' name='[Calculation_624874456275681281]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Area_Code Set] then &quot;North_America&quot;&#13;&#10;ELSEIF [Area_Code Set 2] then &quot;Latin_America&quot;&#13;&#10;ELSEIF [Area_Code Set 3] then &quot;South_America&quot;&#13;&#10;ELSE &quot;other&quot;&#13;&#10;END' />
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[Temperature - (Celsius)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Value]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year (Extract1)]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Year (Extract2)]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Migrated Data' datatype='table' name='[__tableau_internal_object_id__].[Migrated Data]' role='measure' type='quantitative' />
      <column datatype='string' name='[country-1]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[country_code-1]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[country_code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='real' name='[land]' role='measure' type='quantitative' />
      <column datatype='real' name='[per]' role='measure' type='quantitative' />
      <column datatype='real' name='[year-1]' role='dimension' type='quantitative' />
      <column datatype='real' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[Migrated Data]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Migrated Data:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_204069365706162187]' derivation='Avg' name='[avg:Calculation_204069365706162187:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2151031778112688129]' derivation='None' name='[none:Calculation_2151031778112688129:nk]' pivot='key' type='nominal' />
      <column-instance column='[Average monthly precipitation]' derivation='Sum' name='[sum:Average monthly precipitation:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1633399295923511297]' derivation='Sum' name='[sum:Calculation_1633399295923511297:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_204069364967424000]' derivation='Sum' name='[sum:Calculation_204069364967424000:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_204069364967735297]' derivation='Sum' name='[sum:Calculation_204069364967735297:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_204069365583814658]' derivation='Sum' name='[sum:Calculation_204069365583814658:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_204069365620584457]' derivation='Sum' name='[sum:Calculation_204069365620584457:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_204069365682880522]' derivation='Sum' name='[sum:Calculation_204069365682880522:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_204069365706162187]' derivation='Sum' name='[sum:Calculation_204069365706162187:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Temperature - (Celsius)]' derivation='Sum' name='[sum:Temperature - (Celsius):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Value]' derivation='Sum' name='[sum:Value:qk]' pivot='key' type='quantitative' />
      <column-instance column='[land]' derivation='Sum' name='[sum:land:qk]' pivot='key' type='quantitative' />
      <column-instance column='[per]' derivation='Sum' name='[sum:per:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_204069365618114564]' derivation='User' name='[usr:Calculation_204069365618114564:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_204069365618233349]' derivation='User' name='[usr:Calculation_204069365618233349:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <group name='[Africa]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[Area_Code]' member='&quot;AGO&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;BDI&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;BEN&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;BFA&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;CAF&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;CIV&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;CMR&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;COD&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;COG&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;COM&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;DZA&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;EGY&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;ETH&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;GAB&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;GHA&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;GIN&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;GMB&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;GNB&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;KEN&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;LBR&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;MAR&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;MDG&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;MLI&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;MOZ&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;MRT&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;MUS&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;MWI&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;NER&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;NGA&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;REU&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;RWA&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;SDN&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;SEN&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;SLE&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;SOM&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;SWZ&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;TCD&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;TGO&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;TZA&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;UGA&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;ZAF&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;ZMB&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;ZWE&quot;' />
        </groupfilter>
      </group>
      <group name='[American]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[Area_Code]' member='&quot;ARG&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;BLZ&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;BOL&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;BRA&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;CHL&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;COL&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;CRI&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;CUB&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;DOM&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;ECU&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;GTM&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;GUF&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;GUY&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;HND&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;HTI&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;JAM&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;MEX&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;NIC&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;PAN&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;PER&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;PRI&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;PRY&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;SLV&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;SUR&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;TTO&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;URY&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;USA&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;VCT&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;VEN&quot;' />
        </groupfilter>
      </group>
      <group caption='Latin_America' name='[Area_Code Set 2]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[Area_Code]' member='&quot;BLZ&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;CRI&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;CUB&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;DOM&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;GTM&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;HND&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;HTI&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;JAM&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;NIC&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;PAN&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;PRI&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;SLV&quot;' />
        </groupfilter>
      </group>
      <group caption='South_America' name='[Area_Code Set 3]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[Area_Code]' member='&quot;ARG&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;BOL&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;BRA&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;CHL&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;COL&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;ECU&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;GUF&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;GUY&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;PER&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;PRY&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;SUR&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;TTO&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;URY&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;VCT&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;VEN&quot;' />
        </groupfilter>
      </group>
      <group caption='North_America' name='[Area_Code Set]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[Area_Code]' member='&quot;MEX&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;USA&quot;' />
        </groupfilter>
      </group>
      <group name='[Asia]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[Area_Code]' member='&quot;AFG&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;AZE&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;BGD&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;BRN&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;BTN&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;CHN&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;HKG&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;IDN&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;IND&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;IRN&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;IRQ&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;JPN&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;KAZ&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;KGZ&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;KHM&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;KOR&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;LAO&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;LKA&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;MMR&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;MYS&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;NPL&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;PAK&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;PHL&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;PRK&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;SAU&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;SYR&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;THA&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;TJK&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;TKM&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;TLS&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;TWN&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;UZB&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;VNM&quot;' />
        </groupfilter>
      </group>
      <group name='[Central_Asia]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[Area_Code]' member='&quot;KAZ&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;KGZ&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;TJK&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;TKM&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;UZB&quot;' />
        </groupfilter>
      </group>
      <group name='[East_Asia]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[Area_Code]' member='&quot;CHN&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;HKG&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;JPN&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;KOR&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;PRK&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;TWN&quot;' />
        </groupfilter>
      </group>
      <group name='[Europe]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='union'>
            <groupfilter function='union'>
              <groupfilter function='member' level='[Area_Code]' member='&quot;228&quot;' />
              <groupfilter function='member' level='[Area_Code]' member='&quot;248&quot;' />
              <groupfilter function='member' level='[Area_Code]' member='&quot;ALB&quot;' />
              <groupfilter function='member' level='[Area_Code]' member='&quot;BEL&quot;' />
              <groupfilter function='member' level='[Area_Code]' member='&quot;BGR&quot;' />
              <groupfilter function='member' level='[Area_Code]' member='&quot;CYP&quot;' />
              <groupfilter function='member' level='[Area_Code]' member='&quot;CZE&quot;' />
              <groupfilter function='member' level='[Area_Code]' member='&quot;DEU&quot;' />
              <groupfilter function='member' level='[Area_Code]' member='&quot;DNK&quot;' />
              <groupfilter function='member' level='[Area_Code]' member='&quot;ESP&quot;' />
              <groupfilter function='member' level='[Area_Code]' member='&quot;EST&quot;' />
              <groupfilter function='member' level='[Area_Code]' member='&quot;FIN&quot;' />
              <groupfilter function='member' level='[Area_Code]' member='&quot;FRA&quot;' />
              <groupfilter function='member' level='[Area_Code]' member='&quot;GRC&quot;' />
              <groupfilter function='member' level='[Area_Code]' member='&quot;HRV&quot;' />
              <groupfilter function='member' level='[Area_Code]' member='&quot;HUN&quot;' />
              <groupfilter function='member' level='[Area_Code]' member='&quot;ITA&quot;' />
              <groupfilter function='member' level='[Area_Code]' member='&quot;LTU&quot;' />
              <groupfilter function='member' level='[Area_Code]' member='&quot;LUX&quot;' />
              <groupfilter function='member' level='[Area_Code]' member='&quot;LVA&quot;' />
              <groupfilter function='member' level='[Area_Code]' member='&quot;MKD&quot;' />
              <groupfilter function='member' level='[Area_Code]' member='&quot;MLT&quot;' />
              <groupfilter function='member' level='[Area_Code]' member='&quot;NLD&quot;' />
              <groupfilter function='member' level='[Area_Code]' member='&quot;POL&quot;' />
              <groupfilter function='member' level='[Area_Code]' member='&quot;ROU&quot;' />
              <groupfilter function='member' level='[Area_Code]' member='&quot;RUS&quot;' />
              <groupfilter function='member' level='[Area_Code]' member='&quot;SVK&quot;' />
              <groupfilter function='member' level='[Area_Code]' member='&quot;SVN&quot;' />
              <groupfilter function='member' level='[Area_Code]' member='&quot;SWE&quot;' />
              <groupfilter function='member' level='[Area_Code]' member='&quot;TUR&quot;' />
              <groupfilter function='member' level='[Area_Code]' member='&quot;UKR&quot;' />
            </groupfilter>
            <groupfilter function='member' level='[Area_Code]' member='&quot;PRT&quot;' />
          </groupfilter>
          <groupfilter function='member' level='[Area_Code]' member='&quot;IRL&quot;' />
        </groupfilter>
      </group>
      <group name='[North_Asia]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[Area_Code]' member='&quot;228&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;RUS&quot;' />
        </groupfilter>
      </group>
      <group name='[Oceania]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[Area_Code]' member='&quot;AUS&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;FJI&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;FSM&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;PNG&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;SLB&quot;' />
        </groupfilter>
      </group>
      <group name='[South_Asia]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[Area_Code]' member='&quot;AFG&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;BGD&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;BTN&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;IND&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;LKA&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;NPL&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;PAK&quot;' />
        </groupfilter>
      </group>
      <group name='[South_Esatern_Asia]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='union'>
            <groupfilter function='member' level='[Area_Code]' member='&quot;BRN&quot;' />
            <groupfilter function='member' level='[Area_Code]' member='&quot;IDN&quot;' />
            <groupfilter function='member' level='[Area_Code]' member='&quot;KHM&quot;' />
            <groupfilter function='member' level='[Area_Code]' member='&quot;LAO&quot;' />
            <groupfilter function='member' level='[Area_Code]' member='&quot;MMR&quot;' />
            <groupfilter function='member' level='[Area_Code]' member='&quot;MYS&quot;' />
            <groupfilter function='member' level='[Area_Code]' member='&quot;PHL&quot;' />
            <groupfilter function='member' level='[Area_Code]' member='&quot;THA&quot;' />
            <groupfilter function='member' level='[Area_Code]' member='&quot;VNM&quot;' />
          </groupfilter>
          <groupfilter function='member' level='[Area_Code]' member='&quot;TLS&quot;' />
        </groupfilter>
      </group>
      <group name='[West_Asia]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[Area_Code]' member='&quot;AZE&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;CYP&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;IRN&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;IRQ&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;SAU&quot;' />
          <groupfilter function='member' level='[Area_Code]' member='&quot;SYR&quot;' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_2151031778112688129:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;other&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;American&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[:Measure Names]' type='shape'>
            <map to='asterisk'>
              <bucket>&quot;[federated.005265b185p9051dufzqs1luelsx].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;[federated.005265b185p9051dufzqs1luelsx].[sum:per:qk]&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_204069365706162187:qk]&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;[federated.005265b185p9051dufzqs1luelsx].[sum:Calculation_204069364967735297:qk]&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;[federated.005265b185p9051dufzqs1luelsx].[sum:Temperature - (Celsius):qk]&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;[federated.005265b185p9051dufzqs1luelsx].[usr:Calculation_204069365618114564:qk]&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;[federated.005265b185p9051dufzqs1luelsx].[sum:Calculation_1633399295923511297:qk]&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;[federated.005265b185p9051dufzqs1luelsx].[usr:Calculation_204069365618233349:qk]&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;[federated.005265b185p9051dufzqs1luelsx].[sum:Average monthly precipitation:qk]&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;[federated.005265b185p9051dufzqs1luelsx].[sum:Calculation_204069364967424000:qk]&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;[federated.005265b185p9051dufzqs1luelsx].[sum:Calculation_204069365620584457:qk]&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;[federated.005265b185p9051dufzqs1luelsx].[sum:Calculation_204069365706162187:qk]&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;[federated.005265b185p9051dufzqs1luelsx].[sum:Calculation_204069365583814658:qk]&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;[federated.005265b185p9051dufzqs1luelsx].[sum:Calculation_204069365682880522:qk]&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;[federated.005265b185p9051dufzqs1luelsx].[__tableau_internal_object_id__].[cnt:Migrated Data:qk]&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;[federated.005265b185p9051dufzqs1luelsx].[sum:land:qk]&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;[federated.005265b185p9051dufzqs1luelsx].[sum:Value:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='columns' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='10'>
          <calculation class='tableau' formula='10' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Migrated Data' id='Migrated Data'>
            <properties context=''>
              <relation join='left' type='join'>
                <clause type='join'>
                  <expression op='AND'>
                    <expression op='='>
                      <expression op='[rice_production].[Year]' />
                      <expression op='int([land_agri].[year-1])' />
                    </expression>
                    <expression op='='>
                      <expression op='[rice_production].[Area_Code]' />
                      <expression op='[land_agri].[country_code]' />
                    </expression>
                  </expression>
                </clause>
                <relation join='left' type='join'>
                  <clause type='join'>
                    <expression op='AND'>
                      <expression op='='>
                        <expression op='[rice_production].[Area_Code]' />
                        <expression op='[precipitation].[Code]' />
                      </expression>
                      <expression op='='>
                        <expression op='[rice_production].[Year]' />
                        <expression op='[precipitation].[Year]' />
                      </expression>
                    </expression>
                  </clause>
                  <relation join='left' type='join'>
                    <clause type='join'>
                      <expression op='AND'>
                        <expression op='='>
                          <expression op='[rice_production].[Year]' />
                          <expression op='[temperature].[Year]' />
                        </expression>
                        <expression op='='>
                          <expression op='[rice_production].[Area_Code]' />
                          <expression op='[temperature].[ISO3]' />
                        </expression>
                      </expression>
                    </clause>
                    <relation connection='hyper.0wgn39l0p6ixtu1ghbwly1sn9z2o' name='rice_production' table='[Extract].[Extract]' type='table' />
                    <relation connection='hyper.08rb91v0x3zggx11dkzqe063q7tt' name='temperature' table='[Extract].[Extract]' type='table' />
                  </relation>
                  <relation connection='hyper.0eogshg19cjkdt15400yz1k561dj' name='precipitation' table='[Extract].[Extract]' type='table' />
                </relation>
                <relation connection='hyper.16zpl5q069kq661g5yaa31mmkhz4' name='land_agri' table='[Extract].[Extract]' type='table' />
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='amount_year'>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections)' name='federated.005265b185p9051dufzqs1luelsx' />
          </datasources>
          <datasource-dependencies datasource='federated.005265b185p9051dufzqs1luelsx'>
            <column datatype='string' name='[Area_Code]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;228&quot;' value='55.749966000000001' />
                <semantic-value key='&quot;248&quot;' value='44.816670500000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;228&quot;' value='37.617037000000003' />
                <semantic-value key='&quot;248&quot;' value='20.447811300000001' />
              </semantic-values>
            </column>
            <column caption='amount' datatype='real' name='[Calculation_1633399295923511297]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF(ISNULL([Statistics]),[Value],{ FIXED [Area_Code],[year]: AVG([Value])})' />
            </column>
            <column datatype='string' name='[Statistics]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Area_Code]' derivation='None' name='[none:Area_Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1633399295923511297]' derivation='Sum' name='[sum:Calculation_1633399295923511297:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.005265b185p9051dufzqs1luelsx].[none:Area_Code:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Area_Code:nk]' />
              <groupfilter function='member' level='[none:Area_Code:nk]' member='&quot;41&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.005265b185p9051dufzqs1luelsx].[none:Area_Code:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.005265b185p9051dufzqs1luelsx].[sum:Calculation_1633399295923511297:qk]</rows>
        <cols>[federated.005265b185p9051dufzqs1luelsx].[none:Year:ok]</cols>
      </table>
      <simple-id uuid='{12E9A022-1F04-4EB8-BC52-8A579D68FAF6}' />
    </worksheet>
    <worksheet name='area_amount'>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections)' name='federated.005265b185p9051dufzqs1luelsx' />
          </datasources>
          <datasource-dependencies datasource='federated.005265b185p9051dufzqs1luelsx'>
            <column datatype='string' name='[Area_Code]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;228&quot;' value='55.749966000000001' />
                <semantic-value key='&quot;248&quot;' value='44.816670500000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;228&quot;' value='37.617037000000003' />
                <semantic-value key='&quot;248&quot;' value='20.447811300000001' />
              </semantic-values>
            </column>
            <column caption='amount' datatype='real' name='[Calculation_1633399295923511297]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF(ISNULL([Statistics]),[Value],{ FIXED [Area_Code],[year]: AVG([Value])})' />
            </column>
            <column caption='agri_area' datatype='real' name='[Calculation_204069365620584457]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([land]*[per])/100' />
            </column>
            <column caption='area_step' datatype='integer' name='[Calculation_204069365682880522]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='int([Calculation_204069365620584457]/100000)*100000' />
            </column>
            <column datatype='string' name='[Statistics]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_204069365682880522]' derivation='Attribute' name='[attr:Calculation_204069365682880522:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1633399295923511297]' derivation='Avg' name='[avg:Calculation_1633399295923511297:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[land]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_204069365682880522]' derivation='None' name='[none:Calculation_204069365682880522:ok]' pivot='key' type='ordinal' />
            <column datatype='real' name='[per]' role='measure' type='quantitative' />
            <column datatype='real' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.005265b185p9051dufzqs1luelsx].[attr:Calculation_204069365682880522:qk]' included-values='in-range'>
            <min>0</min>
            <max>5290000</max>
          </filter>
          <slices>
            <column>[federated.005265b185p9051dufzqs1luelsx].[attr:Calculation_204069365682880522:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]' scope='rows' value='avg amount' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]</rows>
        <cols>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069365682880522:ok]</cols>
      </table>
      <simple-id uuid='{81C39ADE-A008-46E5-ACBA-82D001343D2A}' />
    </worksheet>
    <worksheet name='area_amount_asia'>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections)' name='federated.005265b185p9051dufzqs1luelsx' />
          </datasources>
          <datasource-dependencies datasource='federated.005265b185p9051dufzqs1luelsx'>
            <column datatype='string' name='[Area_Code]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;228&quot;' value='55.749966000000001' />
                <semantic-value key='&quot;248&quot;' value='44.816670500000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;228&quot;' value='37.617037000000003' />
                <semantic-value key='&quot;248&quot;' value='20.447811300000001' />
              </semantic-values>
            </column>
            <column caption='amount' datatype='real' name='[Calculation_1633399295923511297]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF(ISNULL([Statistics]),[Value],{ FIXED [Area_Code],[year]: AVG([Value])})' />
            </column>
            <column caption='Asia_region' datatype='string' name='[Calculation_204069365610815491]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [East_Asia] then &quot;East_Asia&quot;&#13;&#10;ELSEIF [South_Esatern_Asia] THEN &quot;Southeast_Asia&quot;&#13;&#10;ELSEIF [South_Asia] then &quot;South_Asia&quot;&#13;&#10;ELSEIF [West_Asia] then &quot;West_Asia&quot;&#13;&#10;ELSEIF [Central_Asia] then &quot;Central_Asia&quot;&#13;&#10;ELSEIF [North_Asia] THEN &quot;North_Asia&quot;&#13;&#10;else &quot;other&quot;&#13;&#10;end' />
            </column>
            <column caption='agri_area' datatype='real' name='[Calculation_204069365620584457]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([land]*[per])/100' />
            </column>
            <column caption='area_step' datatype='integer' name='[Calculation_204069365682880522]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='int([Calculation_204069365620584457]/100000)*100000' />
            </column>
            <column datatype='string' name='[Statistics]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_204069365682880522]' derivation='Attribute' name='[attr:Calculation_204069365682880522:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1633399295923511297]' derivation='Avg' name='[avg:Calculation_1633399295923511297:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[land]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_204069365610815491]' derivation='None' name='[none:Calculation_204069365610815491:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_204069365682880522]' derivation='None' name='[none:Calculation_204069365682880522:ok]' pivot='key' type='ordinal' />
            <column datatype='real' name='[per]' role='measure' type='quantitative' />
            <column datatype='real' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.005265b185p9051dufzqs1luelsx].[Asia]' />
          <filter class='quantitative' column='[federated.005265b185p9051dufzqs1luelsx].[attr:Calculation_204069365682880522:qk]' included-values='in-range'>
            <min>0</min>
            <max>5290000</max>
          </filter>
          <slices>
            <column>[federated.005265b185p9051dufzqs1luelsx].[attr:Calculation_204069365682880522:qk]</column>
            <column>[federated.005265b185p9051dufzqs1luelsx].[Asia]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]' scope='rows' value='avg amount' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]</rows>
        <cols>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069365682880522:ok]</cols>
        <pages>
          <column>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069365610815491:nk]</column>
        </pages>
      </table>
      <simple-id uuid='{6171C441-83B5-46A2-B3B5-00D7778806B3}' />
    </worksheet>
    <worksheet name='area_amount_continent'>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections)' name='federated.005265b185p9051dufzqs1luelsx' />
          </datasources>
          <datasource-dependencies datasource='federated.005265b185p9051dufzqs1luelsx'>
            <column datatype='string' name='[Area_Code]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;228&quot;' value='55.749966000000001' />
                <semantic-value key='&quot;248&quot;' value='44.816670500000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;228&quot;' value='37.617037000000003' />
                <semantic-value key='&quot;248&quot;' value='20.447811300000001' />
              </semantic-values>
            </column>
            <column caption='amount' datatype='real' name='[Calculation_1633399295923511297]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF(ISNULL([Statistics]),[Value],{ FIXED [Area_Code],[year]: AVG([Value])})' />
            </column>
            <column caption='agri_area' datatype='real' name='[Calculation_204069365620584457]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([land]*[per])/100' />
            </column>
            <column caption='area_step' datatype='integer' name='[Calculation_204069365682880522]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='int([Calculation_204069365620584457]/100000)*100000' />
            </column>
            <column caption='continent' datatype='string' name='[Calculation_2151031778112688129]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Africa]THEN &apos;Africa&apos;&#13;&#10;ELSEIF [American] then &apos;America&apos;&#13;&#10;ELSEIF [Asia] then &apos;Asia&apos;&#13;&#10;ELSEIF [Europe] then &apos;Europe&apos;&#13;&#10;ELSEIF [Oceania] then &apos;Oceania&apos;&#13;&#10;ELSE &apos;other&apos;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Statistics]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_204069365682880522]' derivation='Attribute' name='[attr:Calculation_204069365682880522:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1633399295923511297]' derivation='Avg' name='[avg:Calculation_1633399295923511297:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[land]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_204069365682880522]' derivation='None' name='[none:Calculation_204069365682880522:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_2151031778112688129]' derivation='None' name='[none:Calculation_2151031778112688129:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[per]' role='measure' type='quantitative' />
            <column datatype='real' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.005265b185p9051dufzqs1luelsx].[attr:Calculation_204069365682880522:qk]' included-values='in-range'>
            <min>0</min>
            <max>5290000</max>
          </filter>
          <slices>
            <column>[federated.005265b185p9051dufzqs1luelsx].[attr:Calculation_204069365682880522:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]' scope='rows' value='avg amount' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]</rows>
        <cols>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069365682880522:ok]</cols>
        <pages>
          <column>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_2151031778112688129:nk]</column>
        </pages>
      </table>
      <simple-id uuid='{A6DC0751-0AB1-4E93-B6D1-78ADC45A38C0}' />
    </worksheet>
    <worksheet name='area_amount_year'>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections)' name='federated.005265b185p9051dufzqs1luelsx' />
          </datasources>
          <datasource-dependencies datasource='federated.005265b185p9051dufzqs1luelsx'>
            <column datatype='string' name='[Area_Code]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;228&quot;' value='55.749966000000001' />
                <semantic-value key='&quot;248&quot;' value='44.816670500000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;228&quot;' value='37.617037000000003' />
                <semantic-value key='&quot;248&quot;' value='20.447811300000001' />
              </semantic-values>
            </column>
            <column caption='amount' datatype='real' name='[Calculation_1633399295923511297]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF(ISNULL([Statistics]),[Value],{ FIXED [Area_Code],[year]: AVG([Value])})' />
            </column>
            <column caption='agri_area' datatype='real' name='[Calculation_204069365620584457]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([land]*[per])/100' />
            </column>
            <column caption='area_step' datatype='integer' name='[Calculation_204069365682880522]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='int([Calculation_204069365620584457]/100000)*100000' />
            </column>
            <column datatype='string' name='[Statistics]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_204069365682880522]' derivation='Attribute' name='[attr:Calculation_204069365682880522:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1633399295923511297]' derivation='Avg' name='[avg:Calculation_1633399295923511297:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[land]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_204069365682880522]' derivation='None' name='[none:Calculation_204069365682880522:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column datatype='real' name='[per]' role='measure' type='quantitative' />
            <column datatype='real' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.005265b185p9051dufzqs1luelsx].[attr:Calculation_204069365682880522:qk]' included-values='in-range'>
            <min>0</min>
            <max>5290000</max>
          </filter>
          <slices>
            <column>[federated.005265b185p9051dufzqs1luelsx].[attr:Calculation_204069365682880522:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]' scope='rows' value='avg amount' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]</rows>
        <cols>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069365682880522:ok]</cols>
        <pages>
          <column>[federated.005265b185p9051dufzqs1luelsx].[none:Year:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{BD1B0B1F-EA39-480C-B844-02C14B345DBD}' />
    </worksheet>
    <worksheet name='avg_rain_amount'>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections)' name='federated.005265b185p9051dufzqs1luelsx' />
          </datasources>
          <datasource-dependencies datasource='federated.005265b185p9051dufzqs1luelsx'>
            <column datatype='string' name='[Area_Code]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;228&quot;' value='55.749966000000001' />
                <semantic-value key='&quot;248&quot;' value='44.816670500000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;228&quot;' value='37.617037000000003' />
                <semantic-value key='&quot;248&quot;' value='20.447811300000001' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Average monthly precipitation]' role='measure' type='quantitative' />
            <column caption='amount' datatype='real' name='[Calculation_1633399295923511297]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF(ISNULL([Statistics]),[Value],{ FIXED [Area_Code],[year]: AVG([Value])})' />
            </column>
            <column caption='avg_temp_year' datatype='real' name='[Calculation_204069364967424000]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{fixed [Area_Code],[year]:AVG([Temperature - (Celsius)])}' />
            </column>
            <column datatype='string' name='[Statistics]' role='dimension' type='nominal' />
            <column datatype='real' name='[Temperature - (Celsius)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Average monthly precipitation]' derivation='Attribute' name='[attr:Average monthly precipitation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_204069364967424000]' derivation='Attribute' name='[attr:Calculation_204069364967424000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1633399295923511297]' derivation='Avg' name='[avg:Calculation_1633399295923511297:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Average monthly precipitation]' derivation='None' name='[none:Average monthly precipitation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_204069364967424000]' derivation='None' name='[none:Calculation_204069364967424000:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.005265b185p9051dufzqs1luelsx].[attr:Average monthly precipitation:qk]' included-values='in-range'>
            <min>0.058190211999999998</min>
            <max>35.220773559999998</max>
          </filter>
          <filter class='quantitative' column='[federated.005265b185p9051dufzqs1luelsx].[attr:Calculation_204069364967424000:qk]' included-values='in-range'>
            <min>-5.9416666666665652</min>
            <max>28.933333333333209</max>
          </filter>
          <slices>
            <column>[federated.005265b185p9051dufzqs1luelsx].[attr:Average monthly precipitation:qk]</column>
            <column>[federated.005265b185p9051dufzqs1luelsx].[attr:Calculation_204069364967424000:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]' num-steps='7' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#9e3d22</color>
                <color>#a7513a</color>
                <color>#b16854</color>
                <color>#bb8171</color>
                <color>#c59c91</color>
                <color>#cfb9b4</color>
                <color>#d9d9d9</color>
                <color>#b4c0cb</color>
                <color>#92a9be</color>
                <color>#7493b1</color>
                <color>#587fa4</color>
                <color>#406d97</color>
                <color>#2b5c8a</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]' />
              <size column='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.005265b185p9051dufzqs1luelsx].[none:Average monthly precipitation:qk]</rows>
        <cols>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069364967424000:qk]</cols>
      </table>
      <simple-id uuid='{E44999D6-7C7C-42BF-8BC9-0F3F18E91306}' />
    </worksheet>
    <worksheet name='avg_rain_amount_asia'>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections)' name='federated.005265b185p9051dufzqs1luelsx' />
          </datasources>
          <datasource-dependencies datasource='federated.005265b185p9051dufzqs1luelsx'>
            <column datatype='string' name='[Area_Code]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;228&quot;' value='55.749966000000001' />
                <semantic-value key='&quot;248&quot;' value='44.816670500000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;228&quot;' value='37.617037000000003' />
                <semantic-value key='&quot;248&quot;' value='20.447811300000001' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Average monthly precipitation]' role='measure' type='quantitative' />
            <column caption='amount' datatype='real' name='[Calculation_1633399295923511297]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF(ISNULL([Statistics]),[Value],{ FIXED [Area_Code],[year]: AVG([Value])})' />
            </column>
            <column caption='avg_temp_year' datatype='real' name='[Calculation_204069364967424000]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{fixed [Area_Code],[year]:AVG([Temperature - (Celsius)])}' />
            </column>
            <column caption='Asia_region' datatype='string' name='[Calculation_204069365610815491]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [East_Asia] then &quot;East_Asia&quot;&#13;&#10;ELSEIF [South_Esatern_Asia] THEN &quot;Southeast_Asia&quot;&#13;&#10;ELSEIF [South_Asia] then &quot;South_Asia&quot;&#13;&#10;ELSEIF [West_Asia] then &quot;West_Asia&quot;&#13;&#10;ELSEIF [Central_Asia] then &quot;Central_Asia&quot;&#13;&#10;ELSEIF [North_Asia] THEN &quot;North_Asia&quot;&#13;&#10;else &quot;other&quot;&#13;&#10;end' />
            </column>
            <column datatype='string' name='[Statistics]' role='dimension' type='nominal' />
            <column datatype='real' name='[Temperature - (Celsius)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Average monthly precipitation]' derivation='Attribute' name='[attr:Average monthly precipitation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_204069364967424000]' derivation='Attribute' name='[attr:Calculation_204069364967424000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1633399295923511297]' derivation='Avg' name='[avg:Calculation_1633399295923511297:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Average monthly precipitation]' derivation='None' name='[none:Average monthly precipitation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_204069364967424000]' derivation='None' name='[none:Calculation_204069364967424000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_204069365610815491]' derivation='None' name='[none:Calculation_204069365610815491:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.005265b185p9051dufzqs1luelsx].[Asia]' />
          <filter class='quantitative' column='[federated.005265b185p9051dufzqs1luelsx].[attr:Average monthly precipitation:qk]' included-values='in-range'>
            <min>0.058190211999999998</min>
            <max>35.220773559999998</max>
          </filter>
          <filter class='quantitative' column='[federated.005265b185p9051dufzqs1luelsx].[attr:Calculation_204069364967424000:qk]' included-values='in-range'>
            <min>-5.9416666666665652</min>
            <max>28.933333333333209</max>
          </filter>
          <slices>
            <column>[federated.005265b185p9051dufzqs1luelsx].[attr:Average monthly precipitation:qk]</column>
            <column>[federated.005265b185p9051dufzqs1luelsx].[attr:Calculation_204069364967424000:qk]</column>
            <column>[federated.005265b185p9051dufzqs1luelsx].[Asia]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]' num-steps='7' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#9e3d22</color>
                <color>#a7513a</color>
                <color>#b16854</color>
                <color>#bb8171</color>
                <color>#c59c91</color>
                <color>#cfb9b4</color>
                <color>#d9d9d9</color>
                <color>#b4c0cb</color>
                <color>#92a9be</color>
                <color>#7493b1</color>
                <color>#587fa4</color>
                <color>#406d97</color>
                <color>#2b5c8a</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]' />
              <size column='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.005265b185p9051dufzqs1luelsx].[none:Average monthly precipitation:qk]</rows>
        <cols>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069364967424000:qk]</cols>
        <pages>
          <column>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069365610815491:nk]</column>
        </pages>
      </table>
      <simple-id uuid='{189FBFFB-5971-42F9-A871-F13844161F4D}' />
    </worksheet>
    <worksheet name='avg_rain_amount_con'>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections)' name='federated.005265b185p9051dufzqs1luelsx' />
          </datasources>
          <datasource-dependencies datasource='federated.005265b185p9051dufzqs1luelsx'>
            <column datatype='string' name='[Area_Code]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;228&quot;' value='55.749966000000001' />
                <semantic-value key='&quot;248&quot;' value='44.816670500000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;228&quot;' value='37.617037000000003' />
                <semantic-value key='&quot;248&quot;' value='20.447811300000001' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Average monthly precipitation]' role='measure' type='quantitative' />
            <column caption='amount' datatype='real' name='[Calculation_1633399295923511297]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF(ISNULL([Statistics]),[Value],{ FIXED [Area_Code],[year]: AVG([Value])})' />
            </column>
            <column caption='avg_temp_year' datatype='real' name='[Calculation_204069364967424000]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{fixed [Area_Code],[year]:AVG([Temperature - (Celsius)])}' />
            </column>
            <column caption='continent' datatype='string' name='[Calculation_2151031778112688129]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Africa]THEN &apos;Africa&apos;&#13;&#10;ELSEIF [American] then &apos;America&apos;&#13;&#10;ELSEIF [Asia] then &apos;Asia&apos;&#13;&#10;ELSEIF [Europe] then &apos;Europe&apos;&#13;&#10;ELSEIF [Oceania] then &apos;Oceania&apos;&#13;&#10;ELSE &apos;other&apos;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Statistics]' role='dimension' type='nominal' />
            <column datatype='real' name='[Temperature - (Celsius)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Average monthly precipitation]' derivation='Attribute' name='[attr:Average monthly precipitation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_204069364967424000]' derivation='Attribute' name='[attr:Calculation_204069364967424000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1633399295923511297]' derivation='Avg' name='[avg:Calculation_1633399295923511297:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Average monthly precipitation]' derivation='None' name='[none:Average monthly precipitation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_204069364967424000]' derivation='None' name='[none:Calculation_204069364967424000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2151031778112688129]' derivation='None' name='[none:Calculation_2151031778112688129:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.005265b185p9051dufzqs1luelsx].[attr:Average monthly precipitation:qk]' included-values='in-range'>
            <min>0.058190211999999998</min>
            <max>35.220773559999998</max>
          </filter>
          <filter class='quantitative' column='[federated.005265b185p9051dufzqs1luelsx].[attr:Calculation_204069364967424000:qk]' included-values='in-range'>
            <min>-5.9416666666665652</min>
            <max>28.933333333333209</max>
          </filter>
          <slices>
            <column>[federated.005265b185p9051dufzqs1luelsx].[attr:Average monthly precipitation:qk]</column>
            <column>[federated.005265b185p9051dufzqs1luelsx].[attr:Calculation_204069364967424000:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]' num-steps='7' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#9e3d22</color>
                <color>#a7513a</color>
                <color>#b16854</color>
                <color>#bb8171</color>
                <color>#c59c91</color>
                <color>#cfb9b4</color>
                <color>#d9d9d9</color>
                <color>#b4c0cb</color>
                <color>#92a9be</color>
                <color>#7493b1</color>
                <color>#587fa4</color>
                <color>#406d97</color>
                <color>#2b5c8a</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]' />
              <size column='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.005265b185p9051dufzqs1luelsx].[none:Average monthly precipitation:qk]</rows>
        <cols>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069364967424000:qk]</cols>
        <pages>
          <column>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_2151031778112688129:nk]</column>
        </pages>
      </table>
      <simple-id uuid='{FCEB8713-194A-4259-8328-E6E1D0F587DE}' />
    </worksheet>
    <worksheet name='avg_rain_unit'>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections)' name='federated.005265b185p9051dufzqs1luelsx' />
          </datasources>
          <datasource-dependencies datasource='federated.005265b185p9051dufzqs1luelsx'>
            <column datatype='string' name='[Area_Code]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;228&quot;' value='55.749966000000001' />
                <semantic-value key='&quot;248&quot;' value='44.816670500000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;228&quot;' value='37.617037000000003' />
                <semantic-value key='&quot;248&quot;' value='20.447811300000001' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Average monthly precipitation]' role='measure' type='quantitative' />
            <column caption='amount' datatype='real' name='[Calculation_1633399295923511297]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF(ISNULL([Statistics]),[Value],{ FIXED [Area_Code],[year]: AVG([Value])})' />
            </column>
            <column caption='avg_temp_year' datatype='real' name='[Calculation_204069364967424000]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{fixed [Area_Code],[year]:AVG([Temperature - (Celsius)])}' />
            </column>
            <column caption='agri_area' datatype='real' name='[Calculation_204069365620584457]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([land]*[per])/100' />
            </column>
            <column caption='amount_sqkm' datatype='real' name='[Calculation_204069365706162187]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1633399295923511297]/[Calculation_204069365620584457]' />
            </column>
            <column datatype='string' name='[Statistics]' role='dimension' type='nominal' />
            <column datatype='real' name='[Temperature - (Celsius)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Average monthly precipitation]' derivation='Attribute' name='[attr:Average monthly precipitation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_204069364967424000]' derivation='Attribute' name='[attr:Calculation_204069364967424000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_204069365706162187]' derivation='Avg' name='[avg:Calculation_204069365706162187:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[land]' role='measure' type='quantitative' />
            <column-instance column='[Average monthly precipitation]' derivation='None' name='[none:Average monthly precipitation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_204069364967424000]' derivation='None' name='[none:Calculation_204069364967424000:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[per]' role='measure' type='quantitative' />
            <column datatype='real' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.005265b185p9051dufzqs1luelsx].[attr:Average monthly precipitation:qk]' included-values='in-range'>
            <min>0.058190211999999998</min>
            <max>35.220773559999998</max>
          </filter>
          <filter class='quantitative' column='[federated.005265b185p9051dufzqs1luelsx].[attr:Calculation_204069364967424000:qk]' included-values='in-range'>
            <min>-5.9416666666665652</min>
            <max>28.933333333333209</max>
          </filter>
          <slices>
            <column>[federated.005265b185p9051dufzqs1luelsx].[attr:Average monthly precipitation:qk]</column>
            <column>[federated.005265b185p9051dufzqs1luelsx].[attr:Calculation_204069364967424000:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_204069365706162187:qk]' num-steps='7' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#9e3d22</color>
                <color>#a7513a</color>
                <color>#b16854</color>
                <color>#bb8171</color>
                <color>#c59c91</color>
                <color>#cfb9b4</color>
                <color>#d9d9d9</color>
                <color>#b4c0cb</color>
                <color>#92a9be</color>
                <color>#7493b1</color>
                <color>#587fa4</color>
                <color>#406d97</color>
                <color>#2b5c8a</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_204069365706162187:qk]' />
              <size column='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_204069365706162187:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.005265b185p9051dufzqs1luelsx].[none:Average monthly precipitation:qk]</rows>
        <cols>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069364967424000:qk]</cols>
      </table>
      <simple-id uuid='{A2060A6F-73BA-45A2-BC4F-E151567E61AE}' />
    </worksheet>
    <worksheet name='avg_rain_unit_america'>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections)' name='federated.005265b185p9051dufzqs1luelsx' />
          </datasources>
          <datasource-dependencies datasource='federated.005265b185p9051dufzqs1luelsx'>
            <column datatype='string' name='[Area_Code]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;228&quot;' value='55.749966000000001' />
                <semantic-value key='&quot;248&quot;' value='44.816670500000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;228&quot;' value='37.617037000000003' />
                <semantic-value key='&quot;248&quot;' value='20.447811300000001' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Average monthly precipitation]' role='measure' type='quantitative' />
            <column caption='amount' datatype='real' name='[Calculation_1633399295923511297]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF(ISNULL([Statistics]),[Value],{ FIXED [Area_Code],[year]: AVG([Value])})' />
            </column>
            <column caption='avg_temp_year' datatype='real' name='[Calculation_204069364967424000]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{fixed [Area_Code],[year]:AVG([Temperature - (Celsius)])}' />
            </column>
            <column caption='agri_area' datatype='real' name='[Calculation_204069365620584457]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([land]*[per])/100' />
            </column>
            <column caption='amount_sqkm' datatype='real' name='[Calculation_204069365706162187]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1633399295923511297]/[Calculation_204069365620584457]' />
            </column>
            <column caption='America_region' datatype='string' name='[Calculation_624874456275681281]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Area_Code Set] then &quot;North_America&quot;&#13;&#10;ELSEIF [Area_Code Set 2] then &quot;Latin_America&quot;&#13;&#10;ELSEIF [Area_Code Set 3] then &quot;South_America&quot;&#13;&#10;ELSE &quot;other&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Statistics]' role='dimension' type='nominal' />
            <column datatype='real' name='[Temperature - (Celsius)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Average monthly precipitation]' derivation='Attribute' name='[attr:Average monthly precipitation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_204069364967424000]' derivation='Attribute' name='[attr:Calculation_204069364967424000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_204069365706162187]' derivation='Avg' name='[avg:Calculation_204069365706162187:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[land]' role='measure' type='quantitative' />
            <column-instance column='[Average monthly precipitation]' derivation='None' name='[none:Average monthly precipitation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_204069364967424000]' derivation='None' name='[none:Calculation_204069364967424000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_624874456275681281]' derivation='None' name='[none:Calculation_624874456275681281:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[per]' role='measure' type='quantitative' />
            <column datatype='real' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.005265b185p9051dufzqs1luelsx].[American]' />
          <filter class='quantitative' column='[federated.005265b185p9051dufzqs1luelsx].[attr:Average monthly precipitation:qk]' included-values='in-range'>
            <min>0.058190211999999998</min>
            <max>35.220773559999998</max>
          </filter>
          <filter class='quantitative' column='[federated.005265b185p9051dufzqs1luelsx].[attr:Calculation_204069364967424000:qk]' included-values='in-range'>
            <min>-5.9416666666665652</min>
            <max>28.933333333333209</max>
          </filter>
          <slices>
            <column>[federated.005265b185p9051dufzqs1luelsx].[attr:Average monthly precipitation:qk]</column>
            <column>[federated.005265b185p9051dufzqs1luelsx].[attr:Calculation_204069364967424000:qk]</column>
            <column>[federated.005265b185p9051dufzqs1luelsx].[American]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_204069365706162187:qk]' num-steps='7' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#9e3d22</color>
                <color>#a7513a</color>
                <color>#b16854</color>
                <color>#bb8171</color>
                <color>#c59c91</color>
                <color>#cfb9b4</color>
                <color>#d9d9d9</color>
                <color>#b4c0cb</color>
                <color>#92a9be</color>
                <color>#7493b1</color>
                <color>#587fa4</color>
                <color>#406d97</color>
                <color>#2b5c8a</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_204069365706162187:qk]' />
              <size column='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_204069365706162187:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.005265b185p9051dufzqs1luelsx].[none:Average monthly precipitation:qk]</rows>
        <cols>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069364967424000:qk]</cols>
        <pages>
          <column>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_624874456275681281:nk]</column>
        </pages>
      </table>
      <simple-id uuid='{8FF1BC3E-9958-47CA-8280-601093D54943}' />
    </worksheet>
    <worksheet name='avg_rain_unit_asia'>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections)' name='federated.005265b185p9051dufzqs1luelsx' />
          </datasources>
          <datasource-dependencies datasource='federated.005265b185p9051dufzqs1luelsx'>
            <column datatype='string' name='[Area_Code]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;228&quot;' value='55.749966000000001' />
                <semantic-value key='&quot;248&quot;' value='44.816670500000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;228&quot;' value='37.617037000000003' />
                <semantic-value key='&quot;248&quot;' value='20.447811300000001' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Average monthly precipitation]' role='measure' type='quantitative' />
            <column caption='amount' datatype='real' name='[Calculation_1633399295923511297]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF(ISNULL([Statistics]),[Value],{ FIXED [Area_Code],[year]: AVG([Value])})' />
            </column>
            <column caption='avg_temp_year' datatype='real' name='[Calculation_204069364967424000]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{fixed [Area_Code],[year]:AVG([Temperature - (Celsius)])}' />
            </column>
            <column caption='Asia_region' datatype='string' name='[Calculation_204069365610815491]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [East_Asia] then &quot;East_Asia&quot;&#13;&#10;ELSEIF [South_Esatern_Asia] THEN &quot;Southeast_Asia&quot;&#13;&#10;ELSEIF [South_Asia] then &quot;South_Asia&quot;&#13;&#10;ELSEIF [West_Asia] then &quot;West_Asia&quot;&#13;&#10;ELSEIF [Central_Asia] then &quot;Central_Asia&quot;&#13;&#10;ELSEIF [North_Asia] THEN &quot;North_Asia&quot;&#13;&#10;else &quot;other&quot;&#13;&#10;end' />
            </column>
            <column caption='agri_area' datatype='real' name='[Calculation_204069365620584457]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([land]*[per])/100' />
            </column>
            <column caption='amount_sqkm' datatype='real' name='[Calculation_204069365706162187]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1633399295923511297]/[Calculation_204069365620584457]' />
            </column>
            <column datatype='string' name='[Statistics]' role='dimension' type='nominal' />
            <column datatype='real' name='[Temperature - (Celsius)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Average monthly precipitation]' derivation='Attribute' name='[attr:Average monthly precipitation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_204069364967424000]' derivation='Attribute' name='[attr:Calculation_204069364967424000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_204069365706162187]' derivation='Avg' name='[avg:Calculation_204069365706162187:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[land]' role='measure' type='quantitative' />
            <column-instance column='[Average monthly precipitation]' derivation='None' name='[none:Average monthly precipitation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_204069364967424000]' derivation='None' name='[none:Calculation_204069364967424000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_204069365610815491]' derivation='None' name='[none:Calculation_204069365610815491:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[per]' role='measure' type='quantitative' />
            <column datatype='real' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.005265b185p9051dufzqs1luelsx].[Asia]' />
          <filter class='quantitative' column='[federated.005265b185p9051dufzqs1luelsx].[attr:Average monthly precipitation:qk]' included-values='in-range'>
            <min>0.058190211999999998</min>
            <max>35.220773559999998</max>
          </filter>
          <filter class='quantitative' column='[federated.005265b185p9051dufzqs1luelsx].[attr:Calculation_204069364967424000:qk]' included-values='in-range'>
            <min>-5.9416666666665652</min>
            <max>28.933333333333209</max>
          </filter>
          <slices>
            <column>[federated.005265b185p9051dufzqs1luelsx].[attr:Average monthly precipitation:qk]</column>
            <column>[federated.005265b185p9051dufzqs1luelsx].[attr:Calculation_204069364967424000:qk]</column>
            <column>[federated.005265b185p9051dufzqs1luelsx].[Asia]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_204069365706162187:qk]' num-steps='7' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#9e3d22</color>
                <color>#a7513a</color>
                <color>#b16854</color>
                <color>#bb8171</color>
                <color>#c59c91</color>
                <color>#cfb9b4</color>
                <color>#d9d9d9</color>
                <color>#b4c0cb</color>
                <color>#92a9be</color>
                <color>#7493b1</color>
                <color>#587fa4</color>
                <color>#406d97</color>
                <color>#2b5c8a</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_204069365706162187:qk]' />
              <size column='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_204069365706162187:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.005265b185p9051dufzqs1luelsx].[none:Average monthly precipitation:qk]</rows>
        <cols>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069364967424000:qk]</cols>
        <pages>
          <column>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069365610815491:nk]</column>
        </pages>
      </table>
      <simple-id uuid='{2F5F1A82-5599-4FEB-BC5C-228FA1C9D7AD}' />
    </worksheet>
    <worksheet name='avg_rain_unit_con'>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections)' name='federated.005265b185p9051dufzqs1luelsx' />
          </datasources>
          <datasource-dependencies datasource='federated.005265b185p9051dufzqs1luelsx'>
            <column datatype='string' name='[Area_Code]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;228&quot;' value='55.749966000000001' />
                <semantic-value key='&quot;248&quot;' value='44.816670500000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;228&quot;' value='37.617037000000003' />
                <semantic-value key='&quot;248&quot;' value='20.447811300000001' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Average monthly precipitation]' role='measure' type='quantitative' />
            <column caption='amount' datatype='real' name='[Calculation_1633399295923511297]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF(ISNULL([Statistics]),[Value],{ FIXED [Area_Code],[year]: AVG([Value])})' />
            </column>
            <column caption='avg_temp_year' datatype='real' name='[Calculation_204069364967424000]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{fixed [Area_Code],[year]:AVG([Temperature - (Celsius)])}' />
            </column>
            <column caption='agri_area' datatype='real' name='[Calculation_204069365620584457]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([land]*[per])/100' />
            </column>
            <column caption='amount_sqkm' datatype='real' name='[Calculation_204069365706162187]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1633399295923511297]/[Calculation_204069365620584457]' />
            </column>
            <column caption='continent' datatype='string' name='[Calculation_2151031778112688129]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Africa]THEN &apos;Africa&apos;&#13;&#10;ELSEIF [American] then &apos;America&apos;&#13;&#10;ELSEIF [Asia] then &apos;Asia&apos;&#13;&#10;ELSEIF [Europe] then &apos;Europe&apos;&#13;&#10;ELSEIF [Oceania] then &apos;Oceania&apos;&#13;&#10;ELSE &apos;other&apos;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Statistics]' role='dimension' type='nominal' />
            <column datatype='real' name='[Temperature - (Celsius)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Average monthly precipitation]' derivation='Attribute' name='[attr:Average monthly precipitation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_204069364967424000]' derivation='Attribute' name='[attr:Calculation_204069364967424000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_204069365706162187]' derivation='Avg' name='[avg:Calculation_204069365706162187:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[land]' role='measure' type='quantitative' />
            <column-instance column='[Average monthly precipitation]' derivation='None' name='[none:Average monthly precipitation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_204069364967424000]' derivation='None' name='[none:Calculation_204069364967424000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2151031778112688129]' derivation='None' name='[none:Calculation_2151031778112688129:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[per]' role='measure' type='quantitative' />
            <column datatype='real' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.005265b185p9051dufzqs1luelsx].[attr:Average monthly precipitation:qk]' included-values='in-range'>
            <min>0.058190211999999998</min>
            <max>35.220773559999998</max>
          </filter>
          <filter class='quantitative' column='[federated.005265b185p9051dufzqs1luelsx].[attr:Calculation_204069364967424000:qk]' included-values='in-range'>
            <min>-5.9416666666665652</min>
            <max>28.933333333333209</max>
          </filter>
          <slices>
            <column>[federated.005265b185p9051dufzqs1luelsx].[attr:Average monthly precipitation:qk]</column>
            <column>[federated.005265b185p9051dufzqs1luelsx].[attr:Calculation_204069364967424000:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_204069365706162187:qk]' num-steps='7' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#9e3d22</color>
                <color>#a7513a</color>
                <color>#b16854</color>
                <color>#bb8171</color>
                <color>#c59c91</color>
                <color>#cfb9b4</color>
                <color>#d9d9d9</color>
                <color>#b4c0cb</color>
                <color>#92a9be</color>
                <color>#7493b1</color>
                <color>#587fa4</color>
                <color>#406d97</color>
                <color>#2b5c8a</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_204069365706162187:qk]' />
              <size column='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_204069365706162187:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.005265b185p9051dufzqs1luelsx].[none:Average monthly precipitation:qk]</rows>
        <cols>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069364967424000:qk]</cols>
        <pages>
          <column>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_2151031778112688129:nk]</column>
        </pages>
      </table>
      <simple-id uuid='{6B162FF6-4403-470C-AB55-86D5A5EFBA66}' />
    </worksheet>
    <worksheet name='map_annual_avg'>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections)' name='federated.005265b185p9051dufzqs1luelsx' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.005265b185p9051dufzqs1luelsx'>
            <column datatype='string' name='[Area_Code]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;228&quot;' value='55.749966000000001' />
                <semantic-value key='&quot;248&quot;' value='44.816670500000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;228&quot;' value='37.617037000000003' />
                <semantic-value key='&quot;248&quot;' value='20.447811300000001' />
              </semantic-values>
            </column>
            <column caption='amount' datatype='real' name='[Calculation_1633399295923511297]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF(ISNULL([Statistics]),[Value],{ FIXED [Area_Code],[year]: AVG([Value])})' />
            </column>
            <column datatype='string' name='[Statistics]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1633399295923511297]' derivation='Avg' name='[avg:Calculation_1633399295923511297:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Area_Code]' derivation='None' name='[none:Area_Code:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.005265b185p9051dufzqs1luelsx].[Longitude (generated)]' field-type='quantitative' max='2444691.8616296649' min='-16987734.928415645' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.005265b185p9051dufzqs1luelsx].[Latitude (generated)]' field-type='quantitative' max='5476685.4924394861' min='-9557263.8565057497' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]' field-type='quantitative' max='5276302.753761583' max-size='1' min='3056142.2050631624' min-size='0' type='rangesize' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]' />
              <lod column='[federated.005265b185p9051dufzqs1luelsx].[none:Area_Code:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.005265b185p9051dufzqs1luelsx].[Latitude (generated)]</rows>
        <cols>[federated.005265b185p9051dufzqs1luelsx].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{A5C2A44A-E801-4342-A708-99A529ED9652}' />
    </worksheet>
    <worksheet name='map_annual_avg (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections)' name='federated.005265b185p9051dufzqs1luelsx' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.005265b185p9051dufzqs1luelsx'>
            <column datatype='string' name='[Area_Code]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;228&quot;' value='55.749966000000001' />
                <semantic-value key='&quot;248&quot;' value='44.816670500000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;228&quot;' value='37.617037000000003' />
                <semantic-value key='&quot;248&quot;' value='20.447811300000001' />
              </semantic-values>
            </column>
            <column caption='amount' datatype='real' name='[Calculation_1633399295923511297]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF(ISNULL([Statistics]),[Value],{ FIXED [Area_Code],[year]: AVG([Value])})' />
            </column>
            <column datatype='string' name='[Statistics]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_1633399295923511297]' derivation='Avg' name='[avg:Calculation_1633399295923511297:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Area_Code]' derivation='None' name='[none:Area_Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column datatype='real' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]' field-type='quantitative' max='5276302.753761583' max-size='1' min='3056142.2050631624' min-size='0' type='rangesize' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
            <format attr='map-snap-zoom' value='true' />
          </style-rule>
          <_.fcp.MarkAnimation.true...style-rule element='animation'>
            <format attr='animation-on' value='ao-on' />
          </_.fcp.MarkAnimation.true...style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]' />
              <lod column='[federated.005265b185p9051dufzqs1luelsx].[none:Area_Code:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.005265b185p9051dufzqs1luelsx].[Latitude (generated)]</rows>
        <cols>[federated.005265b185p9051dufzqs1luelsx].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.005265b185p9051dufzqs1luelsx].[none:Year:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{2B2C69CF-4E13-4586-871A-3F6B2B9C2A09}' />
    </worksheet>
    <worksheet name='pie_continent_each_year'>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections)' name='federated.005265b185p9051dufzqs1luelsx' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='columns' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.005265b185p9051dufzqs1luelsx'>
            <column datatype='string' name='[Area_Code]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;228&quot;' value='55.749966000000001' />
                <semantic-value key='&quot;248&quot;' value='44.816670500000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;228&quot;' value='37.617037000000003' />
                <semantic-value key='&quot;248&quot;' value='20.447811300000001' />
              </semantic-values>
            </column>
            <column caption='amount' datatype='real' name='[Calculation_1633399295923511297]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF(ISNULL([Statistics]),[Value],{ FIXED [Area_Code],[year]: AVG([Value])})' />
            </column>
            <column caption='X' datatype='integer' name='[Calculation_204069365618114564]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(INDEX()-1)%[Parameters].[Parameter 1]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Y' datatype='integer' name='[Calculation_204069365618233349]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='int((INDEX()-1)/[Parameters].[Parameter 1])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='continent' datatype='string' name='[Calculation_2151031778112688129]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Africa]THEN &apos;Africa&apos;&#13;&#10;ELSEIF [American] then &apos;America&apos;&#13;&#10;ELSEIF [Asia] then &apos;Asia&apos;&#13;&#10;ELSEIF [Europe] then &apos;Europe&apos;&#13;&#10;ELSEIF [Oceania] then &apos;Oceania&apos;&#13;&#10;ELSE &apos;other&apos;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Statistics]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_2151031778112688129]' derivation='None' name='[none:Calculation_2151031778112688129:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1633399295923511297]' derivation='Sum' name='[sum:Calculation_1633399295923511297:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_204069365618114564]' derivation='User' name='[usr:Calculation_204069365618114564:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.005265b185p9051dufzqs1luelsx].[Year]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_204069365618233349]' derivation='User' name='[usr:Calculation_204069365618233349:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.005265b185p9051dufzqs1luelsx].[Year]' ordering-type='Field' />
            </column-instance>
            <column datatype='real' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_2151031778112688129:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_2151031778112688129:nk]' />
              <groupfilter function='member' level='[none:Calculation_2151031778112688129:nk]' member='&quot;other&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_2151031778112688129:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_2151031778112688129:nk]' />
              <wedge-size column='[federated.005265b185p9051dufzqs1luelsx].[sum:Calculation_1633399295923511297:qk]' />
              <text column='[federated.005265b185p9051dufzqs1luelsx].[none:Year:qk]' />
              <lod column='[federated.005265b185p9051dufzqs1luelsx].[none:Year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='5.0694117546081543' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='773' />
                <format attr='maxwidth' value='773' />
                <format attr='minheight' value='654' />
                <format attr='maxheight' value='654' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.005265b185p9051dufzqs1luelsx].[usr:Calculation_204069365618233349:qk:2]</rows>
        <cols>[federated.005265b185p9051dufzqs1luelsx].[usr:Calculation_204069365618114564:qk:2]</cols>
      </table>
      <simple-id uuid='{B9F5470F-7808-4E30-B93B-539F2C26423E}' />
    </worksheet>
    <worksheet name='pie_continent_each_year (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections)' name='federated.005265b185p9051dufzqs1luelsx' />
          </datasources>
          <datasource-dependencies datasource='federated.005265b185p9051dufzqs1luelsx'>
            <column datatype='string' name='[Area_Code]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;228&quot;' value='55.749966000000001' />
                <semantic-value key='&quot;248&quot;' value='44.816670500000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;228&quot;' value='37.617037000000003' />
                <semantic-value key='&quot;248&quot;' value='20.447811300000001' />
              </semantic-values>
            </column>
            <column caption='amount' datatype='real' name='[Calculation_1633399295923511297]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF(ISNULL([Statistics]),[Value],{ FIXED [Area_Code],[year]: AVG([Value])})' />
            </column>
            <column caption='continent' datatype='string' name='[Calculation_2151031778112688129]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Africa]THEN &apos;Africa&apos;&#13;&#10;ELSEIF [American] then &apos;America&apos;&#13;&#10;ELSEIF [Asia] then &apos;Asia&apos;&#13;&#10;ELSEIF [Europe] then &apos;Europe&apos;&#13;&#10;ELSEIF [Oceania] then &apos;Oceania&apos;&#13;&#10;ELSE &apos;other&apos;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Statistics]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_2151031778112688129]' derivation='None' name='[none:Calculation_2151031778112688129:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1633399295923511297]' derivation='Sum' name='[sum:Calculation_1633399295923511297:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_2151031778112688129:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_2151031778112688129:nk]' />
              <groupfilter function='member' level='[none:Calculation_2151031778112688129:nk]' member='&quot;other&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_2151031778112688129:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='487' />
            <format attr='width' value='633' />
          </style-rule>
          <_.fcp.MarkAnimation.true...style-rule element='animation'>
            <format attr='animation-on' value='ao-on' />
          </_.fcp.MarkAnimation.true...style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_2151031778112688129:nk]' />
              <wedge-size column='[federated.005265b185p9051dufzqs1luelsx].[sum:Calculation_1633399295923511297:qk]' />
              <text column='[federated.005265b185p9051dufzqs1luelsx].[none:Year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.263370156288147' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <pages>
          <column>[federated.005265b185p9051dufzqs1luelsx].[none:Year:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{F576B5D1-08A8-435A-80B5-0CFEB04752A7}' />
    </worksheet>
    <worksheet name='rain_amount_america'>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections)' name='federated.005265b185p9051dufzqs1luelsx' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.005265b185p9051dufzqs1luelsx'>
            <column datatype='string' name='[Area_Code]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;228&quot;' value='55.749966000000001' />
                <semantic-value key='&quot;248&quot;' value='44.816670500000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;228&quot;' value='37.617037000000003' />
                <semantic-value key='&quot;248&quot;' value='20.447811300000001' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Average monthly precipitation]' role='measure' type='quantitative' />
            <column caption='amount' datatype='real' name='[Calculation_1633399295923511297]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF(ISNULL([Statistics]),[Value],{ FIXED [Area_Code],[year]: AVG([Value])})' />
            </column>
            <column caption='America_region' datatype='string' name='[Calculation_624874456275681281]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Area_Code Set] then &quot;North_America&quot;&#13;&#10;ELSEIF [Area_Code Set 2] then &quot;Latin_America&quot;&#13;&#10;ELSEIF [Area_Code Set 3] then &quot;South_America&quot;&#13;&#10;ELSE &quot;other&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Statistics]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1633399295923511297]' derivation='Avg' name='[avg:Calculation_1633399295923511297:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Average monthly precipitation]' derivation='None' name='[none:Average monthly precipitation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_624874456275681281]' derivation='None' name='[none:Calculation_624874456275681281:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1633399295923511297]' derivation='Sum' name='[sum:Calculation_1633399295923511297:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.005265b185p9051dufzqs1luelsx].[American]' />
          <filter class='quantitative' column='[federated.005265b185p9051dufzqs1luelsx].[none:Average monthly precipitation:qk]' included-values='non-null' />
          <slices>
            <column>[federated.005265b185p9051dufzqs1luelsx].[none:Average monthly precipitation:qk]</column>
            <column>[federated.005265b185p9051dufzqs1luelsx].[American]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]' scope='rows' value='avg amount' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
            <format attr='map-snap-zoom' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.005265b185p9051dufzqs1luelsx].[sum:Calculation_1633399295923511297:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
          </pane>
        </panes>
        <rows>([federated.005265b185p9051dufzqs1luelsx].[sum:Calculation_1633399295923511297:qk] + [federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk])</rows>
        <cols>[federated.005265b185p9051dufzqs1luelsx].[none:Average monthly precipitation:qk]</cols>
        <pages>
          <column>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_624874456275681281:nk]</column>
        </pages>
      </table>
      <simple-id uuid='{22D6191B-27FE-427D-90EE-521EAF8A9ED7}' />
    </worksheet>
    <worksheet name='rain_amount_asia'>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections)' name='federated.005265b185p9051dufzqs1luelsx' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.005265b185p9051dufzqs1luelsx'>
            <column datatype='string' name='[Area_Code]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;228&quot;' value='55.749966000000001' />
                <semantic-value key='&quot;248&quot;' value='44.816670500000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;228&quot;' value='37.617037000000003' />
                <semantic-value key='&quot;248&quot;' value='20.447811300000001' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Average monthly precipitation]' role='measure' type='quantitative' />
            <column caption='amount' datatype='real' name='[Calculation_1633399295923511297]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF(ISNULL([Statistics]),[Value],{ FIXED [Area_Code],[year]: AVG([Value])})' />
            </column>
            <column caption='Asia_region' datatype='string' name='[Calculation_204069365610815491]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [East_Asia] then &quot;East_Asia&quot;&#13;&#10;ELSEIF [South_Esatern_Asia] THEN &quot;Southeast_Asia&quot;&#13;&#10;ELSEIF [South_Asia] then &quot;South_Asia&quot;&#13;&#10;ELSEIF [West_Asia] then &quot;West_Asia&quot;&#13;&#10;ELSEIF [Central_Asia] then &quot;Central_Asia&quot;&#13;&#10;ELSEIF [North_Asia] THEN &quot;North_Asia&quot;&#13;&#10;else &quot;other&quot;&#13;&#10;end' />
            </column>
            <column datatype='string' name='[Statistics]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1633399295923511297]' derivation='Avg' name='[avg:Calculation_1633399295923511297:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Average monthly precipitation]' derivation='None' name='[none:Average monthly precipitation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_204069365610815491]' derivation='None' name='[none:Calculation_204069365610815491:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1633399295923511297]' derivation='Sum' name='[sum:Calculation_1633399295923511297:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.005265b185p9051dufzqs1luelsx].[Asia]' />
          <filter class='quantitative' column='[federated.005265b185p9051dufzqs1luelsx].[none:Average monthly precipitation:qk]' included-values='non-null' />
          <slices>
            <column>[federated.005265b185p9051dufzqs1luelsx].[none:Average monthly precipitation:qk]</column>
            <column>[federated.005265b185p9051dufzqs1luelsx].[Asia]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]' scope='rows' value='avg amount' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
            <format attr='map-snap-zoom' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.005265b185p9051dufzqs1luelsx].[sum:Calculation_1633399295923511297:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
          </pane>
        </panes>
        <rows>([federated.005265b185p9051dufzqs1luelsx].[sum:Calculation_1633399295923511297:qk] + [federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk])</rows>
        <cols>[federated.005265b185p9051dufzqs1luelsx].[none:Average monthly precipitation:qk]</cols>
        <pages>
          <column>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069365610815491:nk]</column>
        </pages>
      </table>
      <simple-id uuid='{CAF14A30-4F86-422E-B761-4B7A9AA9D881}' />
    </worksheet>
    <worksheet name='rain_amount_continent'>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections)' name='federated.005265b185p9051dufzqs1luelsx' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.005265b185p9051dufzqs1luelsx'>
            <column datatype='string' name='[Area_Code]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;228&quot;' value='55.749966000000001' />
                <semantic-value key='&quot;248&quot;' value='44.816670500000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;228&quot;' value='37.617037000000003' />
                <semantic-value key='&quot;248&quot;' value='20.447811300000001' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Average monthly precipitation]' role='measure' type='quantitative' />
            <column caption='amount' datatype='real' name='[Calculation_1633399295923511297]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF(ISNULL([Statistics]),[Value],{ FIXED [Area_Code],[year]: AVG([Value])})' />
            </column>
            <column caption='continent' datatype='string' name='[Calculation_2151031778112688129]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Africa]THEN &apos;Africa&apos;&#13;&#10;ELSEIF [American] then &apos;America&apos;&#13;&#10;ELSEIF [Asia] then &apos;Asia&apos;&#13;&#10;ELSEIF [Europe] then &apos;Europe&apos;&#13;&#10;ELSEIF [Oceania] then &apos;Oceania&apos;&#13;&#10;ELSE &apos;other&apos;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Statistics]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1633399295923511297]' derivation='Avg' name='[avg:Calculation_1633399295923511297:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Average monthly precipitation]' derivation='None' name='[none:Average monthly precipitation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2151031778112688129]' derivation='None' name='[none:Calculation_2151031778112688129:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1633399295923511297]' derivation='Sum' name='[sum:Calculation_1633399295923511297:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.005265b185p9051dufzqs1luelsx].[Oceania]' />
          <filter class='quantitative' column='[federated.005265b185p9051dufzqs1luelsx].[none:Average monthly precipitation:qk]' included-values='non-null' />
          <slices>
            <column>[federated.005265b185p9051dufzqs1luelsx].[none:Average monthly precipitation:qk]</column>
            <column>[federated.005265b185p9051dufzqs1luelsx].[Oceania]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]' scope='rows' value='avg amount' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
            <format attr='map-snap-zoom' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.005265b185p9051dufzqs1luelsx].[sum:Calculation_1633399295923511297:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
          </pane>
        </panes>
        <rows>([federated.005265b185p9051dufzqs1luelsx].[sum:Calculation_1633399295923511297:qk] + [federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk])</rows>
        <cols>[federated.005265b185p9051dufzqs1luelsx].[none:Average monthly precipitation:qk]</cols>
        <pages>
          <column>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_2151031778112688129:nk]</column>
        </pages>
      </table>
      <simple-id uuid='{BE07178A-E867-457A-B551-178A45190497}' />
    </worksheet>
    <worksheet name='rain_unit'>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections)' name='federated.005265b185p9051dufzqs1luelsx' />
          </datasources>
          <datasource-dependencies datasource='federated.005265b185p9051dufzqs1luelsx'>
            <column datatype='string' name='[Area_Code]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;228&quot;' value='55.749966000000001' />
                <semantic-value key='&quot;248&quot;' value='44.816670500000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;228&quot;' value='37.617037000000003' />
                <semantic-value key='&quot;248&quot;' value='20.447811300000001' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Average monthly precipitation]' role='measure' type='quantitative' />
            <column caption='amount' datatype='real' name='[Calculation_1633399295923511297]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF(ISNULL([Statistics]),[Value],{ FIXED [Area_Code],[year]: AVG([Value])})' />
            </column>
            <column caption='agri_area' datatype='real' name='[Calculation_204069365620584457]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([land]*[per])/100' />
            </column>
            <column caption='amount_sqkm' datatype='real' name='[Calculation_204069365706162187]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1633399295923511297]/[Calculation_204069365620584457]' />
            </column>
            <column datatype='string' name='[Statistics]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_204069365706162187]' derivation='Avg' name='[avg:Calculation_204069365706162187:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[land]' role='measure' type='quantitative' />
            <column-instance column='[Average monthly precipitation]' derivation='None' name='[none:Average monthly precipitation:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[per]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_204069365706162187]' derivation='Sum' name='[sum:Calculation_204069365706162187:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.005265b185p9051dufzqs1luelsx].[none:Average monthly precipitation:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.005265b185p9051dufzqs1luelsx].[sum:Calculation_204069365706162187:qk]' included-values='non-null' />
          <slices>
            <column>[federated.005265b185p9051dufzqs1luelsx].[sum:Calculation_204069365706162187:qk]</column>
            <column>[federated.005265b185p9051dufzqs1luelsx].[none:Average monthly precipitation:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_204069365706162187:qk]' scope='rows' value='avg amount_sqkm' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
          </pane>
        </panes>
        <rows>[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_204069365706162187:qk]</rows>
        <cols>[federated.005265b185p9051dufzqs1luelsx].[none:Average monthly precipitation:qk]</cols>
      </table>
      <simple-id uuid='{63FE06D8-9BE3-4E17-A3B8-7C004081A15D}' />
    </worksheet>
    <worksheet name='rain_unit_america'>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections)' name='federated.005265b185p9051dufzqs1luelsx' />
          </datasources>
          <datasource-dependencies datasource='federated.005265b185p9051dufzqs1luelsx'>
            <column datatype='string' name='[Area_Code]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;228&quot;' value='55.749966000000001' />
                <semantic-value key='&quot;248&quot;' value='44.816670500000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;228&quot;' value='37.617037000000003' />
                <semantic-value key='&quot;248&quot;' value='20.447811300000001' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Average monthly precipitation]' role='measure' type='quantitative' />
            <column caption='amount' datatype='real' name='[Calculation_1633399295923511297]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF(ISNULL([Statistics]),[Value],{ FIXED [Area_Code],[year]: AVG([Value])})' />
            </column>
            <column caption='agri_area' datatype='real' name='[Calculation_204069365620584457]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([land]*[per])/100' />
            </column>
            <column caption='amount_sqkm' datatype='real' name='[Calculation_204069365706162187]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1633399295923511297]/[Calculation_204069365620584457]' />
            </column>
            <column caption='America_region' datatype='string' name='[Calculation_624874456275681281]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Area_Code Set] then &quot;North_America&quot;&#13;&#10;ELSEIF [Area_Code Set 2] then &quot;Latin_America&quot;&#13;&#10;ELSEIF [Area_Code Set 3] then &quot;South_America&quot;&#13;&#10;ELSE &quot;other&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Statistics]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_204069365706162187]' derivation='Avg' name='[avg:Calculation_204069365706162187:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[land]' role='measure' type='quantitative' />
            <column-instance column='[Average monthly precipitation]' derivation='None' name='[none:Average monthly precipitation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_624874456275681281]' derivation='None' name='[none:Calculation_624874456275681281:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[per]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_204069365706162187]' derivation='Sum' name='[sum:Calculation_204069365706162187:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.005265b185p9051dufzqs1luelsx].[American]' />
          <filter class='quantitative' column='[federated.005265b185p9051dufzqs1luelsx].[none:Average monthly precipitation:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.005265b185p9051dufzqs1luelsx].[sum:Calculation_204069365706162187:qk]' included-values='non-null' />
          <slices>
            <column>[federated.005265b185p9051dufzqs1luelsx].[sum:Calculation_204069365706162187:qk]</column>
            <column>[federated.005265b185p9051dufzqs1luelsx].[none:Average monthly precipitation:qk]</column>
            <column>[federated.005265b185p9051dufzqs1luelsx].[American]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_204069365706162187:qk]' scope='rows' value='avg amount_sqkm' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
          </pane>
        </panes>
        <rows>[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_204069365706162187:qk]</rows>
        <cols>[federated.005265b185p9051dufzqs1luelsx].[none:Average monthly precipitation:qk]</cols>
        <pages>
          <column>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_624874456275681281:nk]</column>
        </pages>
      </table>
      <simple-id uuid='{1F129F97-9942-43D5-B67D-BFADC14059DC}' />
    </worksheet>
    <worksheet name='rain_unit_asia'>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections)' name='federated.005265b185p9051dufzqs1luelsx' />
          </datasources>
          <datasource-dependencies datasource='federated.005265b185p9051dufzqs1luelsx'>
            <column datatype='string' name='[Area_Code]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;228&quot;' value='55.749966000000001' />
                <semantic-value key='&quot;248&quot;' value='44.816670500000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;228&quot;' value='37.617037000000003' />
                <semantic-value key='&quot;248&quot;' value='20.447811300000001' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Average monthly precipitation]' role='measure' type='quantitative' />
            <column caption='amount' datatype='real' name='[Calculation_1633399295923511297]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF(ISNULL([Statistics]),[Value],{ FIXED [Area_Code],[year]: AVG([Value])})' />
            </column>
            <column caption='Asia_region' datatype='string' name='[Calculation_204069365610815491]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [East_Asia] then &quot;East_Asia&quot;&#13;&#10;ELSEIF [South_Esatern_Asia] THEN &quot;Southeast_Asia&quot;&#13;&#10;ELSEIF [South_Asia] then &quot;South_Asia&quot;&#13;&#10;ELSEIF [West_Asia] then &quot;West_Asia&quot;&#13;&#10;ELSEIF [Central_Asia] then &quot;Central_Asia&quot;&#13;&#10;ELSEIF [North_Asia] THEN &quot;North_Asia&quot;&#13;&#10;else &quot;other&quot;&#13;&#10;end' />
            </column>
            <column caption='agri_area' datatype='real' name='[Calculation_204069365620584457]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([land]*[per])/100' />
            </column>
            <column caption='amount_sqkm' datatype='real' name='[Calculation_204069365706162187]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1633399295923511297]/[Calculation_204069365620584457]' />
            </column>
            <column datatype='string' name='[Statistics]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_204069365706162187]' derivation='Avg' name='[avg:Calculation_204069365706162187:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[land]' role='measure' type='quantitative' />
            <column-instance column='[Average monthly precipitation]' derivation='None' name='[none:Average monthly precipitation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_204069365610815491]' derivation='None' name='[none:Calculation_204069365610815491:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[per]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_204069365706162187]' derivation='Sum' name='[sum:Calculation_204069365706162187:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.005265b185p9051dufzqs1luelsx].[Asia]' />
          <filter class='quantitative' column='[federated.005265b185p9051dufzqs1luelsx].[none:Average monthly precipitation:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.005265b185p9051dufzqs1luelsx].[sum:Calculation_204069365706162187:qk]' included-values='non-null' />
          <slices>
            <column>[federated.005265b185p9051dufzqs1luelsx].[sum:Calculation_204069365706162187:qk]</column>
            <column>[federated.005265b185p9051dufzqs1luelsx].[none:Average monthly precipitation:qk]</column>
            <column>[federated.005265b185p9051dufzqs1luelsx].[Asia]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_204069365706162187:qk]' scope='rows' value='avg amount_sqkm' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
          </pane>
        </panes>
        <rows>[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_204069365706162187:qk]</rows>
        <cols>[federated.005265b185p9051dufzqs1luelsx].[none:Average monthly precipitation:qk]</cols>
        <pages>
          <column>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069365610815491:nk]</column>
        </pages>
      </table>
      <simple-id uuid='{A103CF7E-22F5-4BD7-BB71-C5E29649B0F4}' />
    </worksheet>
    <worksheet name='rain_unit_con'>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections)' name='federated.005265b185p9051dufzqs1luelsx' />
          </datasources>
          <datasource-dependencies datasource='federated.005265b185p9051dufzqs1luelsx'>
            <column datatype='string' name='[Area_Code]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;228&quot;' value='55.749966000000001' />
                <semantic-value key='&quot;248&quot;' value='44.816670500000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;228&quot;' value='37.617037000000003' />
                <semantic-value key='&quot;248&quot;' value='20.447811300000001' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Average monthly precipitation]' role='measure' type='quantitative' />
            <column caption='amount' datatype='real' name='[Calculation_1633399295923511297]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF(ISNULL([Statistics]),[Value],{ FIXED [Area_Code],[year]: AVG([Value])})' />
            </column>
            <column caption='agri_area' datatype='real' name='[Calculation_204069365620584457]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([land]*[per])/100' />
            </column>
            <column caption='amount_sqkm' datatype='real' name='[Calculation_204069365706162187]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1633399295923511297]/[Calculation_204069365620584457]' />
            </column>
            <column caption='continent' datatype='string' name='[Calculation_2151031778112688129]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Africa]THEN &apos;Africa&apos;&#13;&#10;ELSEIF [American] then &apos;America&apos;&#13;&#10;ELSEIF [Asia] then &apos;Asia&apos;&#13;&#10;ELSEIF [Europe] then &apos;Europe&apos;&#13;&#10;ELSEIF [Oceania] then &apos;Oceania&apos;&#13;&#10;ELSE &apos;other&apos;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Statistics]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_204069365706162187]' derivation='Avg' name='[avg:Calculation_204069365706162187:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[land]' role='measure' type='quantitative' />
            <column-instance column='[Average monthly precipitation]' derivation='None' name='[none:Average monthly precipitation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2151031778112688129]' derivation='None' name='[none:Calculation_2151031778112688129:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[per]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_204069365706162187]' derivation='Sum' name='[sum:Calculation_204069365706162187:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.005265b185p9051dufzqs1luelsx].[none:Average monthly precipitation:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.005265b185p9051dufzqs1luelsx].[sum:Calculation_204069365706162187:qk]' included-values='non-null' />
          <slices>
            <column>[federated.005265b185p9051dufzqs1luelsx].[sum:Calculation_204069365706162187:qk]</column>
            <column>[federated.005265b185p9051dufzqs1luelsx].[none:Average monthly precipitation:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_204069365706162187:qk]' scope='rows' value='avg amount_sqkm' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
          </pane>
        </panes>
        <rows>[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_204069365706162187:qk]</rows>
        <cols>[federated.005265b185p9051dufzqs1luelsx].[none:Average monthly precipitation:qk]</cols>
        <pages>
          <column>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_2151031778112688129:nk]</column>
        </pages>
      </table>
      <simple-id uuid='{74673F01-B942-46E3-BE6D-ABBD003482C6}' />
    </worksheet>
    <worksheet name='rainfall_amount'>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections)' name='federated.005265b185p9051dufzqs1luelsx' />
          </datasources>
          <datasource-dependencies datasource='federated.005265b185p9051dufzqs1luelsx'>
            <column datatype='string' name='[Area_Code]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;228&quot;' value='55.749966000000001' />
                <semantic-value key='&quot;248&quot;' value='44.816670500000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;228&quot;' value='37.617037000000003' />
                <semantic-value key='&quot;248&quot;' value='20.447811300000001' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Average monthly precipitation]' role='measure' type='quantitative' />
            <column caption='amount' datatype='real' name='[Calculation_1633399295923511297]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF(ISNULL([Statistics]),[Value],{ FIXED [Area_Code],[year]: AVG([Value])})' />
            </column>
            <column datatype='string' name='[Statistics]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1633399295923511297]' derivation='Avg' name='[avg:Calculation_1633399295923511297:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Average monthly precipitation]' derivation='None' name='[none:Average monthly precipitation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1633399295923511297]' derivation='Sum' name='[sum:Calculation_1633399295923511297:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.005265b185p9051dufzqs1luelsx].[none:Average monthly precipitation:qk]' included-values='non-null' />
          <slices>
            <column>[federated.005265b185p9051dufzqs1luelsx].[none:Average monthly precipitation:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]' scope='rows' value='avg amount' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.005265b185p9051dufzqs1luelsx].[sum:Calculation_1633399295923511297:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
          </pane>
        </panes>
        <rows>([federated.005265b185p9051dufzqs1luelsx].[sum:Calculation_1633399295923511297:qk] + [federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk])</rows>
        <cols>[federated.005265b185p9051dufzqs1luelsx].[none:Average monthly precipitation:qk]</cols>
      </table>
      <simple-id uuid='{8C83FD38-A01E-4B52-A0BB-8B8305C08DF5}' />
    </worksheet>
    <worksheet name='temp_amoumt_america'>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections)' name='federated.005265b185p9051dufzqs1luelsx' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.005265b185p9051dufzqs1luelsx'>
            <column datatype='string' name='[Area_Code]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;228&quot;' value='55.749966000000001' />
                <semantic-value key='&quot;248&quot;' value='44.816670500000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;228&quot;' value='37.617037000000003' />
                <semantic-value key='&quot;248&quot;' value='20.447811300000001' />
              </semantic-values>
            </column>
            <column caption='amount' datatype='real' name='[Calculation_1633399295923511297]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF(ISNULL([Statistics]),[Value],{ FIXED [Area_Code],[year]: AVG([Value])})' />
            </column>
            <column caption='avg_temp_year' datatype='real' name='[Calculation_204069364967424000]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{fixed [Area_Code],[year]:AVG([Temperature - (Celsius)])}' />
            </column>
            <column caption='amount_temp' datatype='real' name='[Calculation_204069364967735297]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Calculation_204069364967424000]:sum([Calculation_1633399295923511297])}' />
            </column>
            <column caption='America_region' datatype='string' name='[Calculation_624874456275681281]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Area_Code Set] then &quot;North_America&quot;&#13;&#10;ELSEIF [Area_Code Set 2] then &quot;Latin_America&quot;&#13;&#10;ELSEIF [Area_Code Set 3] then &quot;South_America&quot;&#13;&#10;ELSE &quot;other&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Statistics]' role='dimension' type='nominal' />
            <column datatype='real' name='[Temperature - (Celsius)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_204069364967735297]' derivation='Avg' name='[avg:Calculation_204069364967735297:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_204069364967424000]' derivation='None' name='[none:Calculation_204069364967424000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_624874456275681281]' derivation='None' name='[none:Calculation_624874456275681281:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_204069364967735297]' derivation='Sum' name='[sum:Calculation_204069364967735297:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.005265b185p9051dufzqs1luelsx].[American]' />
          <filter class='quantitative' column='[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069364967424000:qk]' included-values='non-null' />
          <slices>
            <column>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069364967424000:qk]</column>
            <column>[federated.005265b185p9051dufzqs1luelsx].[American]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_204069364967735297:qk]' scope='rows' value='avg amount_temp' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
            <format attr='map-snap-zoom' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.005265b185p9051dufzqs1luelsx].[sum:Calculation_204069364967735297:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_204069364967735297:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
          </pane>
        </panes>
        <rows>([federated.005265b185p9051dufzqs1luelsx].[sum:Calculation_204069364967735297:qk] + [federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_204069364967735297:qk])</rows>
        <cols>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069364967424000:qk]</cols>
        <pages>
          <column>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_624874456275681281:nk]</column>
        </pages>
      </table>
      <simple-id uuid='{20C5CF42-91AF-4D86-970A-2C6F7CFE970B}' />
    </worksheet>
    <worksheet name='temp_amoumt_asia'>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections)' name='federated.005265b185p9051dufzqs1luelsx' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.005265b185p9051dufzqs1luelsx'>
            <column datatype='string' name='[Area_Code]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;228&quot;' value='55.749966000000001' />
                <semantic-value key='&quot;248&quot;' value='44.816670500000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;228&quot;' value='37.617037000000003' />
                <semantic-value key='&quot;248&quot;' value='20.447811300000001' />
              </semantic-values>
            </column>
            <column caption='amount' datatype='real' name='[Calculation_1633399295923511297]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF(ISNULL([Statistics]),[Value],{ FIXED [Area_Code],[year]: AVG([Value])})' />
            </column>
            <column caption='avg_temp_year' datatype='real' name='[Calculation_204069364967424000]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{fixed [Area_Code],[year]:AVG([Temperature - (Celsius)])}' />
            </column>
            <column caption='amount_temp' datatype='real' name='[Calculation_204069364967735297]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Calculation_204069364967424000]:sum([Calculation_1633399295923511297])}' />
            </column>
            <column caption='Asia_region' datatype='string' name='[Calculation_204069365610815491]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [East_Asia] then &quot;East_Asia&quot;&#13;&#10;ELSEIF [South_Esatern_Asia] THEN &quot;Southeast_Asia&quot;&#13;&#10;ELSEIF [South_Asia] then &quot;South_Asia&quot;&#13;&#10;ELSEIF [West_Asia] then &quot;West_Asia&quot;&#13;&#10;ELSEIF [Central_Asia] then &quot;Central_Asia&quot;&#13;&#10;ELSEIF [North_Asia] THEN &quot;North_Asia&quot;&#13;&#10;else &quot;other&quot;&#13;&#10;end' />
            </column>
            <column datatype='string' name='[Statistics]' role='dimension' type='nominal' />
            <column datatype='real' name='[Temperature - (Celsius)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_204069364967735297]' derivation='Avg' name='[avg:Calculation_204069364967735297:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_204069364967424000]' derivation='None' name='[none:Calculation_204069364967424000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_204069365610815491]' derivation='None' name='[none:Calculation_204069365610815491:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_204069364967735297]' derivation='Sum' name='[sum:Calculation_204069364967735297:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.005265b185p9051dufzqs1luelsx].[Asia]' />
          <filter class='quantitative' column='[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069364967424000:qk]' included-values='non-null' />
          <slices>
            <column>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069364967424000:qk]</column>
            <column>[federated.005265b185p9051dufzqs1luelsx].[Asia]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_204069364967735297:qk]' scope='rows' value='avg amount_temp' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
            <format attr='map-snap-zoom' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.005265b185p9051dufzqs1luelsx].[sum:Calculation_204069364967735297:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_204069364967735297:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
          </pane>
        </panes>
        <rows>([federated.005265b185p9051dufzqs1luelsx].[sum:Calculation_204069364967735297:qk] + [federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_204069364967735297:qk])</rows>
        <cols>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069364967424000:qk]</cols>
        <pages>
          <column>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069365610815491:nk]</column>
        </pages>
      </table>
      <simple-id uuid='{2275EFCA-4B0D-48CF-ADAE-62AF1CF9F0F0}' />
    </worksheet>
    <worksheet name='temp_amoumt_continent'>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections)' name='federated.005265b185p9051dufzqs1luelsx' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.005265b185p9051dufzqs1luelsx'>
            <column datatype='string' name='[Area_Code]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;228&quot;' value='55.749966000000001' />
                <semantic-value key='&quot;248&quot;' value='44.816670500000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;228&quot;' value='37.617037000000003' />
                <semantic-value key='&quot;248&quot;' value='20.447811300000001' />
              </semantic-values>
            </column>
            <column caption='amount' datatype='real' name='[Calculation_1633399295923511297]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF(ISNULL([Statistics]),[Value],{ FIXED [Area_Code],[year]: AVG([Value])})' />
            </column>
            <column caption='avg_temp_year' datatype='real' name='[Calculation_204069364967424000]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{fixed [Area_Code],[year]:AVG([Temperature - (Celsius)])}' />
            </column>
            <column caption='amount_temp' datatype='real' name='[Calculation_204069364967735297]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Calculation_204069364967424000]:sum([Calculation_1633399295923511297])}' />
            </column>
            <column caption='continent' datatype='string' name='[Calculation_2151031778112688129]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Africa]THEN &apos;Africa&apos;&#13;&#10;ELSEIF [American] then &apos;America&apos;&#13;&#10;ELSEIF [Asia] then &apos;Asia&apos;&#13;&#10;ELSEIF [Europe] then &apos;Europe&apos;&#13;&#10;ELSEIF [Oceania] then &apos;Oceania&apos;&#13;&#10;ELSE &apos;other&apos;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Statistics]' role='dimension' type='nominal' />
            <column datatype='real' name='[Temperature - (Celsius)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_204069364967735297]' derivation='Avg' name='[avg:Calculation_204069364967735297:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_204069364967424000]' derivation='None' name='[none:Calculation_204069364967424000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2151031778112688129]' derivation='None' name='[none:Calculation_2151031778112688129:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_204069364967735297]' derivation='Sum' name='[sum:Calculation_204069364967735297:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069364967424000:qk]' included-values='non-null' />
          <slices>
            <column>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069364967424000:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_204069364967735297:qk]' scope='rows' value='avg amount_temp' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
            <format attr='map-snap-zoom' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.005265b185p9051dufzqs1luelsx].[sum:Calculation_204069364967735297:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_204069364967735297:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
          </pane>
        </panes>
        <rows>([federated.005265b185p9051dufzqs1luelsx].[sum:Calculation_204069364967735297:qk] + [federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_204069364967735297:qk])</rows>
        <cols>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069364967424000:qk]</cols>
        <pages>
          <column>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_2151031778112688129:nk]</column>
        </pages>
      </table>
      <simple-id uuid='{8B318BF1-1DB6-40F5-90F8-1F6539B9EE76}' />
    </worksheet>
    <worksheet name='temp_unit_america'>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections)' name='federated.005265b185p9051dufzqs1luelsx' />
          </datasources>
          <datasource-dependencies datasource='federated.005265b185p9051dufzqs1luelsx'>
            <column datatype='string' name='[Area_Code]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;228&quot;' value='55.749966000000001' />
                <semantic-value key='&quot;248&quot;' value='44.816670500000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;228&quot;' value='37.617037000000003' />
                <semantic-value key='&quot;248&quot;' value='20.447811300000001' />
              </semantic-values>
            </column>
            <column caption='amount' datatype='real' name='[Calculation_1633399295923511297]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF(ISNULL([Statistics]),[Value],{ FIXED [Area_Code],[year]: AVG([Value])})' />
            </column>
            <column caption='avg_temp_year' datatype='real' name='[Calculation_204069364967424000]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{fixed [Area_Code],[year]:AVG([Temperature - (Celsius)])}' />
            </column>
            <column caption='agri_area' datatype='real' name='[Calculation_204069365620584457]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([land]*[per])/100' />
            </column>
            <column caption='amount_sqkm' datatype='real' name='[Calculation_204069365706162187]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1633399295923511297]/[Calculation_204069365620584457]' />
            </column>
            <column caption='America_region' datatype='string' name='[Calculation_624874456275681281]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Area_Code Set] then &quot;North_America&quot;&#13;&#10;ELSEIF [Area_Code Set 2] then &quot;Latin_America&quot;&#13;&#10;ELSEIF [Area_Code Set 3] then &quot;South_America&quot;&#13;&#10;ELSE &quot;other&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Statistics]' role='dimension' type='nominal' />
            <column datatype='real' name='[Temperature - (Celsius)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_204069365706162187]' derivation='Avg' name='[avg:Calculation_204069365706162187:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[land]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_204069364967424000]' derivation='None' name='[none:Calculation_204069364967424000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_624874456275681281]' derivation='None' name='[none:Calculation_624874456275681281:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[per]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_204069365706162187]' derivation='Sum' name='[sum:Calculation_204069365706162187:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.005265b185p9051dufzqs1luelsx].[American]' />
          <filter class='quantitative' column='[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069364967424000:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.005265b185p9051dufzqs1luelsx].[sum:Calculation_204069365706162187:qk]' included-values='non-null' />
          <slices>
            <column>[federated.005265b185p9051dufzqs1luelsx].[sum:Calculation_204069365706162187:qk]</column>
            <column>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069364967424000:qk]</column>
            <column>[federated.005265b185p9051dufzqs1luelsx].[American]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_204069365706162187:qk]' scope='rows' value='avg amount_sqkm' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
          </pane>
        </panes>
        <rows>[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_204069365706162187:qk]</rows>
        <cols>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069364967424000:qk]</cols>
        <pages>
          <column>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_624874456275681281:nk]</column>
        </pages>
      </table>
      <simple-id uuid='{B4E692E7-7AEE-4108-816B-2F235B6C9EA6}' />
    </worksheet>
    <worksheet name='temp_unit_amount'>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections)' name='federated.005265b185p9051dufzqs1luelsx' />
          </datasources>
          <datasource-dependencies datasource='federated.005265b185p9051dufzqs1luelsx'>
            <column datatype='string' name='[Area_Code]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;228&quot;' value='55.749966000000001' />
                <semantic-value key='&quot;248&quot;' value='44.816670500000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;228&quot;' value='37.617037000000003' />
                <semantic-value key='&quot;248&quot;' value='20.447811300000001' />
              </semantic-values>
            </column>
            <column caption='amount' datatype='real' name='[Calculation_1633399295923511297]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF(ISNULL([Statistics]),[Value],{ FIXED [Area_Code],[year]: AVG([Value])})' />
            </column>
            <column caption='avg_temp_year' datatype='real' name='[Calculation_204069364967424000]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{fixed [Area_Code],[year]:AVG([Temperature - (Celsius)])}' />
            </column>
            <column caption='agri_area' datatype='real' name='[Calculation_204069365620584457]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([land]*[per])/100' />
            </column>
            <column caption='amount_sqkm' datatype='real' name='[Calculation_204069365706162187]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1633399295923511297]/[Calculation_204069365620584457]' />
            </column>
            <column datatype='string' name='[Statistics]' role='dimension' type='nominal' />
            <column datatype='real' name='[Temperature - (Celsius)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_204069365706162187]' derivation='Avg' name='[avg:Calculation_204069365706162187:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[land]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_204069364967424000]' derivation='None' name='[none:Calculation_204069364967424000:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[per]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_204069365706162187]' derivation='Sum' name='[sum:Calculation_204069365706162187:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069364967424000:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.005265b185p9051dufzqs1luelsx].[sum:Calculation_204069365706162187:qk]' included-values='non-null' />
          <slices>
            <column>[federated.005265b185p9051dufzqs1luelsx].[sum:Calculation_204069365706162187:qk]</column>
            <column>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069364967424000:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_204069365706162187:qk]' scope='rows' value='avg amount_sqkm' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
          </pane>
        </panes>
        <rows>[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_204069365706162187:qk]</rows>
        <cols>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069364967424000:qk]</cols>
      </table>
      <simple-id uuid='{C4E1433E-3D9E-4242-B4E4-C7B4E8D19846}' />
    </worksheet>
    <worksheet name='temp_unit_amount_con'>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections)' name='federated.005265b185p9051dufzqs1luelsx' />
          </datasources>
          <datasource-dependencies datasource='federated.005265b185p9051dufzqs1luelsx'>
            <column datatype='string' name='[Area_Code]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;228&quot;' value='55.749966000000001' />
                <semantic-value key='&quot;248&quot;' value='44.816670500000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;228&quot;' value='37.617037000000003' />
                <semantic-value key='&quot;248&quot;' value='20.447811300000001' />
              </semantic-values>
            </column>
            <column caption='amount' datatype='real' name='[Calculation_1633399295923511297]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF(ISNULL([Statistics]),[Value],{ FIXED [Area_Code],[year]: AVG([Value])})' />
            </column>
            <column caption='avg_temp_year' datatype='real' name='[Calculation_204069364967424000]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{fixed [Area_Code],[year]:AVG([Temperature - (Celsius)])}' />
            </column>
            <column caption='agri_area' datatype='real' name='[Calculation_204069365620584457]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([land]*[per])/100' />
            </column>
            <column caption='amount_sqkm' datatype='real' name='[Calculation_204069365706162187]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1633399295923511297]/[Calculation_204069365620584457]' />
            </column>
            <column caption='continent' datatype='string' name='[Calculation_2151031778112688129]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Africa]THEN &apos;Africa&apos;&#13;&#10;ELSEIF [American] then &apos;America&apos;&#13;&#10;ELSEIF [Asia] then &apos;Asia&apos;&#13;&#10;ELSEIF [Europe] then &apos;Europe&apos;&#13;&#10;ELSEIF [Oceania] then &apos;Oceania&apos;&#13;&#10;ELSE &apos;other&apos;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Statistics]' role='dimension' type='nominal' />
            <column datatype='real' name='[Temperature - (Celsius)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_204069365706162187]' derivation='Avg' name='[avg:Calculation_204069365706162187:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[land]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_204069364967424000]' derivation='None' name='[none:Calculation_204069364967424000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2151031778112688129]' derivation='None' name='[none:Calculation_2151031778112688129:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[per]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_204069365706162187]' derivation='Sum' name='[sum:Calculation_204069365706162187:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069364967424000:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.005265b185p9051dufzqs1luelsx].[sum:Calculation_204069365706162187:qk]' included-values='non-null' />
          <slices>
            <column>[federated.005265b185p9051dufzqs1luelsx].[sum:Calculation_204069365706162187:qk]</column>
            <column>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069364967424000:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_204069365706162187:qk]' scope='rows' value='avg amount_sqkm' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
          </pane>
        </panes>
        <rows>[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_204069365706162187:qk]</rows>
        <cols>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069364967424000:qk]</cols>
        <pages>
          <column>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_2151031778112688129:nk]</column>
        </pages>
      </table>
      <simple-id uuid='{E86BD907-CCFC-4F9D-8441-BEC1F0EC0AA7}' />
    </worksheet>
    <worksheet name='temp_unit_asia'>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections)' name='federated.005265b185p9051dufzqs1luelsx' />
          </datasources>
          <datasource-dependencies datasource='federated.005265b185p9051dufzqs1luelsx'>
            <column datatype='string' name='[Area_Code]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;228&quot;' value='55.749966000000001' />
                <semantic-value key='&quot;248&quot;' value='44.816670500000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;228&quot;' value='37.617037000000003' />
                <semantic-value key='&quot;248&quot;' value='20.447811300000001' />
              </semantic-values>
            </column>
            <column caption='amount' datatype='real' name='[Calculation_1633399295923511297]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF(ISNULL([Statistics]),[Value],{ FIXED [Area_Code],[year]: AVG([Value])})' />
            </column>
            <column caption='avg_temp_year' datatype='real' name='[Calculation_204069364967424000]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{fixed [Area_Code],[year]:AVG([Temperature - (Celsius)])}' />
            </column>
            <column caption='Asia_region' datatype='string' name='[Calculation_204069365610815491]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [East_Asia] then &quot;East_Asia&quot;&#13;&#10;ELSEIF [South_Esatern_Asia] THEN &quot;Southeast_Asia&quot;&#13;&#10;ELSEIF [South_Asia] then &quot;South_Asia&quot;&#13;&#10;ELSEIF [West_Asia] then &quot;West_Asia&quot;&#13;&#10;ELSEIF [Central_Asia] then &quot;Central_Asia&quot;&#13;&#10;ELSEIF [North_Asia] THEN &quot;North_Asia&quot;&#13;&#10;else &quot;other&quot;&#13;&#10;end' />
            </column>
            <column caption='agri_area' datatype='real' name='[Calculation_204069365620584457]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([land]*[per])/100' />
            </column>
            <column caption='amount_sqkm' datatype='real' name='[Calculation_204069365706162187]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1633399295923511297]/[Calculation_204069365620584457]' />
            </column>
            <column datatype='string' name='[Statistics]' role='dimension' type='nominal' />
            <column datatype='real' name='[Temperature - (Celsius)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_204069365706162187]' derivation='Avg' name='[avg:Calculation_204069365706162187:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[land]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_204069364967424000]' derivation='None' name='[none:Calculation_204069364967424000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_204069365610815491]' derivation='None' name='[none:Calculation_204069365610815491:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[per]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_204069365706162187]' derivation='Sum' name='[sum:Calculation_204069365706162187:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.005265b185p9051dufzqs1luelsx].[Asia]' />
          <filter class='quantitative' column='[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069364967424000:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.005265b185p9051dufzqs1luelsx].[sum:Calculation_204069365706162187:qk]' included-values='non-null' />
          <slices>
            <column>[federated.005265b185p9051dufzqs1luelsx].[sum:Calculation_204069365706162187:qk]</column>
            <column>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069364967424000:qk]</column>
            <column>[federated.005265b185p9051dufzqs1luelsx].[Asia]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_204069365706162187:qk]' scope='rows' value='avg amount_sqkm' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
          </pane>
        </panes>
        <rows>[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_204069365706162187:qk]</rows>
        <cols>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069364967424000:qk]</cols>
        <pages>
          <column>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069365610815491:nk]</column>
        </pages>
      </table>
      <simple-id uuid='{70170B2A-B020-452A-BBC8-A56D55FB2027}' />
    </worksheet>
    <worksheet name='temp_unit_year'>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections)' name='federated.005265b185p9051dufzqs1luelsx' />
          </datasources>
          <datasource-dependencies datasource='federated.005265b185p9051dufzqs1luelsx'>
            <column datatype='string' name='[Area_Code]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;228&quot;' value='55.749966000000001' />
                <semantic-value key='&quot;248&quot;' value='44.816670500000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;228&quot;' value='37.617037000000003' />
                <semantic-value key='&quot;248&quot;' value='20.447811300000001' />
              </semantic-values>
            </column>
            <column caption='amount' datatype='real' name='[Calculation_1633399295923511297]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF(ISNULL([Statistics]),[Value],{ FIXED [Area_Code],[year]: AVG([Value])})' />
            </column>
            <column caption='avg_temp_year' datatype='real' name='[Calculation_204069364967424000]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{fixed [Area_Code],[year]:AVG([Temperature - (Celsius)])}' />
            </column>
            <column caption='agri_area' datatype='real' name='[Calculation_204069365620584457]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([land]*[per])/100' />
            </column>
            <column caption='amount_sqkm' datatype='real' name='[Calculation_204069365706162187]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1633399295923511297]/[Calculation_204069365620584457]' />
            </column>
            <column datatype='string' name='[Statistics]' role='dimension' type='nominal' />
            <column datatype='real' name='[Temperature - (Celsius)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_204069365706162187]' derivation='Avg' name='[avg:Calculation_204069365706162187:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[land]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_204069364967424000]' derivation='None' name='[none:Calculation_204069364967424000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column datatype='real' name='[per]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_204069365706162187]' derivation='Sum' name='[sum:Calculation_204069365706162187:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069364967424000:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.005265b185p9051dufzqs1luelsx].[sum:Calculation_204069365706162187:qk]' included-values='non-null' />
          <slices>
            <column>[federated.005265b185p9051dufzqs1luelsx].[sum:Calculation_204069365706162187:qk]</column>
            <column>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069364967424000:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_204069365706162187:qk]' scope='rows' value='avg amount_sqkm' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
          </pane>
        </panes>
        <rows>[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_204069365706162187:qk]</rows>
        <cols>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069364967424000:qk]</cols>
        <pages>
          <column>[federated.005265b185p9051dufzqs1luelsx].[none:Year:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{C8E915FC-8DD8-42FB-89B5-A94917039C1F}' />
    </worksheet>
    <worksheet name='temperature_amount'>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections)' name='federated.005265b185p9051dufzqs1luelsx' />
          </datasources>
          <datasource-dependencies datasource='federated.005265b185p9051dufzqs1luelsx'>
            <column datatype='string' name='[Area_Code]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;228&quot;' value='55.749966000000001' />
                <semantic-value key='&quot;248&quot;' value='44.816670500000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;228&quot;' value='37.617037000000003' />
                <semantic-value key='&quot;248&quot;' value='20.447811300000001' />
              </semantic-values>
            </column>
            <column caption='amount' datatype='real' name='[Calculation_1633399295923511297]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF(ISNULL([Statistics]),[Value],{ FIXED [Area_Code],[year]: AVG([Value])})' />
            </column>
            <column caption='avg_temp_year' datatype='real' name='[Calculation_204069364967424000]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{fixed [Area_Code],[year]:AVG([Temperature - (Celsius)])}' />
            </column>
            <column caption='amount_temp' datatype='real' name='[Calculation_204069364967735297]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Calculation_204069364967424000]:sum([Calculation_1633399295923511297])}' />
            </column>
            <column datatype='string' name='[Statistics]' role='dimension' type='nominal' />
            <column datatype='real' name='[Temperature - (Celsius)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_204069364967735297]' derivation='Avg' name='[avg:Calculation_204069364967735297:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_204069364967424000]' derivation='None' name='[none:Calculation_204069364967424000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_204069364967735297]' derivation='Sum' name='[sum:Calculation_204069364967735297:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069364967424000:qk]' included-values='non-null' />
          <slices>
            <column>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069364967424000:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_204069364967735297:qk]' scope='rows' value='avg amount_temp' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.005265b185p9051dufzqs1luelsx].[sum:Calculation_204069364967735297:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_204069364967735297:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
          </pane>
        </panes>
        <rows>([federated.005265b185p9051dufzqs1luelsx].[sum:Calculation_204069364967735297:qk] + [federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_204069364967735297:qk])</rows>
        <cols>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069364967424000:qk]</cols>
      </table>
      <simple-id uuid='{2BF3E40F-580D-4B3C-B12D-21C69C58A868}' />
    </worksheet>
    <worksheet name='top_rain_amount'>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections)' name='federated.005265b185p9051dufzqs1luelsx' />
          </datasources>
          <datasource-dependencies datasource='federated.005265b185p9051dufzqs1luelsx'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='string' name='[Area_Code]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;228&quot;' value='55.749966000000001' />
                <semantic-value key='&quot;248&quot;' value='44.816670500000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;228&quot;' value='37.617037000000003' />
                <semantic-value key='&quot;248&quot;' value='20.447811300000001' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Average monthly precipitation]' role='measure' type='quantitative' />
            <column caption='amount' datatype='real' name='[Calculation_1633399295923511297]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF(ISNULL([Statistics]),[Value],{ FIXED [Area_Code],[year]: AVG([Value])})' />
            </column>
            <column caption='top_temp' datatype='real' name='[Calculation_204069365583814658]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Area],[year]: MAX([Temperature - (Celsius)])}' />
            </column>
            <column datatype='string' name='[Statistics]' role='dimension' type='nominal' />
            <column datatype='real' name='[Temperature - (Celsius)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Average monthly precipitation]' derivation='Attribute' name='[attr:Average monthly precipitation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_204069365583814658]' derivation='Attribute' name='[attr:Calculation_204069365583814658:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1633399295923511297]' derivation='Avg' name='[avg:Calculation_1633399295923511297:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Average monthly precipitation]' derivation='None' name='[none:Average monthly precipitation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_204069365583814658]' derivation='None' name='[none:Calculation_204069365583814658:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.005265b185p9051dufzqs1luelsx].[attr:Average monthly precipitation:qk]' included-values='in-range'>
            <min>0.058190211999999998</min>
            <max>38.995535779999997</max>
          </filter>
          <filter class='quantitative' column='[federated.005265b185p9051dufzqs1luelsx].[attr:Calculation_204069365583814658:qk]' included-values='in-range'>
            <min>11.1</min>
            <max>35.799999999999997</max>
          </filter>
          <slices>
            <column>[federated.005265b185p9051dufzqs1luelsx].[attr:Average monthly precipitation:qk]</column>
            <column>[federated.005265b185p9051dufzqs1luelsx].[attr:Calculation_204069365583814658:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]' num-steps='7' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#9e3d22</color>
                <color>#a7513a</color>
                <color>#b16854</color>
                <color>#bb8171</color>
                <color>#c59c91</color>
                <color>#cfb9b4</color>
                <color>#d9d9d9</color>
                <color>#b4c0cb</color>
                <color>#92a9be</color>
                <color>#7493b1</color>
                <color>#587fa4</color>
                <color>#406d97</color>
                <color>#2b5c8a</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]' />
              <size column='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.005265b185p9051dufzqs1luelsx].[none:Average monthly precipitation:qk]</rows>
        <cols>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069365583814658:qk]</cols>
      </table>
      <simple-id uuid='{40764CCF-5173-4BE4-9E58-ACDF78C50F48}' />
    </worksheet>
    <worksheet name='top_rain_amount_asia'>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections)' name='federated.005265b185p9051dufzqs1luelsx' />
          </datasources>
          <datasource-dependencies datasource='federated.005265b185p9051dufzqs1luelsx'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='string' name='[Area_Code]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;228&quot;' value='55.749966000000001' />
                <semantic-value key='&quot;248&quot;' value='44.816670500000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;228&quot;' value='37.617037000000003' />
                <semantic-value key='&quot;248&quot;' value='20.447811300000001' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Average monthly precipitation]' role='measure' type='quantitative' />
            <column caption='amount' datatype='real' name='[Calculation_1633399295923511297]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF(ISNULL([Statistics]),[Value],{ FIXED [Area_Code],[year]: AVG([Value])})' />
            </column>
            <column caption='top_temp' datatype='real' name='[Calculation_204069365583814658]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Area],[year]: MAX([Temperature - (Celsius)])}' />
            </column>
            <column caption='Asia_region' datatype='string' name='[Calculation_204069365610815491]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [East_Asia] then &quot;East_Asia&quot;&#13;&#10;ELSEIF [South_Esatern_Asia] THEN &quot;Southeast_Asia&quot;&#13;&#10;ELSEIF [South_Asia] then &quot;South_Asia&quot;&#13;&#10;ELSEIF [West_Asia] then &quot;West_Asia&quot;&#13;&#10;ELSEIF [Central_Asia] then &quot;Central_Asia&quot;&#13;&#10;ELSEIF [North_Asia] THEN &quot;North_Asia&quot;&#13;&#10;else &quot;other&quot;&#13;&#10;end' />
            </column>
            <column caption='continent' datatype='string' name='[Calculation_2151031778112688129]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Africa]THEN &apos;Africa&apos;&#13;&#10;ELSEIF [American] then &apos;America&apos;&#13;&#10;ELSEIF [Asia] then &apos;Asia&apos;&#13;&#10;ELSEIF [Europe] then &apos;Europe&apos;&#13;&#10;ELSEIF [Oceania] then &apos;Oceania&apos;&#13;&#10;ELSE &apos;other&apos;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Statistics]' role='dimension' type='nominal' />
            <column datatype='real' name='[Temperature - (Celsius)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Average monthly precipitation]' derivation='Attribute' name='[attr:Average monthly precipitation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_204069365583814658]' derivation='Attribute' name='[attr:Calculation_204069365583814658:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1633399295923511297]' derivation='Avg' name='[avg:Calculation_1633399295923511297:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Average monthly precipitation]' derivation='None' name='[none:Average monthly precipitation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_204069365583814658]' derivation='None' name='[none:Calculation_204069365583814658:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_204069365610815491]' derivation='None' name='[none:Calculation_204069365610815491:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2151031778112688129]' derivation='None' name='[none:Calculation_2151031778112688129:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.005265b185p9051dufzqs1luelsx].[attr:Average monthly precipitation:qk]' included-values='in-range'>
            <min>0.058190211999999998</min>
            <max>38.995535779999997</max>
          </filter>
          <filter class='quantitative' column='[federated.005265b185p9051dufzqs1luelsx].[attr:Calculation_204069365583814658:qk]' included-values='in-range'>
            <min>11.1</min>
            <max>35.799999999999997</max>
          </filter>
          <filter class='categorical' column='[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_2151031778112688129:nk]'>
            <groupfilter function='member' level='[none:Calculation_2151031778112688129:nk]' member='&quot;Asia&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.005265b185p9051dufzqs1luelsx].[attr:Average monthly precipitation:qk]</column>
            <column>[federated.005265b185p9051dufzqs1luelsx].[attr:Calculation_204069365583814658:qk]</column>
            <column>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_2151031778112688129:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]' num-steps='7' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#9e3d22</color>
                <color>#a7513a</color>
                <color>#b16854</color>
                <color>#bb8171</color>
                <color>#c59c91</color>
                <color>#cfb9b4</color>
                <color>#d9d9d9</color>
                <color>#b4c0cb</color>
                <color>#92a9be</color>
                <color>#7493b1</color>
                <color>#587fa4</color>
                <color>#406d97</color>
                <color>#2b5c8a</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]' />
              <size column='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.005265b185p9051dufzqs1luelsx].[none:Average monthly precipitation:qk]</rows>
        <cols>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069365583814658:qk]</cols>
        <pages>
          <column>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069365610815491:nk]</column>
        </pages>
      </table>
      <simple-id uuid='{8568F875-0A0A-4E67-915F-5DD3C522ED41}' />
    </worksheet>
    <worksheet name='top_rain_amount_con'>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections)' name='federated.005265b185p9051dufzqs1luelsx' />
          </datasources>
          <datasource-dependencies datasource='federated.005265b185p9051dufzqs1luelsx'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='string' name='[Area_Code]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;228&quot;' value='55.749966000000001' />
                <semantic-value key='&quot;248&quot;' value='44.816670500000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;228&quot;' value='37.617037000000003' />
                <semantic-value key='&quot;248&quot;' value='20.447811300000001' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Average monthly precipitation]' role='measure' type='quantitative' />
            <column caption='amount' datatype='real' name='[Calculation_1633399295923511297]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF(ISNULL([Statistics]),[Value],{ FIXED [Area_Code],[year]: AVG([Value])})' />
            </column>
            <column caption='top_temp' datatype='real' name='[Calculation_204069365583814658]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Area],[year]: MAX([Temperature - (Celsius)])}' />
            </column>
            <column caption='continent' datatype='string' name='[Calculation_2151031778112688129]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Africa]THEN &apos;Africa&apos;&#13;&#10;ELSEIF [American] then &apos;America&apos;&#13;&#10;ELSEIF [Asia] then &apos;Asia&apos;&#13;&#10;ELSEIF [Europe] then &apos;Europe&apos;&#13;&#10;ELSEIF [Oceania] then &apos;Oceania&apos;&#13;&#10;ELSE &apos;other&apos;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Statistics]' role='dimension' type='nominal' />
            <column datatype='real' name='[Temperature - (Celsius)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Average monthly precipitation]' derivation='Attribute' name='[attr:Average monthly precipitation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_204069365583814658]' derivation='Attribute' name='[attr:Calculation_204069365583814658:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1633399295923511297]' derivation='Avg' name='[avg:Calculation_1633399295923511297:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Average monthly precipitation]' derivation='None' name='[none:Average monthly precipitation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_204069365583814658]' derivation='None' name='[none:Calculation_204069365583814658:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2151031778112688129]' derivation='None' name='[none:Calculation_2151031778112688129:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.005265b185p9051dufzqs1luelsx].[attr:Average monthly precipitation:qk]' included-values='in-range'>
            <min>0.058190211999999998</min>
            <max>38.995535779999997</max>
          </filter>
          <filter class='quantitative' column='[federated.005265b185p9051dufzqs1luelsx].[attr:Calculation_204069365583814658:qk]' included-values='in-range'>
            <min>11.1</min>
            <max>35.799999999999997</max>
          </filter>
          <slices>
            <column>[federated.005265b185p9051dufzqs1luelsx].[attr:Average monthly precipitation:qk]</column>
            <column>[federated.005265b185p9051dufzqs1luelsx].[attr:Calculation_204069365583814658:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]' num-steps='7' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#9e3d22</color>
                <color>#a7513a</color>
                <color>#b16854</color>
                <color>#bb8171</color>
                <color>#c59c91</color>
                <color>#cfb9b4</color>
                <color>#d9d9d9</color>
                <color>#b4c0cb</color>
                <color>#92a9be</color>
                <color>#7493b1</color>
                <color>#587fa4</color>
                <color>#406d97</color>
                <color>#2b5c8a</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]' />
              <size column='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.005265b185p9051dufzqs1luelsx].[none:Average monthly precipitation:qk]</rows>
        <cols>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069365583814658:qk]</cols>
        <pages>
          <column>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_2151031778112688129:nk]</column>
        </pages>
      </table>
      <simple-id uuid='{9F970674-C227-48D0-8015-F5C05BEDE149}' />
    </worksheet>
    <worksheet name='top_tem'>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections)' name='federated.005265b185p9051dufzqs1luelsx' />
          </datasources>
          <datasource-dependencies datasource='federated.005265b185p9051dufzqs1luelsx'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='string' name='[Area_Code]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;228&quot;' value='55.749966000000001' />
                <semantic-value key='&quot;248&quot;' value='44.816670500000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;228&quot;' value='37.617037000000003' />
                <semantic-value key='&quot;248&quot;' value='20.447811300000001' />
              </semantic-values>
            </column>
            <column caption='amount' datatype='real' name='[Calculation_1633399295923511297]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF(ISNULL([Statistics]),[Value],{ FIXED [Area_Code],[year]: AVG([Value])})' />
            </column>
            <column caption='top_temp' datatype='real' name='[Calculation_204069365583814658]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Area],[year]: MAX([Temperature - (Celsius)])}' />
            </column>
            <column datatype='string' name='[Statistics]' role='dimension' type='nominal' />
            <column datatype='real' name='[Temperature - (Celsius)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1633399295923511297]' derivation='Avg' name='[avg:Calculation_1633399295923511297:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_204069365583814658]' derivation='None' name='[none:Calculation_204069365583814658:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1633399295923511297]' derivation='Sum' name='[sum:Calculation_1633399295923511297:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069365583814658:qk]' included-values='non-null' />
          <slices>
            <column>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069365583814658:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]' scope='rows' value='avg amount' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.005265b185p9051dufzqs1luelsx].[sum:Calculation_1633399295923511297:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
          </pane>
        </panes>
        <rows>([federated.005265b185p9051dufzqs1luelsx].[sum:Calculation_1633399295923511297:qk] + [federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk])</rows>
        <cols>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069365583814658:qk]</cols>
      </table>
      <simple-id uuid='{E637E8BD-7362-4FE0-B59C-3B3ABBF50D3B}' />
    </worksheet>
    <worksheet name='top_tem_america'>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections)' name='federated.005265b185p9051dufzqs1luelsx' />
          </datasources>
          <datasource-dependencies datasource='federated.005265b185p9051dufzqs1luelsx'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='string' name='[Area_Code]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;228&quot;' value='55.749966000000001' />
                <semantic-value key='&quot;248&quot;' value='44.816670500000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;228&quot;' value='37.617037000000003' />
                <semantic-value key='&quot;248&quot;' value='20.447811300000001' />
              </semantic-values>
            </column>
            <column caption='amount' datatype='real' name='[Calculation_1633399295923511297]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF(ISNULL([Statistics]),[Value],{ FIXED [Area_Code],[year]: AVG([Value])})' />
            </column>
            <column caption='top_temp' datatype='real' name='[Calculation_204069365583814658]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Area],[year]: MAX([Temperature - (Celsius)])}' />
            </column>
            <column caption='America_region' datatype='string' name='[Calculation_624874456275681281]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Area_Code Set] then &quot;North_America&quot;&#13;&#10;ELSEIF [Area_Code Set 2] then &quot;Latin_America&quot;&#13;&#10;ELSEIF [Area_Code Set 3] then &quot;South_America&quot;&#13;&#10;ELSE &quot;other&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Statistics]' role='dimension' type='nominal' />
            <column datatype='real' name='[Temperature - (Celsius)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1633399295923511297]' derivation='Avg' name='[avg:Calculation_1633399295923511297:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_204069365583814658]' derivation='None' name='[none:Calculation_204069365583814658:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_624874456275681281]' derivation='None' name='[none:Calculation_624874456275681281:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1633399295923511297]' derivation='Sum' name='[sum:Calculation_1633399295923511297:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.005265b185p9051dufzqs1luelsx].[American]' />
          <filter class='quantitative' column='[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069365583814658:qk]' included-values='non-null' />
          <slices>
            <column>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069365583814658:qk]</column>
            <column>[federated.005265b185p9051dufzqs1luelsx].[American]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]' scope='rows' value='avg amount' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.005265b185p9051dufzqs1luelsx].[sum:Calculation_1633399295923511297:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
          </pane>
        </panes>
        <rows>([federated.005265b185p9051dufzqs1luelsx].[sum:Calculation_1633399295923511297:qk] + [federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk])</rows>
        <cols>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069365583814658:qk]</cols>
        <pages>
          <column>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_624874456275681281:nk]</column>
        </pages>
      </table>
      <simple-id uuid='{AA005FE5-9A55-4276-9991-091EB53F0A48}' />
    </worksheet>
    <worksheet name='top_tem_asia'>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections)' name='federated.005265b185p9051dufzqs1luelsx' />
          </datasources>
          <datasource-dependencies datasource='federated.005265b185p9051dufzqs1luelsx'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='string' name='[Area_Code]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;228&quot;' value='55.749966000000001' />
                <semantic-value key='&quot;248&quot;' value='44.816670500000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;228&quot;' value='37.617037000000003' />
                <semantic-value key='&quot;248&quot;' value='20.447811300000001' />
              </semantic-values>
            </column>
            <column caption='amount' datatype='real' name='[Calculation_1633399295923511297]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF(ISNULL([Statistics]),[Value],{ FIXED [Area_Code],[year]: AVG([Value])})' />
            </column>
            <column caption='top_temp' datatype='real' name='[Calculation_204069365583814658]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Area],[year]: MAX([Temperature - (Celsius)])}' />
            </column>
            <column caption='Asia_region' datatype='string' name='[Calculation_204069365610815491]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [East_Asia] then &quot;East_Asia&quot;&#13;&#10;ELSEIF [South_Esatern_Asia] THEN &quot;Southeast_Asia&quot;&#13;&#10;ELSEIF [South_Asia] then &quot;South_Asia&quot;&#13;&#10;ELSEIF [West_Asia] then &quot;West_Asia&quot;&#13;&#10;ELSEIF [Central_Asia] then &quot;Central_Asia&quot;&#13;&#10;ELSEIF [North_Asia] THEN &quot;North_Asia&quot;&#13;&#10;else &quot;other&quot;&#13;&#10;end' />
            </column>
            <column datatype='string' name='[Statistics]' role='dimension' type='nominal' />
            <column datatype='real' name='[Temperature - (Celsius)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1633399295923511297]' derivation='Avg' name='[avg:Calculation_1633399295923511297:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_204069365583814658]' derivation='None' name='[none:Calculation_204069365583814658:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_204069365610815491]' derivation='None' name='[none:Calculation_204069365610815491:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1633399295923511297]' derivation='Sum' name='[sum:Calculation_1633399295923511297:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.005265b185p9051dufzqs1luelsx].[Asia]' />
          <filter class='quantitative' column='[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069365583814658:qk]' included-values='non-null' />
          <slices>
            <column>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069365583814658:qk]</column>
            <column>[federated.005265b185p9051dufzqs1luelsx].[Asia]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]' scope='rows' value='avg amount' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.005265b185p9051dufzqs1luelsx].[sum:Calculation_1633399295923511297:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
          </pane>
        </panes>
        <rows>([federated.005265b185p9051dufzqs1luelsx].[sum:Calculation_1633399295923511297:qk] + [federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk])</rows>
        <cols>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069365583814658:qk]</cols>
        <pages>
          <column>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069365610815491:nk]</column>
        </pages>
      </table>
      <simple-id uuid='{13074600-BCED-47E0-9ECD-57E525B43266}' />
    </worksheet>
    <worksheet name='top_tem_con'>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections)' name='federated.005265b185p9051dufzqs1luelsx' />
          </datasources>
          <datasource-dependencies datasource='federated.005265b185p9051dufzqs1luelsx'>
            <column datatype='string' name='[Area]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='string' name='[Area_Code]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;228&quot;' value='55.749966000000001' />
                <semantic-value key='&quot;248&quot;' value='44.816670500000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;228&quot;' value='37.617037000000003' />
                <semantic-value key='&quot;248&quot;' value='20.447811300000001' />
              </semantic-values>
            </column>
            <column caption='amount' datatype='real' name='[Calculation_1633399295923511297]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF(ISNULL([Statistics]),[Value],{ FIXED [Area_Code],[year]: AVG([Value])})' />
            </column>
            <column caption='top_temp' datatype='real' name='[Calculation_204069365583814658]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Area],[year]: MAX([Temperature - (Celsius)])}' />
            </column>
            <column caption='continent' datatype='string' name='[Calculation_2151031778112688129]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Africa]THEN &apos;Africa&apos;&#13;&#10;ELSEIF [American] then &apos;America&apos;&#13;&#10;ELSEIF [Asia] then &apos;Asia&apos;&#13;&#10;ELSEIF [Europe] then &apos;Europe&apos;&#13;&#10;ELSEIF [Oceania] then &apos;Oceania&apos;&#13;&#10;ELSE &apos;other&apos;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Statistics]' role='dimension' type='nominal' />
            <column datatype='real' name='[Temperature - (Celsius)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1633399295923511297]' derivation='Avg' name='[avg:Calculation_1633399295923511297:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_204069365583814658]' derivation='None' name='[none:Calculation_204069365583814658:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2151031778112688129]' derivation='None' name='[none:Calculation_2151031778112688129:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1633399295923511297]' derivation='Sum' name='[sum:Calculation_1633399295923511297:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069365583814658:qk]' included-values='non-null' />
          <slices>
            <column>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069365583814658:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]' scope='rows' value='avg amount' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.005265b185p9051dufzqs1luelsx].[sum:Calculation_1633399295923511297:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
          </pane>
        </panes>
        <rows>([federated.005265b185p9051dufzqs1luelsx].[sum:Calculation_1633399295923511297:qk] + [federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk])</rows>
        <cols>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069365583814658:qk]</cols>
        <pages>
          <column>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_2151031778112688129:nk]</column>
        </pages>
      </table>
      <simple-id uuid='{893359E9-6EFB-4781-9F2E-337CCCA7A81E}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='map_annual_avg'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='8' />
      </viewpoint>
      <simple-id uuid='{1415ABA7-2F7B-4ED8-AE5E-16058DBCE1E2}' />
    </window>
    <window class='worksheet' name='map_annual_avg (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='140'>
            <card pane-specification-id='0' param='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]' type='size' />
            <card looped='1' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>1985</bucket>
          </multibucket>
        </current-page>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{EAF1F03A-3C02-495F-8D7B-A7F74623F986}' />
    </window>
    <window class='worksheet' name='amount_year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.005265b185p9051dufzqs1luelsx].[none:Area_Code:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{349C580D-57A4-454A-937B-65E3FFC6546F}' />
    </window>
    <window class='worksheet' name='temperature_amount'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{2D9C0DAD-922D-4236-8E5E-BAC8B201D421}' />
    </window>
    <window class='worksheet' name='rainfall_amount'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{C801C209-EC1A-4FC2-A93D-22913E9054B8}' />
    </window>
    <window class='worksheet' name='temp_amoumt_continent'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Europe&quot;</bucket>
          </multibucket>
        </current-page>
      </viewpoint>
      <simple-id uuid='{4A5527CC-6B6E-4A7F-9717-19741D706857}' />
    </window>
    <window class='worksheet' name='temp_amoumt_asia'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;West_Asia&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.005265b185p9051dufzqs1luelsx].[South_Asia]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[West_Asia]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6A6B1B8C-7F74-49FE-A102-504FCD4E2BB8}' />
    </window>
    <window class='worksheet' name='temp_amoumt_america'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;South_America&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.005265b185p9051dufzqs1luelsx].[American]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_624874456275681281:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{859CBAAA-AD12-4E2E-B8B2-53DE856C2C7A}' />
    </window>
    <window class='worksheet' name='rain_amount_continent'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Africa&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.005265b185p9051dufzqs1luelsx].[Africa]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[American]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[Europe]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[Oceania]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3BD13DCA-B188-4D25-B5D2-4A9F11675C31}' />
    </window>
    <window class='worksheet' name='rain_amount_asia'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;West_Asia&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.005265b185p9051dufzqs1luelsx].[Central_Asia]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[East_Asia]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[South_Esatern_Asia]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[West_Asia]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E091607F-0D76-428F-9356-9B19F30C01C4}' />
    </window>
    <window class='worksheet' name='rain_amount_america'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;South_America&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.005265b185p9051dufzqs1luelsx].[American]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[Area_Code Set 2]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[Area_Code Set 3]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[Area_Code Set]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[Central_Asia]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[East_Asia]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[South_Esatern_Asia]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[West_Asia]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_624874456275681281:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F07D6CC3-38A5-4EB0-B65F-B6A6015E65C3}' />
    </window>
    <window class='worksheet' name='top_tem'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{A6CA9282-76B9-43A0-8ACE-0919A5FB9B11}' />
    </window>
    <window class='worksheet' name='top_tem_con'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Africa&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.005265b185p9051dufzqs1luelsx].[Africa]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[American]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[Europe]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[Oceania]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{83D3D57B-2330-418B-983F-1FFD813AFDBF}' />
    </window>
    <window class='worksheet' name='top_tem_asia'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;West_Asia&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.005265b185p9051dufzqs1luelsx].[Central_Asia]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[South_Esatern_Asia]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[West_Asia]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4824AFD4-0443-45BD-AB5C-2C9250F9E8CB}' />
    </window>
    <window class='worksheet' name='top_tem_america'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;South_America&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.005265b185p9051dufzqs1luelsx].[American]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[Area_Code Set 2]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[Area_Code Set 3]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[Area_Code Set]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[Central_Asia]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[North_Asia]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[South_Esatern_Asia]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[West_Asia]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_624874456275681281:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F44429A7-14F4-4E50-8E0E-914D601489EC}' />
    </window>
    <window class='worksheet' name='top_rain_amount'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{B8DD8C93-41E3-4985-A7A1-311F3059FC9B}' />
    </window>
    <window class='worksheet' name='top_rain_amount_con'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Oceania&quot;</bucket>
          </multibucket>
        </current-page>
      </viewpoint>
      <simple-id uuid='{CB8A701C-0A78-4754-922C-0B0368CB844E}' />
    </window>
    <window class='worksheet' name='top_rain_amount_asia'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;South_Asia&quot;</bucket>
          </multibucket>
        </current-page>
      </viewpoint>
      <simple-id uuid='{4D8FC6E1-1A5B-4125-9E89-F04F3BDC597A}' />
    </window>
    <window class='worksheet' name='avg_rain_amount'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BBF460CD-1FF5-4310-A3C8-CCF68EDD745A}' />
    </window>
    <window class='worksheet' name='avg_rain_amount_con'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Oceania&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{13175556-27A5-4137-A9A1-FE3582BB7100}' />
    </window>
    <window class='worksheet' name='avg_rain_amount_asia'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;West_Asia&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_1633399295923511297:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F188CB64-5BA3-4A2E-8080-9F0936342F6F}' />
    </window>
    <window class='worksheet' name='pie_continent_each_year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_2151031778112688129:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D79450D0-CCD2-4E78-9773-6AEF840F5684}' />
    </window>
    <window class='worksheet' name='pie_continent_each_year (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_2151031778112688129:nk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>1961</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.005265b185p9051dufzqs1luelsx].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C4DAEDC6-C7BF-4652-AF06-027C9DC80BBB}' />
    </window>
    <window class='worksheet' name='area_amount'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{E0E56F12-EB70-459C-B4F0-8755965F3115}' />
    </window>
    <window class='worksheet' name='area_amount_year'>
      <cards>
        <edge name='left'>
          <strip size='122'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='125'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2018</bucket>
          </multibucket>
        </current-page>
      </viewpoint>
      <simple-id uuid='{56FCA4B1-46C0-4CFA-8A3F-723772C6946C}' />
    </window>
    <window class='worksheet' name='area_amount_asia'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;West_Asia&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.005265b185p9051dufzqs1luelsx].[Central_Asia]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[South_Esatern_Asia]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[West_Asia]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{08BF0EBD-BDD9-4484-B9B7-0C235144936D}' />
    </window>
    <window class='worksheet' name='area_amount_continent'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='139'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Africa&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.005265b185p9051dufzqs1luelsx].[Africa]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[American]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[Europe]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[Oceania]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_2151031778112688129:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F5A63F9D-4CE0-49DF-A330-5A054D87B96D}' />
    </window>
    <window class='worksheet' name='temp_unit_amount'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{1B81170A-C784-4E31-839A-67F4ED89D7AE}' />
    </window>
    <window class='worksheet' name='temp_unit_amount_con'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Oceania&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.005265b185p9051dufzqs1luelsx].[Africa]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[American]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[Asia]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[Europe]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[Oceania]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{50DBDD29-1511-4328-898B-53DF79E2EE27}' />
    </window>
    <window class='worksheet' name='temp_unit_asia'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;West_Asia&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.005265b185p9051dufzqs1luelsx].[Central_Asia]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[East_Asia]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[South_Asia]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[South_Esatern_Asia]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[West_Asia]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C7C9B36A-FE8E-4BBE-BC54-07DCC1194BB1}' />
    </window>
    <window class='worksheet' name='temp_unit_america'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;South_America&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.005265b185p9051dufzqs1luelsx].[American]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[Area_Code Set 2]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[Area_Code Set 3]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[Area_Code Set]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[Central_Asia]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[East_Asia]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[South_Asia]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[South_Esatern_Asia]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[West_Asia]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_624874456275681281:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0B71F612-C392-4891-9DB6-4F8D258FF1C5}' />
    </window>
    <window class='worksheet' name='temp_unit_year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2018</bucket>
          </multibucket>
        </current-page>
      </viewpoint>
      <simple-id uuid='{50077FCB-4820-4AC4-8EE8-4B547B974038}' />
    </window>
    <window class='worksheet' name='rain_unit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{4B5517DF-BC99-4DC4-A84B-F20E5084EC3F}' />
    </window>
    <window class='worksheet' name='rain_unit_con'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Oceania&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.005265b185p9051dufzqs1luelsx].[Africa]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[American]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[Asia]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[Europe]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[Oceania]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0BC72455-CB58-4258-ADA4-3872200A9933}' />
    </window>
    <window class='worksheet' name='rain_unit_asia'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;West_Asia&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.005265b185p9051dufzqs1luelsx].[Central_Asia]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[East_Asia]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[South_Asia]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[South_Esatern_Asia]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[West_Asia]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{533D2AD2-D7C0-41B8-B690-F194963F48DE}' />
    </window>
    <window class='worksheet' name='rain_unit_america'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;South_America&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.005265b185p9051dufzqs1luelsx].[American]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[Area_Code Set 2]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[Area_Code Set 3]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[Area_Code Set]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[Central_Asia]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[East_Asia]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[South_Esatern_Asia]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[West_Asia]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_624874456275681281:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4C09DAB1-241D-4FA4-8767-9C852E8BA262}' />
    </window>
    <window class='worksheet' name='avg_rain_unit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_204069365706162187:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_204069365706162187:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{701CF7CA-1DB9-412F-9780-DB0DBEB6F3B8}' />
    </window>
    <window class='worksheet' name='avg_rain_unit_con'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_204069365706162187:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_204069365706162187:qk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;America&quot;</bucket>
          </multibucket>
        </current-page>
      </viewpoint>
      <simple-id uuid='{08CCE28B-3B14-4E89-890B-C8F612A4B17A}' />
    </window>
    <window class='worksheet' name='avg_rain_unit_asia'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_204069365706162187:qk]' type='color' />
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_204069365706162187:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;West_Asia&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.005265b185p9051dufzqs1luelsx].[:Measure Names]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[Asia]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069365610815491:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F94F5638-E9F9-4EB4-9A34-54516BCEC7B9}' />
    </window>
    <window class='worksheet' maximized='true' name='avg_rain_unit_america'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_204069365706162187:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.005265b185p9051dufzqs1luelsx].[avg:Calculation_204069365706162187:qk]' type='size' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;South_America&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.005265b185p9051dufzqs1luelsx].[:Measure Names]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[American]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[Asia]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_204069365610815491:nk]</field>
            <field>[federated.005265b185p9051dufzqs1luelsx].[none:Calculation_624874456275681281:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{154077EC-218F-44E4-AE80-EAED07F61FB5}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='amount_year' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='area_amount' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='area_amount_asia' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='area_amount_continent' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO3daXAj6X3f8W837osEeAEkwfsecu717EqWLctnxbVynEq5XKm8yKuUk5fJ
      +1TpZaryKuUkVX6TvIirUpGtii1bcmzZu7KkXc3szPA+ABIkwQMgQYAgifvo7icvODu240HT
      NeYOKfXzeSVC/200SPy6//10P88oQgiBJFmUetM7IEk3SQZAsjQZAOlGZfe3OTor39j722/s
      naWfeEc7a/zJ937I+7/4IZ56llw+T+fIXXae/yV6cJRf+2Cab37zDwlE7/D1X/oSiqIAUL04
      4Q/+8I/on/2A5A/+F4lakH/zb3+Hle9/B1v3BF+928t3P35GVXfyW//8Q9z2L+44Lc8A0ttT
      7fSGO/njP/pTEks/Zq/kQjlaIOsY4HT9GelinY6eXn74F9+lpBmv/7PkyjPSZRsd7X7uTM/y
      tX/ym9QSn3DhG+V49Sn7h7vk6WDAkeNZPPPFfoQvdOvSTzHBX/35nxMdn8FjF6huPz/35Se4
      7DZiSy9wBDrYXfiEghqip92P/rf+y67hWR6MdfHtb38Xf8DHxfkZmiHYWHyOw9+FzaaAoXNW
      LON2frFNimyBpLek8NWvfZXn8RQ/95UP6Glz0O624b//8/xKpkyu7uTB+4/53ve+z8MvfYXS
      ySG7J3kAQu0Bzs+LfP03PmRysJ3NP/0zQo8+5GvnTc40H21OO/uJNaIfvM97Y11f7Ke4qfsA
      hmGgqvIEZBWNeo16owmA2+PDYdLXN4o5jso2hiKhL3y/biwAuq5js9lu4q0l6TV5CJYsTQZA
      sjQZAMnSZAAkS5MBkCxNBkCyNBkAydJkACRLkwGQLE0GQLI0GQDJ0mQAJEuTAZAsTQZAsjQZ
      AMnS3joAQggMw3j9v3VdwzAECIGh6xiG8ep1A/G6RkeuwiXdJm8dgPTeNt/7wacAZA6TrG/E
      +MGnzyidHfH0+Tw/+uQp9eoF3/rjP6GuGVTyR3zzW3+GccV2Jeldeus5wf3D45yWagBEBkYI
      dpxzvpwgc5hm5uF7aIeLpM91hvs6SWcLGGc5BqJhEALdMF6fPSTpJl3LpPhCLsXabpYn7z0k
      vbmEYQgMXWCzKfi7opRzByiqHa+jAYCqqggh5Jxg6ca9dQD2tmOkUylcngDFTBK3P0Q8scPU
      0DALyy8QioOfGXSwW3fiqNewt4+h6ClQFBRAUZTXCyVJ0k2Rk+IlS5M9iGRpMgCSpckASJYm
      AyBZmgyAZGkyAJKlyQBIliYDIFmaDIBkaTIAkqXJAEiWJgMgWZoMgGRpMgCSpckASJYmAyBZ
      mgyAZGkyAJKlvXUAGrUyid19AJq1Mmsry2TyBYShsR1fZ/fgGEOrsx7bxBBgNGusrsflsijS
      rfLWAbg4vyCXPwVgY22doclpklsxMsk4ajBK7STJebnKXnKHQq3J6fEByf2MXBhLulXeelWI
      7kgfR7k8AA0BfpcT1aZSLFTpGWjDqHrIFhpEB/pIHRxDvUakw3u5QpxhXK4SdzPz8SXptWtZ
      F8ilKpTrTYQhaGv3cnZWoH5Wp3vUyXEjiFbKYHO2oyp1FEV5vRqEXBVCumn/qHWB6tUq8e09
      pu5Ms7W5weDYFN0hLzubcRydAwR9HoRQUfwKii9Mo5RHrgQk3SZyXSDJ0uQwqGRpMgCSpckA
      SJYmAyBZmgyAZGkyAJKlyQBIliYDIFmaDIBkaTIAkqXJAEiWJgMgWZoMgGRpMgCSpckASJYm
      AyBZmgyAZGkyAJKlmQZgby+JphtULrJkzsot61K7mywsLvFyaZ16Kc+zZ5/x488WaNaKfOfP
      v0fTENQLOb79nb9Ev/aPIElvr+Wk+MOdGL/7336PX/61D8ltzxO493X+6Zen31h7dlFgaGSS
      zViMdHKX8Xvv0TxYJH3RpN3j4PisjJ47JtAWACEQgBBCLosi3biWAXC63EyMT9De1kbvVz7k
      zsxUy424XC4y6RSKzYlu6Kiqgt2mUNYNOvoGOD86QEGh3X05Cd4wjMv1gXR5PpBuVssA9PQP
      88HdCZ4uL2FXFVRviLujkTfWNmpVhMtPtVojPDrI6tI8eqPJe4/s7FQdKI1j7MFRGtUUyHWB
      pFvEdFmU3/+9/8JXf+tf0eNzYrc7sNnefMkghEGzqWGz27EpCpqmgWrDpiqv2hwBigqGgWKz
      oSCXRZFuB9MAfPzt32chWcDnsvGlX/4N7o31XtsbywBIt4HpynBDU/exBc8A6GjzvpMdkqR3
      yXQY1Odvo6uri9PdVRJHF+9qnyTpnTE9A6T3t9nYPSafzRPQtHe1T5L0zpieAUbHJ9BqJbon
      nvDz90fe1T5J0jtjGoA//oNv8uAXPiSsH/AXL7be1T5J0jtjGoChaIRPvv9XLG4dE+0Ovat9
      kqR3xnQYVKtX2N7eRXF6iUb78bqd1/bGchhUug1ML4L/5+/9Z+w9E/hdNhR3gIlo17vaL0l6
      J0xboP6eTs6KJSqVCpou/31H6aeP6RkgdVrm1//Zb9LldeL2+t/VPknSO2N6DZBY+YzTphu/
      y0YkOkxnu+/a3lheA0i3gekZoHiW4zsfv8QhGvzKb//OtQZAkm4D0wA8W4jxwZe+TMRV5PC8
      9YwwSfpJZXoR/Btf/5D7s2MsJfI8noy+q32SpHdG/jOpkqWZtkBbqy9IHGQRQmBzevnyV36W
      gNvxrvZNkr5wpi3Qj374I/pHJ3DXT0gmN/kf3/rLd7VfkvROmAZgZrSPP/vu/+XHi9tMjI0Q
      8LreWKc1KqwsL5FIpjC0OmvLi6xv7WI0q7xcWMIQoNfLfPZiEXk7TbpNTFsg3eZmfGyM99//
      F/R2BUFR3li3uREjOjqFz+3kaGeD4MAU9YNVcqUQ+WyGs3KdZu6A0/MSciEU6TYxDcCXf+lD
      4kuf8V//43/ga//y3/Or742/se7sPI/jKMXicY7+Nidhvwdvm5NsqUnvYD9Hh2loNulpd18u
      h2IY6Lou1wWSbpxpAJ7+1Z+SyNb47X/975geH25Z1xUKEYwMkD/N094RIJM5pZ6tMjjtINUI
      oBWPsbu7UGp1FLksinSLmA6Dli+yPH+5jC4EE3PvMRgOvrFOGBo7iS0CXf10h/wcJrex+bro
      7fRTrDZRmmUUbwfNcoFgR0guiyLdGqYB+O+/+5+o+CL024uEHn7IL9wdvLY3lgGQbgPzx6H7
      B3g4OUhs7whdPg4t/RQyPQN8/n8ZhoGqqigtRoHehjwDSLeB6UXw5194+UWVflrJfyBDsjQZ
      AMnSZAAkS5MBkCxNBkCyNBkAydJkACRLkwGQLE0GQLI0GQDJ0mQAJEuTAZAsTQZAsjQZAMnS
      ZAAkS7ueAAjBTuwFf/3pMpXzDJ98+owf/Ogp9eoF3/qjP6GuCypnx/zvP/wO+rW8oSRdD9MJ
      Mf9QteIpVdWPz6FzdHDInUdP0A4XSZ1r9PcEOcoV0PNZent7QAgMITAMOcVSunnXEoDPnj2j
      vbeXw8MM3pEeBCDE5TpabT1RiieHKIqK3/k3UyoVRbnWKZaS9DauJQA/+4u/hhA19LqbkdFu
      FhY+Q2DjSdTBTtWBKorY28cxmoegKKiKghACVZWXINLNksujS5YmD8GSpckASJYmAyBZmgyA
      ZGkyAJKlyQBIliYDIFmaDIBkaTIAkqXJAEiWJgMgWZoMgGRpMgCSpckASJYmAyBZmgyAZGky
      AJKlyQBIlnYtAWjUysTWV0ll8ghDJ5mIc3CUw9AabG3vIgQYWp3NrR3kWhDSbXItASgWigxP
      TLO3HSO7v4nm7eHicIuLSoWtzTjFukb++IB4Yp8bmYAsSS1cy6oQnd1hkltreINhLs7P6JkN
      YTS8ZC8aRKNhDg8zUK0Q6fQjhEA3DHRd54bm40vSa9cSgL3NFXR/H/f7OjneWaNQKFO/aNAx
      5OSk0YleyqA6/diUBoqivF4NQq4KId20awmArqiUT9OsFM6Ym5xkcyOGGojQ4XNjGKB4dFR/
      H41iDrkUlnSbyHWBJEuTw6CSpckASJYmAyBZmgyAZGkyAJKlyQBIliYDIFmaDIBkaTIAkqXJ
      AEiWJgMgWZoMgGRpMgCSpckASJZ27QHQGmUWX75kcTWG3ijzo0+foQtBs1rgr3/4VM4Jlm6V
      aw9AenuTyOQ9OpQymWKDRrVIrlDjJH1IXRNyTrB0q1zLjLC/rd7QaXc5cPpsnFY1wtEBsqkU
      6AZdfsd1v921+ubHa5wXa69/Ho928IuPRm5wj6Qv2rUHoKung/3kHo18lak5B/t1D0Yljd3X
      C7Xa1Ru4QT9Y2uPgpPD656/eH5IB+Cl37QEIRUbQ1SNskXv4vC6G+z2okSA4/ej1TnnVLd0q
      1x4AFIWucN/rH71uO+C6/MHh/zulO+kz8sXq6589Lgezw90kUnnOS39ztvC5HcwMdbN1eMpF
      uf76db/HyfRgF9/+JE4qV3z9erS7ja9/eZL/84MNjs/Kr18fCrfz6x9MsJ7MUqk3X78e8rsZ
      6+/4R3906SfPO58UL4TAeLUukKqq/J13V0AYRsvXFVWFf8TrigLGW7z+psn7rSb1/yS8LoRA
      CIGqql/I64ZxOdb3/7/eyk3+bq7/DHCFz9cFUhTljb8g41UAbvvrrfZfURQwNHa2t2no4AkE
      GR7oNa0XeoOd7V2ahsAf7GKgr8e0Xm/W2NndwzAEgY4e+iNdpvVavcJOch8hoL07Qm9XyPQL
      3ayW2Nk7RACd4T56Otpb1gPUShckD9IIoLt3gK6g/29+F2+QSe1xWiijKHZGxsZw2u0t911R
      FI4Pk5yVaqiqg9GxUeym9ZDe26VQbaDaXYyODpvWv/MAfK7V0UFVVYShk4itUW4KdENhdm4W
      t+PNS6hc1mvE11apGQoCO7OzMzjtJtvXG6yvrtLEBqqTudlp7Cb7Y2h1VpdXMVQ7isPD3TsT
      pvu/sbpK9+AEAY+TfCbJzr6DscGulvVry2v0jkzhczvIHCQ4yLgYDLe3qFdYXVtncHwGj8vG
      4c4mGZeHSMjXsn59fYORqTu47SrJ+AYur59On/Pv1V5+gQRr6zEm7szhsCkkVlfwtr1HwNEi
      7BisbWwyM3cXmyKIr6zie/wEb4sVb8onuxxXHEyNjqHVK6ytrvP44d2Wv5vz1BZ5LcD4aB+N
      aoH19U0e3JtuWX+yF6Ns62B0NEitlGcjtsO92fGW9TcWADMnyRiunjEmunxojRIr65s8vD/T
      sv4wsU5wYJpI0E2zesb6xg737775QwPsxNfpHZ+jw+ekXs6yHtvj3p3hlvXxtVVGZx/gd9mo
      FY5Yj6eZm+5vWe91Ozk+PkYL+jnJntM91LoWwO2yc5zJ0NHmJXdWZKD77385/069U+X45ISg
      z8VZoULHoPmf0WlXyGSytHnsnJcb9Lc4OFxSsNsEmZMcPqdCoWbgtJktZ6ZgUzQy2Rxum6Dc
      hDdk5TWHx0c5mSIfsFMrnmN3esz33eujcJQh74HS+Sl215uD/jm3x8v5YYY2p+Di9ASnu9O0
      /sYWxjJTPjtmZeuQjlA71VIBX0c/40ORlvUX2UNiyQyhYBuVwjntkRFG+t98xAU4PUqykz6j
      vc1P+eKMroFJBsLBlvWZgwQHuTJtPg+lizyR0Tn6Ov0t64UQ5I4POMpeMDAyRijgNf28Qggy
      qT1O8iWGxydo87qurD/a3yFXqDE6PoHfYx4YIQwOk9uclzXGJsbxuszvxwhhsLe9RakhGJ+Y
      aHn2fV1v6OwmNqnqNiYmxluefT9XKxdI7CTxhXoY7g+3bJU+VymesZ08oL2rl4He7itXFyyd
      59jdT9MRjtIX7jCtv5Wjkt5gmLtToxiaRnf/CGODYdP6tq5+7owPomsavUMTDPeZp74jMsTk
      cB+6phEdmyba8+Z243M90THGoj3ousHQ5By9HeZHoYPEOunTMp0dIXZjyxzny6b1u/EVTi7q
      dHa0s7kyT65gdr9EkFhfJF/R6Qj6WV+a56LSMK2PLc9TbCiE2jwsv3xJuaGb1q8uPKcmHLT7
      XMx/9py6YXaMFCy9fIZmcxNw23jx2UuaJuXNUpYXy5u0hTpoFLKsxHZNtg3V8yMW13cIdnRS
      Pk2zsbVvWl/MHrC6dUCos5PzTJKt3bRp/a0MQCGzx+p2mu5whEo+zfoVH/o0tU18P0tPJMzF
      yR7xnSPT+uNknN2jc8LhMKepBNv7WdP6g8Qah7ky4XA3mb0Nkulz0/pStc7A4ADhSJj+SCel
      YsW0vlJrMjAYJRyJEOlqp1wxv2FYbegMDESJRProavdSqTVN6+uaYGCgn0hvHyGfk1pTM6kW
      NHWVgehlfZtLpa6bBcBAE3ai/X309vfjtwsaJg981ctF2nr66I1EGBgcpFktme57rVQkFIkS
      CYcZGIhSr5jXV8slunoHXtX3Uy2bH3xu5TWArmt4fH58Pi9awE/5wuwPBpqm4fUH8Ht9NPw+
      TqvmXwhN1/EFQvh8PgJ+LwXtqu3r+NsC+Hx+/D4vtab59qdmZtlOJDjUDHyBDkaHuk3rp+/c
      IZHY4UA3aAt2MWTSjoHC9MwM29s7aIagvTPS8gL48/qZmWm2dxLoAkLhQTpMWyyVmTuT7CQ2
      MYCuoQkCpi2NjTvT4+xsxREohMem8Jl0TP7wCD2NJBsb69hsTu7M3THZNgT7x6ns7xLbyGBz
      eJi5M2Va3z04SX1vh42NI+xOLzPTo6b1t/IMEOobo9NR4/sff8TBaZ3ZKfPHEcJDk/iMCz76
      6CMyJZiZGDStj45OY6uc8NFHH5NvuJka7TWtH5mao5E/5KOPPqZMGxNXfKEL+RPyhQqGrpM7
      SVExbTngPJvholTB0DROjtNUm+YtSv7kiEKlhq5pHB+laehmz9gKssdpStU6utbkKJ1Gu6Kl
      OUmnqNQbaM0mqVQa80cYBUfpFLVGE63ZIJU+wuyqUmg1DlIZdN2gWi6QyZ6ZbBuMRoXUURbd
      EJQLebL5gml9s1bkKHOKbhgUz3OcnpufARC30NnRjni2sCZO83mxHV8VK7Gkaf3J/qZ4ubwh
      TvN5sbWxJDYSh6b1qZ11sbgWF/l8XsTXFsRmMmNan4yviNVYQuTzp2Jj+YXYPjg1rV9aeCk0
      wxBCCFErHou1eMq0fnHhpdBf1Rey+2JrL2tSbYjFhfnX9bmDhNjLXJjU62Jhfl4Yr+rTW+vi
      6KJ6Rf3C6/rk8qI4resm9ZqYn198/VNicV5caK2rz/fXxHb21fsbhph/uWCybSFOtpfFwVnj
      slxviIWFZdP6w80lkSk2L+u1qlhYXDetv5UtkKHruNwevF4vDa+HUsG8RTEMA5fHi9frpebx
      cFYzP+IauoHbE8Dr9eJxuyhf0QLphoHH53tV76Shm29/bCjKy+fPcTgcl/cx7t0zrR+O9vLi
      +QscDjsGdubumg2bKgz0dr+qt4HqYm4uYFKv0h/u4PnzFzjsNhSnl7t+8xYo0tXG8xcvcdgU
      VHcbgw6zcRQbPSEvz5+/wKaC099BwKQFauubYG9pifkD2+UgxMikybahc3CC5aVFTlQ7uqYz
      NG7eAoUHx1hZmSdlc9DUdMamzFusW9sCDXS42IzHqBoeZq/o43oGJwn7VeKxOE17GzOTA6b1
      /WMzhJw6sVgcPF1M/gNaIA9VYrFNHO19jLe4qfU5p8eLw6aiKApOjxen3Xzgzu31YrcpKIDL
      68VhOu4OHq8Xm6qgoOD2+bBd8Vf0er3YVBVFAa/Ph3rFOKLX60NVFEDB52893Ps5n9eHol7e
      tb2yXrXh87pe3XSz4fOa3wdQVAdetxNVVVFVG16P23zzdicelxNFVbHZHHhc5kPEtzIA9eIp
      mzsHqHYH+cwBh8enpvXl8wyJvTR2h51sKkk6e2FaX8il2T08wW63c3ywzckVw5T54332j0+x
      222kdrfIFeqm9bGNGHfuP+LBgweMRjxs7ZyY18e2mHvwmAcPH9LXppBMm/XFgvjWDvcfXdaH
      bDXSp2YjI4LN7X0ePHrEg4ePcNfPyZbMhk0NtnYPefT4EQ8fPYL8ERea2TWAzvb+EY8fP+bh
      o8fUM/uUTU6QpfQWWtsgDx884PGje2xtrJtsG/IHcezd4zy4f5+H92fY3Iib1meScfz9Uzy4
      f5/7c2NsxhKm9beyBTrPHjEw/YD+oAtDq7K0ustQX+ujbv7khLHZh3T7HeiNIiuxI6I9rUdS
      sic5Zu4/pM1tR6udsZY4IWJyY+v4JM/9h49w21Wa1Swbuyd0t7e+0O7qaGd5aRGv20m5WGT0
      zkPTz9sZ9LO8uIjH5aBUKjF1N2paHwx4WFxcxOO0UyxVmettfdcboM3rYHFpCZfDRrFU48GY
      2Z9dwe9WWVxcxmlXKNQEQ6ZnJBWPQ7C4uIRdhbJmY8LksOrpiJBf3GAl70dr1PG2mw8o+DvD
      bK6sUsn6adSqBDrN76q3d3azHFvhPOCjXi0TipgPoNzKAPQMT7OxuszJroqmC6Zn50zr+0cn
      WV9d4hAbuqEwM2dePzIxycrKAkJ1oAuVubuzpvVTU5MsL75EsV326PfumW+/KxwhdXxKpazh
      8IUImfbcl/VH2RgVvYmnvZOA1+xOrUJPOMLJ6RYVrUGgowevy+xOrUI4EiEX30FvKIS6e3Ff
      8ShEJBJhI7GH1lDoikQx7+Au6zd3D2kAPf0jpi2WzR2gq83DWaWCocNor/lNTqc3SMjvpFCp
      IIRCJGx+k9Md6CDgPqRcrYCwE+42G1K+pQEQho6uCxSbiqJraJr5RacwdHQDFLsKuo6u65h9
      NF3XMMTlg2JoOrrpsCDoWhMhQFVUMAx0Q5j26bGNTe4+foLLrlLKH7K1m2F6rPWjHPF4ggfv
      vY/DppA/2mEvdcZotNX8BMFmIsmjJ+9jVxWOk3HSpyWiXa0uhAVbOwe89+R9bKrCfmyFbClM
      T6BVKA22k2nef/99FEUhsTTPhdZLsOWFsM7uwQnvf/ABChCff0m5L4y/RSaL6S1EaIQns20I
      Q2N+YZXHjx+0/N3kD+K4IlM86fZiaDWWVjZ5+LD1ASiTjBEcmmU25EZvlFjZ2ObB/Tc/PAe3
      NAAne1t0j9+jt82JoddYXt0lZPIwXCqZYGD6AZ0+O3qzxOrGHvfvtR5d2NvZYWLuEQG3Db1x
      wVp8j3t3x1rWJ3aSzD18jMuuotVP2dg84O7sUMv67s52lhYX8LicVMslxmavboEWF+ZxOx1U
      KhWm7pm3QKGAm4WFBdwOO+VKjbmHrfcdoM3nYGFhAZfDRqnS5OFVLZBHZX5hEYdNoVQVDF/V
      AjkNFhYWsatQ0W2Mm5xgfJ0RTufXWc550ZoNfEHzM0CgM8LmyjLFYx/Neo32bvPfTXtnmKXY
      Enmfl3qtSmefeQt0Kx+Ga5TPmV/ewOV202w06B2eYCDcesZW5SLH8kYCl8tFo15ncOIOvZ1t
      LeuL+WPWNpO4XG4atRojd+7R0976gbXzk0NiuylcTieNWo2Ju4/p8LceXRCGzslxmkKpRqgn
      QmcwYPpAltaocXpewudSODotMzYy8GoU5o1bp9nUUFWF08wRhsNPuCtE6+fJBLlslkB7EJuq
      vp6LYUbXmhylDqjpKv3RfjzOqx6eExi6jgAa5SI2f4iWXZkQ5HMnOH0BMqkDIgOj+Nytty9e
      TaAyDJ1c7pRIJGK6/4ahYxhQOjshdVpifHwMl0nLZ/vGN77xDdNPdwNsTjfRgQF6e3vpj/bR
      qJTx+Vrf7rfZbWiawcDgAOVyhUikF6e9dV8shMrg8DBu1UBTnPRHurGZNK4Oh4OmZtDXG6Zc
      bdDfFzGtT6wv07T76e4Kkk1tU9Y9BAOth+/WVhYRep2l+AH9IQdndQdBf6t6wcZ6jKBTI5Yu
      oxcyCG8Qf8svkcHy/Dy501MuyjXag0HspuOmgoXnT/G2hUin0mQzGbr7+rC3/NIZbK2vcnSS
      JZvNsh3bIDg4gbfFSaacTZLIVtldX6Sjb4TDvSS9JtcBZ+kEHz9doloqsrG+jtMfItTeesDi
      aHudhqeD7Vic8ZE+NrdTptcNt3IYtJA95JNPf8zTp095+vQZa1t7pvWp3S3sXj8//OsfMTjU
      z/a2ef3+7jYNXSeRTBHpcBHfOjSt34rHaQu2sbS8wehgB5uJ1BWfQICi4nI6EcbVS4EJxcHI
      xCQTQwO0B/xopg+rKVSLeV4urBMdHaW7sx1NM38Pf7CLx+/9DEO9HawvL1Ksmz8MJxQnPZ1B
      XN4AvW0eKqbDoArlap3h0VFGR0eJRsxHdYTWJNgTZWJ8gr5IGJti3oCE+sZ4784IhlCIRIcY
      HWh9LQXgDwbZ20ogVIXcyTEO9xX3GW5jC9SsXrCTLjAx0g8YbKxvMmvy0FRqewNXeJzaeYa+
      cDsr8Qz350wmxKwvclpr4nJ3Mj3oZ+uowexE695yN75CQ3GRSh0zNthJ1dbD9HDrP7QQgtzx
      IbnzMuG+KG0+D3aTM1K9Usbm9l0OI16coriDJiM7AmEINE3D5nBQPDvD2x7E0fKoLihcFGlr
      v2wJDV1DKDbTM1i9fMFWMs3Y5CR2oaE6nNhM2g692UBHxemwU6+UUN3+lpNihNApXJQJtAVQ
      VYNc7oKuLpMFCYRA13UUxSAW32F6ZsqkPbz83VfLBQ4O07h8QQajEdP6WxkAEAjx+ZQ7QaPR
      xOls3XMbehPNUHE6bOjNOg1DxfMPmPRhGJf9t+p0m3yBAGFwflHE73OTyZ3TF+kx7UOr5SKV
      2uXNJr1ZJntmMDsz3LK+UipQfbVKRb18Rkn3MTnS6u60oFwsUGtcHsUr+WM0fx8jvaGW9cXC
      BY1XD9gVjvZx9E8RDbW65hEULs5pvjqr5Pe2CEw/IeJtHbD5Z5/SMFTGZx+gneziHLxDR4s/
      V/3imM/W9nG6nLz38D6bsQ1m7rQ+uFXPj1iIH6JqTeweN25fiDmThyML2QPWdzOIRh2nz4M3
      0MPMeOuD261sgUD5W18wxfTLD6DaHDhfzVqyOVxXfvkBFEXFZlNxvXpswbxYJbIhIuUAAACY
      SURBVBhsx+5w0d979Qymg81VkkdZcrkcp6d5zAdxYXdjmYPj3Kv6syvXT91aWyJ98qr+7Jwr
      RnGJrSxwnL2sz59fmD6tCbC6OE82d1l/dl40L8bA7m7jyZNHJFaXqNWbptuvF8+JTt1jerCL
      pY3tV0PWrRVyOUbnHuN02nnw4D6ibn7XvnB2xuS9x9icDh4/uItWMd///weI1Zqbc6sEuQAA
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='area_amount_year' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='avg_rain_amount' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='avg_rain_amount_asia' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='avg_rain_amount_con' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='avg_rain_unit' width='192'>
      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
      dgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='avg_rain_unit_america' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='avg_rain_unit_asia' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='avg_rain_unit_con' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAed0lEQVR4nO2dZ2BcV523n3unSTPqvVfLklzkJsdx4sRx4ji9ACEQQmCB5d2X8EJgly2w
      wIawLEuAQMBZ3hDSnF4IhhTiOM2925IsWcXqktU1Gkmj6XPvfnBBSqSxLGlmNJ7zfLE199x7
      zrkzv3vKv1xJVVUVgSBMkYPdAIEgmPhNAIqizOp8r9c7Ry2ZPm63O+B1QnD6Gow6VVWd9e9i
      Jni9Xqaa6PhNALOdWYXTzCwYfQ1WnfOtr2IKJAhrhADGEU6jjuA0QgDjEAIIP4QABGGNEMA4
      JEkKdhMEAUY70xN7O1vpGxolLSuPKNlBbUsXxqg4ShbkzmX7AooQQPgxYwFEJ6SQnJ7JgcMV
      ZMToyS9ZSnyEGFAEocWMBSB57Ow/vJ+YzGKiTSrt9cc54VS4bPVyFEXxaXyYDsEyDgVjFAgn
      Q1gwbAG++jpjAXhlA2vXrefAwSNoEotYvCSDo4cOokgSGo0G4Ny/M0WrnXHzZoSqqgGv8yzB
      qDfQdSqKgqqqs/5dzASNRjPpw23Gd8DS302L1UlhcSmy6qDuRA2ZBQsJfNcEgpkj+csb1Ov1
      zkrpHo8n4E8ol8uFXq8PaJ0QnL4Go85gjQAej2fKEUCsWschDGHhhxCAIKwRAhiHLIvbEW6I
      b1wQ1ggBCMIaIQBBWCMEIAhrhAAEYY0QwDiCEbAtCC5CAIKwRghgHCIeIPwQAhiHEED4IQQg
      CGuEAARhjRCAIKwRAhCENTOOiGg9WcvwmIOoxAzSomXqmtuJjk9jYX7mXLYvoIh4gPBjxiNA
      7oISSkuKGOzrpqGplbLlKxkZ7CKUTUlCAOHHjEcAx6iZ6toGIuPTcY72o5MltMh4VBVNiGaF
      OBs6F2hEVgj/4pesEJZRO6WLF3O8poHkKC2d/YM4vCo6SUIK0awQiqKIrBB+5KLKCmGM1NPb
      N8jy5cuJ0Emc6uhg6bJlhLIpSRjCwg+RFWIcbrcbnU4X0DpBZIXwNyIrhEAwBUIAgrBGCEAQ
      1ggBjEMExIQfQgCCsEYIQBDWCAGMQ2SGCz/ENy4Ia4QABGGNEIAgrBECEIQ1Pp1Belrrqaxv
      BaBk+RpyU+MC0aagIeIBwg+fI8Bftm4lJaeAoqIi4qIiAtWmoCEEEH74FEBafAQffPAhO3bs
      4FT/SKDaJBAEDJ/u0C6nnZbGk2ijk8jNTEOrmf6SIRTdocVL8vxLyLlDb391C0dOnmL7q09x
      pKlvwjGv20l/Xz9Otxev20Fvby8DZsvctjzAiICY8MOnAEZtdtLTM0iKM2JzuCYc62xvw+1x
      cayiip7Wesw2L2IGLQg1Jp8CqSpujxevc5Tdu/eij8vg0vIy9FrNuCIqPW2N9NllErRO+sfc
      GIwxLCrKQzkTFD8b14LZTqFmQrAiwoLR12DUeTYgPtAuJ776OvkkUFXYuWcvMbKNju4+6O4j
      KS2TRXkp54q01FbhNiZTVpKBonjJ1mg4cugQipR/rrJQC4pXVVUExfuR0AmKlzVcc9WVvPfe
      du6+54tYOmo45ZmYWqLPbMbokWhqUzHJDvqGrOhMcQS+awLBzJnyEXBk19s8+eQzHD5aic0y
      yC1/d9+E45eu2zDh7/Qc/zQwkAg7QPgxpQBWXXE9/2SMJzY+BVmWSEi+uK3AIAQQjvicBJ6s
      OEjtgItYZYTy2/4P6xaFbt5PgWAyfC7HPYqWdeVlxCXEYhm1BapNQUMExIQfPkeAKzZdT3Ja
      Oifj40gtFE9/wcXHlI+8ns5mHvnd7zh8tJK6o7vYV9MRyHYJBAFhyhHA43aTlJSE02Enq2wD
      q1YVBbJdAkFAmFwAipf6th7WrVxE1ckGAKKS0llakBbItgkEfmdyAUgy69ddjoxCbPIJopKz
      yUpNCHDTBAL/M/kaQJLQarW88vhvqWzp5S9bNnOgoSfATQs8IjNc+OFz30+VtSQmxJGZlsDh
      Q4doPdXnq7hAEHJM4QynoqgqazdcS1f/MFFF5aTLGpSL3FIq4gHCjym9Qd/7cCfRko3qxi4A
      1m68lYKs1EC2LeAIAYQfPkMiK/bvIX/FGqxtJ3DG5FKQFjvtC4diSKR4Q4x/CbmQyMMHdjNo
      GaOzsYqa1l6/NVAgCBY+BXDn3Z/jw7+8yMmxWK5dVRioNgkEAcOnADoa6xkYsqDzjnG8dSBQ
      bRIIAoZPAezZf5Sbrr8Kq3WYrv6JGR/so0NUV1djsdpRPC4aamswj4S2x6iIBwg/fApg7bq1
      7N9/DG1UKhvLJ06BLKM2SkqKOXH8OHXVlSTlFFBfczykM0MIAYQfPrcBLL095K9cz7qyQjTa
      iVpJS0ujtuoYKZk5WPo7SDBFYtRpcKkq2jNZIWbzg/L1ent/cXa3INAEo6/BqPNsVohAP2h8
      9dWnAAwmEyeO7qKlci+XXn0zi/P/ZgeoPnqI1AVLSY41UT3Yid3txaWq6CUJKUSzQiiKIrJC
      +JH5mBXC5xQoNTUFp8OOojGSlfYRZziNTE97E01tpyguLqLhxHFSs/IJZVOSMISFHz4NYY89
      /Etu+dLX6TqwlXbjcm6/vGTaFxaGsOkjDGH+xZchzOcdyEyJ5rmnnkAZ7cWl7yFW52HDJUv8
      1lCBIND4HAFmgxgBpo8YAfzLjF0hmuprsIw5/dYwgSDY+HwEGCP0vP2nF+gZHKZ0+RrWX7aa
      CN3Fm/xQBMSEHz5HgJ5TbQxYrGTmLiBZGuSFt/YEql0CQUCYMiCms70Fl2xiwzUb0WlkktMy
      WWQI/PxYIJhLVFXFY7dhHxogJjN3qhFApa/nFNYxGz1dp+jo6MDq8BBhCPzrgwKJyAx38bPt
      2/dw8q1XqP3jFuA8u0AHdm5HG5tGhFYmLSufxFjjtCsKxV2gYCF2gfzL+F2gsf4ejInJSPLp
      Nkz+yFNVnA47bU1NxKVmk5+fT4zJEMg2BwW32x3sJgj8jCk57dyPH3zEBO9453VsUgS7t/0Z
      UFm9/sYJb4i5GBG7QOGDbbCf6hcfm2IEkDVsuvVOZFnlzrs+zxVl2XQOiPcECy4edJFGkkuX
      +X5DzLvvvkd37yCyrOXOL64JZPuCgnCGCx90RhNu25jvN8R8Q4Hm3lE0soTL4QSiAtjEwCME
      EF5kXbretyW4quoEV37iLuIMWqJiYgLVLoHAb/QeP4ys0ZJYvBRtpMm3ANITI3jtlT8SG6nl
      8k23i+zQgpDi6OO/Ija7gNyrbzr3mWt0GFmro3LLZtp3bfdtB/A4bRw7ehR9XBpLSgrRjJsi
      qKqKzWbDaDKhuB0MmIfR6AwkJZx+mV4o2gGEN6h/CbQdwDbYh9YQgRxh/Jg3aMfe99n/8I98
      +wJtfe5xhpQI6na/zu6azgnHejpaOHi4EgXoaa1nyB74GFOBwBfGxBT0UZNP3bMvu5oVX/6W
      7ymQTqfFOjLKmMOFXjtRtek5BZiHT6dBUdBhG+6n1xVDYnwsSogGxbvd7qAshEVQ/Nyx7Zt3
      YUrNZN2//+LcZ1P1Ne+aW3wL4MqNN/DnN7dhSF1Ifkr0lOUyCorJ1mg4cugQipR/bogLtaB4
      r9crguL9SCCmQJf/y0/pPLADSVVwjQwTEZ8ITB0U7/MOvPLSS5SsvYYYgxbNRxzF2pvr6evv
      R2psJV7vpW/Iis4Ux8UbLSCY7zS+/Rp28wBjfV14HHb++s27WPfdB6nY8gjX/uwPE8oO1B3H
      OWrxLYCsRBM7d+0hPlLLuuhUkuNM547lFBSTU1B87u/0nDnuTRAQdoDQpHXH2+hN0WSsXofi
      dhOVlomlrYnozFySSsoo++L/+9g5lVs2k75yre9doGce3czGu75CslGHLGuQ5en/QMQu0PQR
      u0AzuJbXy96ff4/yr/0bw62NaCONJC5cPGnZyWKCx/q6iYhP9D0C5OWmsfWFZ9DKEms33sqS
      /Iv7BRmC0EGSZfKuugFdpInUZasnLXPi1acouPY2tKaPr19NKemnryOyQvwNMQL4l9mMAKcj
      ucbQGX2746iKQk/FAVLLVvP6V28jeclKLvnmD1HdTrSRpo9Nc33aAUYHu3jl5Zc4sP8gXUNj
      F9xogWCuGOvrZtu3v3DecsMdzXz4H9+g9k/PkLlmPebGWjwuJ29/6x4qn97MiTORYGfxKYAX
      n3uOwrx0Wlsb2FfdNrseCASzwJSSzqZfPuWzjOL18P6/f43L/vkn9FYdZqilgbi8BWj1Bq57
      6Gk0hggSi0onnONzDLxkxWLeevcDhmwavnb1bbPuxHxHBMTMXyRJmtKqe5bB+mocQ4NYe7uI
      zc7D63IRm7sAr9uFVm9g6V1f/fh1fa0Bujua6em3gCSj1UdSXLIQvWZ6O0GhuAZwOp0YDIEP
      /RRrgLlBVbwcf/73xOYWknvFJg4/+iBxuQtwWMwALPns308oP9Tc4HsK9PbrWxkas1N76H22
      v/MGz76x2y8NFwhmQueBHRz47Y/P/S3JGso+/zXSlq+hc/+HDDacIP+aWz523qlDu9j/8I8w
      pWacxx06PoqWzh4cljFKl62iZSi0X4F0PkRalNAidWk5sTkFEz5TFS8VT/4GWatlzTe+j0an
      I2/jLWjGBcKnLFlJTGYeelOUbwFs/OTn2PHhTtS09ZQtXcL6qIs7IkwQWuiMJnRG04TPFI8H
      19goKYtXoI+OxWUdJSIuEY1Gg9tmxeN0EhmfiC7y9Hk+H3kvP/UY+2saaTiyg4Y+O8aIizsx
      lmB+U/PyE9gG+32W0egNXPHdB+k+tp+qZx7hzXvv4MhjvwSgbdd2Trzy5ITyPkcArd7EZQsL
      aKw5yuiYfZbNFwhmhsdh5/CjDxKdno0kyziGhzDExPn03ZK1WjIvuZLUstUklC4DYMF1n/hY
      OZ+7QLU1x8lfsJD+3j7SMzPRaqY/Rw7FXSBhCfYvM90F6ty/g/4Tx1j2ha/jttt455/+jusf
      fg5d5PQyFc74/QCWjga276siNi42LPbIxWtS5ycu6zAZq9fx/vfvxT7Yxw2/eR5tROSkZQfq
      qlAuIMOfTwEYYuIY7TrJG2+8QUv30IW1OgQRApifFGy8ldSl5Vzy9e+hM0YxUFeFc9g8admq
      5x7FNtg3reuqinKe16TKKp2dHeTm5DLivPhHAMH8JiY7n/4TFVQ8vRmPw87Nv3v1Y2Wu/vEj
      Pq8x3NHCvod+iMNipuzzX/M9AuzZf5Sbrl+P1TpMV79lwjGvx82prm5UQPE4aaitwTwS2nYC
      ERAzf7H2dvHWN+4iJjsfxe1i43//Hq/rwl/ftedn3yV1ySpKbvscqIpvAXz6s3dy6GAl2qg0
      NpYXTjg20NtFW9spFKCuuoqknALqTxwnlCcRQgDzB1VVsZsHzk1LTcmprPvXnzLc1sSl37of
      S/PJaXmHfpSCa29FHx3Dghs+Rf75guJrjlfi1USwqKgA7UeiwVIzcxkwjwJg80KCKRKjVoNL
      VdGGaFYIr9crskL4kQvJCuGx23j3377KNT/7AwO1VUQmJhFfWEr7vg85+foLXP2zx1l89//F
      4/Gc91pn++qyjqJ4vYx0ddC2ezu562/wLYA1668jqa6K5595DCv3ce2qwknLGWQJu9uLS1XR
      SxJSiGaFUFVVZIXwIxeyDaqJiubGR15G1mo59MhPiErL5Jr/epTFd3yR0tvvRtZqiU3Pmnbd
      Go0GSfXitAxSfPOdp8MhtVrfdoCDH/4VC7FcUr6CGGPEhJjg9uZ6unqHiE1OozAjntqTLcSn
      ZJGTngQIO8CFIOwAvhlub6a36hCF132C+j8/T1xeERnll0/7/LN2gKZtf8LSepKBuuMUbrqd
      +MJiXwJQGejuYM/uXdS1dHHDHfdQdgG5QYUApo8QwPQZqKui4snfUHbPvaQsWTmtc84KQHG7
      8LpdfPCDr2NMTiPBlwDeePa3VPYbuHVtHu+3ytz32Y0X1NBQFIDL5UKvD7y/kxDA9Kh+8Q9I
      Gg2Zq9dhSs2ckSVYVRTs5n6cI8OYktOm3gVaf9NnWbsogwNHjtNdf0QYwgRBp+jGO8i9chPH
      X3gMaYau6+amOvY8+F36ays4/sLvz58VQlVVbNZhvJKBmKjJzc+TEYojgIgI8y9zMQVSPB66
      j+4lfdXlyNO8zkdHALfNikZvwOt2ibQo47kY1gCqquK2WdEZo3xu6YaaAMb6unGODpNQWHLB
      507mDGftOYXbbvNtCBOEHo6hQbZ9+wso09gfn88oHg9N72zF63IBp6cu3Uf2ztn1Bxtq6KnY
      L0aA8YT6CKCqKqgqo13taAwRmJKn3rWbzyOApbURY3IqlU9vZvmX7ju32FU8boY7WonPL7qg
      emfsDi0ILZzDQ7z2+WtpePNl3vnOlxjpbA3JkaDymf9htKuD1fd+d8JOT2/VYXb86L5ZXdtl
      HUEd59ovBHARYTf3o6oK0Rk5lN39D+z71f207dwW7GZdMOt/8BCJRYsmfGZpPYmqKFz78ycu
      6FqWtka6j+4DTrs///W+u9n7i++fOy4EcBERX1BM+oq1HPn/DxKbU0DuFRuJycoLdrNmhW2g
      j7H+HhzDQ9gG+3xO6ybDOWxhrK8bOL2QliSJwk23n9vyFgIYR6hGvdkG++irOQaAqirkXnU9
      sbkL8Dgd1P5xy4QhP9To2Pse7bu3k7bskkljes9Halk5C67/JK7RYVRF4bLv/IRD//NT7GeC
      ZsQieByhagforTpMb9VhFt58J66xUapfeIyRU21Ep2WRvGQFRTd++mMLwPm8CJ5rxswDvPUP
      n6T0ji/Q8PpLbPjxI+giTRx57Be+vUHDjVCNB0gtKye1rJzKLY8QEZ+I227DfLKGrDXrWXjT
      ncFuHnB6W5M5SjymeDxIU+zqTIbX5WThLZ+h+NbP4Rgy07nvQ1o+eIsVX75PTIHGM58F4HHY
      cdv/FnHnto2x95c/YKDuOABdR/YSEZ9I2vI1lNx2F163m9z119Gx57154eKx/V++gqWlYU6u
      tfM//5GeY/vZ/6v7cY5YzlvemJRK2T33svfn36Ppna2YG2uJiIkja816NPfff//9c9Kqj6Cq
      6qxSDSqKEvBUhYqiBHx4Pluvr76O9XVT/+fn6Tq8h/jCEpq3/5n4/IUc/cNDGJPTSC4t4+Sb
      L3Ps8V+TWLSI7LVXo4+ORdbqqHn5SboO7ST3yusuqM65JnP1FZhSM0CSZl1v2vI1xGTloXjc
      xOUVIZ9nKqcoCk6LmbRlqxlub8bjsJO34Qb6qo+JNcB45pshzG7up/71Fxnt6kBxu2jf/S5a
      QwRJpctwDA+RuHDx6fyX+tPrlr6aYyQsKEXWaKjc8gjD7c1c8b2fYz5ZS/Li5dOqczbsf/gB
      otOzOHVwF5t+8eTHjgdrDeDxeKh4/CEsLSfRR8WQf/VN2M39RKVnCQGMZ74JwDliYedPvsPa
      f3wAW38P+x76IbJGS2LJUgo33UZ0Rg7uMSvHnnyYpOKlLPns39O28x26Du9mxZe/hbmxdsrA
      EX/c37G+bnTGKByWQQwx8TiHzZx4bQvpK9eSXLoMQ1wiSFJQBKDRaHCPWfE47RgTU+jY9wGV
      T2+eGwFYzV3UtfYRFRNPyYJcQAjgQjhfX1VFYeRUG3pTFCffepVTh3bhcThAVdnwwGb+et/n
      uPRb95O9dgNelxOP04mtv5vWHdtY8aVvzqjOmaJ4vTS8/iJdR/aSv+EGhtub6aupwG0dQQU2
      PLD5gvfyZ8tkrhDDHS0MNlTPzS5QX1cPWQUlJEVHzMXlgsZ8WCxOht3cz54Hv8cNDz9H2oo1
      RKVnUfPSE1x1/28wpWbwyWe3I2tPC1ejN6DRGzBExxA/7j3OgUDxehlua6Tx7de4+j9/h8s6
      zK7/+mcMsfEYouOQZBlJDvwaazJis/M58JsH5mYEGB3qp6d/iJ6BYS5fW456JivEbBY7sx1B
      ZkKw7AAz6evIqbZzyWIDVef56Nj9Lt1H9nDJff9Bz7H9VD//KM4RC7JWR2RyOsmlZRTd/Bn0
      psCm2ffV1zkZAexOD7kFBQwMHJwwxwu1rBBerzdkskIk5E6eocOfdZ6PnMuvJrP8crRaLXE5
      BTgsZpbdcy+7//tf0Zuiyd9wA4ao6KDstE3lDTonI4DLbqWxuZW07AISYk5774XiGkDEBM8N
      x554mKi0DAo33Y7X5WS4o4XEosWoELRdIL8KYDJCUQDzdREcanU6LGZknQ5bfy/7f30/1//6
      WSC426BCANNACGBuURUF19gohuhYYH4KQLhCCPyC1+2mp+LAed/tG2yEAAR+wWUdoeGNl0Cd
      367YYgo0DjEF8i9iCjTPCdWAGMHMEQIQhDVCAIKwRghgHIGOPxAEH/GNC8IaIQBBWCMEIAhr
      hAAEYY0QwDjma0CMwH8IAYxDCCD8EAIQhDVzIgBVVXE6HXhD3JVgPifGEviHOfGG6mw6wYAd
      HA43a1cvP/8J8xQhgPBjTgTQO2xn1apyKg4fxq2qyGe8/txu97kyZ+fXU/3IPnrc6/VOmJOP
      //90rzHV8anKuN3uWV9jJu34aF9nco0LbYfH4znn/Hehwp9p3aqqoqrqOa/Q6Zx/oXVMdnyy
      +3uWORGADCiqinrm/7Isz0mAeaDddVVVDYo7NAS+r8Go8+yPP9Du0JIkTdnXObkD+RnJHD16
      FIMxDs0ZNUqSNKspxWzPD5U6g1VvMOpUVTVofR3/74RjIiDmb4iAGP8iAmLmOcIOEH4IAYxD
      CCD8EAIQhDVCAOMQATHhh/jGBWGN37YBVFXF6/XO+HzlTIbpQDLbjNYzJRh9DUadZw1hgUZR
      lCm3Xv0mgLnYYgtWFuFgEA59PWt5DsZDRpblSUUwb1+TGiyDVDAIl77Ox/vrN0OYQBAKiEWw
      IKyZl1Mg1Wtnz54jxMTHUVhUginC/80c6GqltduMLjKaZYuK/F4fgKoqHNq3m4ioOLILFhIf
      5e93rHmor6rCYUhk2cIc6qqPMeZwk5pXSlayv7I4K3Q0N9FhtnFZ+TJa6ioxOyQSElPIz/bf
      y/JUt43KmgYUt5PUgkVYuxuxOlyk5JSQnRJ7rty8HAFcY6OMudxExSZgNARmodbRNcDylSuQ
      7cM4AhXXo3oZsowQYYolxhiId5PJFBYVIeFFVd2MuTWsLC+np73Jj3VKpOfkExVx+nscHBhC
      o9GQlJTgxzoBbQRly5aRnRLH6JiVUYfKylXl9HZM7Ou8EoDislNdXY1bn8B1GzcQzTD1bYMB
      qVtFQkJCI4ESoFWRJOu47sabyYiTqKptD0CNMlrN6a9cVRUkSUaSZMCfip/oily+7irKSouo
      PHbUj3WeXvg21VTQ6zRQnJ2EJGnO9HXilzuvpkCyPpIlS5bgGBmkurkPr32YpLycgNSdFBtB
      dc0JHKqeyADtDirOUapPdqDxjhGdWOD/Cj0OGpqa6eoyk5GSBO5RqquOEpOU7b86VS/tba10
      nTpFQlIK7lEzLgX0EUb/1Ql4Rnuo7bBQUmjCMupG8o5RU3WM6MTMCeXm5S6Qqqq4XS5UScag
      D4x7sqqquJxOtHo9mgDtU6uqisftRlFBr9f5f5tQVbA7nABodXo0korL48Wg1/uvblXF6XSi
      qCqyRotOI+N0uTEYDMiy//qrKl4cThcAOp0eWQKX24PBMLGv81IAAkGgmFdrAIEg0AgBCMIa
      IQBBWCMEEOaMmnswW53BbkbQmFfboILZotJaf5za9kGuXLeWzs5OFhZkUtfYS4LRQ2VDF6WL
      islOTz1TXuHd156myZvN5z99K71NFSimDEqzYzhR18KQzYPGbWXx6nUMdjbQ19vPwuWXkpYQ
      da7G5oYaUnNL6G1tIDUnh8N791Cw5BISIz3s3nOQwqWriVasjLqdyBHJ5GcmBufWTIEYAS4q
      VPp6eulpOMgbu6vZ/cH7tJ84SG3nAFuee5lEo523PqgYV14iJiaa5PRMzE0H2Vfbx96/vsLJ
      1mbe31dLy5FteJ1mtu04yjtvvUmEUc9zz786oUZbbzN7qhp5d8ce9rz5MlbJyPPPP8/o0ACj
      tjGeevpZGiv28Kf3DhFl8rerx4UjBHARobjdVNW3snxJMS6nm8K0GF56p4K1y/OIiE2htCj/
      I1+4REpKKulZeWjcY4xYreQVLUDxeClasozigixWLClBUjwY45IpW7wIDRODaEpWXU7Vti3E
      5SzFMmTGarVRUFjAsSOHyVu4lEi9BOi48bZbSY4zBfBuTA8hgIsISaMlNUamqm2EwuwUVl66
      hpSMfNISEliSFc3jz76GV4Ih8yCDg4OYzUPkl11G/YevQmY5WQYrjZ0WEpNTyU1PIDW3GENU
      AoW56Yz0NrP50S1cd8vNWM6cPzhoBkMc8VHRXHbpMq679VP0NlZg88gUL1zAzg8+YGHpIlJy
      CoiP1Af79kyKMISFA4qbl7f8gYbOIT51z1eQxwbwqKcFs2BBEXrt+Z+DW7du5fbbb0dVvTTV
      1eFUAEkC2yD7Gi18+TO34EfDrt8QAhCENf8LG2zLi9RnTrkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='map_annual_avg' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='map_annual_avg (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='pie_continent_each_year' width='192'>
      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
      XPrPAQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='pie_continent_each_year (2)' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='rain_amount_america' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO2dd3hcV5n/P3d6U+9dsmTZkuXe7SS24ziFhDSSkFADu8ACG1j4Lbss7C6B
      XcrCwoaysIEASUjDSSDNiRMnLnEvsmyrWMXq0qhO0/Ry7/39MdLYclFcVCz5fp7HfiTNnXvO
      nLnvve95z3u+ryDLsoyCwjWKaqo7oKAwlWhGfvD5fIRCoUlrOBwOo9Vqx+VcsiwjCMK4nOta
      b+9a+2zCVLlATqeTxMTEcTlXJBJBo9F88IHjxGS2J8sykiShVqsnpb2ZPJaiKCIIAirVacdH
      cYEUrmkUA5hGREQJUZKmuhszCsUApgkNnTb+9sev8bVfvo3N5Zvq7swYFAO4yvAGQrRYHYQj
      Is+/W803H3+XEy39HKjtxOEO0N7noq59YKq7OWOYvNmOwgfiD4b59u+2097rYvncbCobe4iI
      Ei/uqOPzH17KgbpuEsx6FszKmOquzhgUA7iK8AbCdA+6kWSZAZeP2bnJnOq2s2h2JoVZifzm
      67dPdRdnHIoBXEWkxBv5zG2LONbUy703lFGYlYjLEyA53nDOscFQhI5+FwUZiei0kxMinYlc
      9jqAc7CHxk4bKxZXYLe20NzrJiEpmaLsJGpqG1Ab4pk3K5P9xxpYs3IpEZ+TA8ebuX7NMgSU
      dYCL5XzrALIs8+9/2El1Sx/L5mTzr5+6Ydzam8ljOa7rABp9HIbhhdzengFSMzPIz8miq7mJ
      3DkLiJNcDHgC+D0uHP4IPd1WQuHIFX8IBZCB1h4HsgzNVsdUd2dac9mmZ4mzxH4umluO2+Pl
      cOVR0o0qDDotslGDxy+SU5BPT3sHRCDRpInd0SRJIhIZH4MQRXFcznM1tdfQaeNIvZV1iwrI
      TrFw9oP6i3ct4/3j7dy4pGjcxhFm5liOIEkSgiAgnbGWctkGEPD7CAQC+ANBHHYH5oQEVMik
      pCbQ1dmNbyDAnHINHREzEWcLxpQiggF/9BGkVqNSqcb10TeZj+2Jbi8YjvCTF/bjcAeoOtXH
      T7+0KeYC7TnRwRNbjrKgOINvPLgWjWb8I9kzaSzP5Hwu0GW37LANkJKUxIDdSXZGGl3dvSxa
      vASzXoPU201m+XzMZh2FOhlSzaiNcYTTEsblg8x0JElm5IbvD4b5zatH8AYi/M2HFrP10Ckc
      7gB7TnTw0Q3zyEmLn9rOTnMu2wCycgtG/V5YVBT7OT0rN/azSQ0YdADoz3CbFKJIkkyz1UFK
      gpHkOCMAv3v9KC5vgJQEI6GIxLYjrQBkJpvZsLiQZquD+bPSSUsyT2XXZwRKGHSKefn9kzzz
      zgnizXp+8ZVbSYozcqy5F1kGfyBCokUPgFolUNXUyzuHW/jQqhI+sWnBpKYtz1QUA5hiuvpd
      AAx5gzz/bg3L5mbzmdsW8eaBU2xYXEh5YRoHajtZWJLJv/9hJ75AmLcOnOKTNy+c4p7PDBQD
      mGI+emMFKpXAnupO3j7czLbKFu5fV853P7MenVaNLMvcc/1c1Go1m5bO4tW9DQB0DQzhC4RJ
      STCSEm+a4k8xfVEMYIrJTo3jq/etorN/iKYuO5Ik8+cdtcSZ9Xx4TemoY2fnJQPRlIlv/fY9
      XN4gFqOOX371NpLjjVPR/WmPkg16lfCNh9Zw59pSVCoBAYg36c45pjQvhcxkC3EmHUnDE2Zv
      IITTE5jk3s4clC2RU9ieLMvIgADRBRpZ5mBdF83dDuYVpVHV2MuNSwrJS4+PrQMEghFEScLt
      D/Hizjry0+P58No5qMZpQjxdx/JiON86gGIAU9jeX94/yebttSwvy2HdwgLm5Kfwj7/eRq/d
      EztGp1Hx+TuXsmlZ8RW3dzFM17G8GJQ9wVcZbx9qxh+K8P7xdv7j6ffZevAUTo9/1DGhiMR7
      la1T1MOZj2IAU8jtq2dzpueyv7aL7NS42O9pCSbizXpuWT45d/9rESUKNIXcvno2L7xXgzcQ
      BqKZnSP2oFYJfOGuZcwvSkM7Afk+ClGUkZ1CVILAF+5cypLZmRRkjM6TEiWZHz6zm28/sR1/
      UEkjnygUA5hCBEFgYUkmwYhIIBThU7cs4L4N5bHXRUmmxepkQFGBmDAUF2iKOdrYQ21rVOUh
      GBZ5YP08LAYdg0M+6tsHKc1NJueMeYHC+KIYwBRTXphGdmoc/mCYZXOy0WnV3H39XABEUaLF
      6qDZamdWVjJ63emvy+H2M+QLkp+eoCTFXQHKOsBV0F44IiLLnLO5/TevHObtw80gw4KSDL77
      mfUIgoDN5eOrv9yKNxDm8x9eym0rS8atL9N9LMdiXDfEKIwfWs3oCz8iStiGfDR02mIbY1qs
      jtiqcb/Ti9sXVfJu7VH2BF8JigFchfzfq0fYUdVGUpyB5XOzkSSZm5bNioVIS/NSeGBDOT02
      D/dcXzalfZ3ujGkAXq8Xk8mEGA4SETQYtKcPdw5Yaeyys2JxBUO2Hk61WYlPzaYgI46a2gZU
      hjgqirPYd6yBtSuXEvE62X+8mRvWLkPxWKPIskwwLGK1uXnrwCkWFKdz3fx8jg4rwnn8If7p
      oTWoVcIoWRS1SsXHNy2Ywp7PHC5oAENOG4/94pd89GOfpvvEdlwZa7ln7dzTbzTGY9DaAZlT
      rV0sXLqcqsrDqL0a8uYuwNN6nAFPEkGPC4cvgsdqJTyO6gUzgeqWfn7y/F68gTCiJLPreBvl
      BWl8+taFbNnfxIYlhWjUqnMUIRTGjwsaQG9nMx6Ph6NHDmMwZbNxyejleIvl9P5eGQG1ALIg
      EAqJ6HVaJKMGT0AkuyCfno52RRblPByo7WTId7oqT4LZgEYtsLYil7UVubG2ZFmeNCOYrmN5
      MVySLErp/BV8+W/0HG/sQCDCoNNNvDE59rrf5yXg9+PzBzHrVFj7BxAlFSkZcXR2dOEfkUUJ
      K7IoF+Km5cUcPGlFp1VTXpDGR9aVkWA5vbHFFwxzrKmXWVmJZKZM3lrAdBzLi+GSo0DvbH2H
      1XfcT6JeQ2LiaAUCl8NGakoKNucQcyoW0N3VzcKFCzBq1ci9VjTzFmA2aSnUyQhpZlSGOMLp
      iizKmeyv6WTIFwQZ3h1sIRCK8I2H1gAgShL/s/kAh052k5ls5n8euRWTfnxqqimcZkwDyEjU
      s+X1LSQaNazZdBfzZ2XGXsvMyR91bG7+aZmUtKyc2M8mNcCwLIpFkUU5k/ePdxAKn3YBDtd3
      02y1U5ydzOGTVg7XdwPQ7/DhD4QVA5gAxswFmlWxlDmFOaSmpmBUBn/c0Z+18BUMi7RYnQBI
      shwVASUaLXp2WzW9dg8RUSmRNJ6MaQD5s+ayYsUKEnDTZVcSssabkX29mckWVpXnsH5RAavK
      o0/PlWU5fO2jq1lTkYcMvHe0lS/+bAv//cI+xQjGkTFdoNqj+zje1M2QrY8b5imJo+PNPz64
      mqqmXubmp5I+rPI2EvFRqQTWLSygICOBw/XdhCMSkiRT2dCDNxAmwayf4t7PDMbMBRLDAU7W
      1qKNT2d2Ue64bbwGJRfovOcVJX7+0kGONFj51C0L0agFqpv7WVmeg23Iz9uHmllTkUtSnJGG
      ThsfuaGM/IzxDSzMlLE8H5ccBXrtuT+gzpmPc+8LDN74MdaW5Yx1uMIV4nD72VfTSUSUeOKN
      o0iyjCTJOD0Bvvc3G7hz7Rysg24e+flbREQJnz/Et8exOMa1yJh+jSiKqNUaBFVUxFVhfAmG
      I/zgT7v5yi/eoqnLRlKckdXzogtgEVGKjXluelQBWhQl9lR3xBZyRv6ucPmM+QS45xN/w4H9
      B8hY82EWzs2erD5dM9S3D3LwZDTUufVQM4/cu4LP37mUFquDfqeXBzbMY/6sdIqzo65iVVMv
      z26rBmDTsll84mYlH+hKGdMA/vrcH7FLZgyaLsyJyZQVpE9Wv64JZmUnUZCZgM3lZ+Wwexlv
      0vOTL27C7Q+RnmRGgNgdP86kQ6NWEREl5uSnoFYpgYkrZUwDMBuM6FOLSDZqSLCcW6lQ4dII
      R0Tq2gfITY0nJcFEnEnPf3/pZiKihFGnYdDl47W9DczKSmLdogIEQRiVA1Sal8KPvrARXyDM
      fKVW8LgwpgF09vQzp3ABZoMGrVopxXmlPPnWMd7Y30RyvJGfP3Ir8WY9Oo0a3fCGmKffPs6u
      Y+2oVQJZKRYyki2jNEIFQWB2bspUdX9GMqYBpCUaqKo6RoJBjS4xm7REpSLJldDn8ALg9gXx
      BcPEnxXLNw9X0pGB7z31PqIk8fX7V7F0TtZkd/WaYUwD2HT3QxyqPIEog8V4rlqxwqXxmQ8t
      IiXeRFlBKhlnlTfqc3h4/3g7EHV16tsHATjW3KcYwAQypgG88Ken8JnSScdFR3Y5+Rnjs3B1
      rZKTGs8X71523td67R48/ujegNy0eNITzdiGfOO64V3hXMY0gKzMbBKyc9m3awfpym6uCWVe
      YTr33lDGgNPLRzfMG5UaceYGDoXxZcxUCFmSkIFQMITOoFdSIaagvREDUE9SEGImj+Ulp0II
      KhUCYDAqIVCFmYmykqJwTTMuBmDrbubw0eM0tnYSDripqqzkeG0jYsDN7v2HkWSZkMfOzr2H
      UTKKFK4mxsUA+noGSE5LIz8ni66WU+TNXUiC7GbAHSDoHcLui9Bj7Zl0xQEFhQ9iXGYfs8or
      8Hh9HD5SSbpJjV6nQTKq8QRFsgsK6B2WRUkwKrIol8rIBhlFFuXKuSRZlItHxm6zYYyLRyVA
      SmoiHe2d+AcDlJVraA+bFFmUK2Cyo0Awc8dygsRxBdIzMrD29LF4yRJMOg309aDJWIDJpKVI
      L0OaBZXBQiRdWUhTuLpQ5NGv8vaUdYDxQ5FHv0oIhUUqG60EQyKLSzNJMCvrLFOFYgATgCTJ
      WG1uEi2G8yYRvrizls076gBIijNw28oSblhYQNYkyh8qRFEWwiaAV/c28NVfbOWffrMNzxni
      txB1aVyeYOx3hzvAc+/W8KNn90x2NxVQDGBCqG8fICJK9Ng9DA6dFhQLRUR++Mwetle1UpiV
      SHlhWqxQdr/DFzvG4Q5EleHGGUmScbj9hCMXF3qUZZm6tgEO1nXNWDEuxQWaAB7YMI+wKDE7
      J5n8MwSB++xejjRYESWZeJOe7312Pf/718PsOt7OTcuKCIVFvv/MburaBvjojfO4b135qPN6
      AyG2H20jK9nCsssQKXj23Wpe3VPP0tIsvvHQWjRqFb5gmH6Hl7z0+HP2GDd12fnXJ7YjSjKF
      mQncuHQWd64pPW9Rvj3VHWzZ18i6xYXcsrx42hTuUwxgAijOSebfP73unL9nJptZXZFHdUsf
      5QWpNHXZ+eJdy3j4tkWY9FpsQz5qW/oJixI7q9rITLbw8q6TWIxa/vHBNby88ySv7m1ArRJ4
      7JFbL0kUS5Zl9lZ3EI5IVDX14g+G0WnUfOf3OzhldXD7qtncu66MNqud+cWZaDVqhnxBxGFp
      lrZeF8+8c4K61gE6+l3MK0yjvDCNDYsLEQSBJ986xoDTR7PVQUlOMiU5yR/Qo6sDxQAmEa1G
      zTceXENjp41/+e17vLC9lmVzs/nkzQsQRYnO/iFuXlFMdUs/3QND/OT5fbH3VjX2olZH79DR
      UN6l3WH7HV5sLj8AhZmJmI06Kht6aOq2I8vw5oEmthxoitYjW1rEl+9ZwV/ePxl7v0oQCIVF
      DtR1AWAddPNuZQv56QmU5CazqCSTbUdaCIZFHnvxAL/6hw9d6XBNCtPWAERJorNviNREEwbt
      9JrK2N3+mE99pN6KfchPr92DLxDmtpUlzJ+VTkefC4hWhcxKsVBWkMqKshxESWJ2bgq5afH4
      AmF67R4KMhJixnE+JEmmcrjuGEBmioXKBis/enYvsgwp8UZc3iDi8Ot9Di/Pv1cTK+AtACaD
      Bo8/POq8sgybd9TyrU9ez+c+vISGThsdfS5S4o1MF6adAciyzDuHW9hX08GJ5n5y0uL4/t9u
      wGJSIUkyGrUq5n/ahnx09LmYV5h+Tg3esc5/sK6bEy19fGjVbHLTxl99rTQ3BbVKiLkXOalx
      dPZHL/jatoHYz+mJZv7h/pXYXF7+/Q87sBj1tPY4iDPpKclJ4qd/3k9zt4NbVxbzhTvPv9US
      oKa1n9++XhkrubqvupP3j7fHfr9ufj7NVgc1rf0A3HP9XJ5442js/TKcc/GPcKTBypf/502+
      et9KvvfZ9TR02qgomj76UepHH3300aloOBAIYDBc+gJQs9XB9/+0m167FxnwB8Ksrcjl5y8f
      4g9bqkhNNFGYmYjHH+Ibv97GlgNNODyBmPDUB+HwBPjXJ3Zwsn2Q1h4HqytyY7IlIwx5A+yt
      6UQQTkucXywjWp/HTvUy5A2SnmjiW5+4nrkFqeSlJ/DQxgqqm/tweYOYDFqWzsni1T31tPa6
      sLv9yDIEQhGarQ7a+5yERYleu4dAKMIb+5pIiTfS0eeio99FVrIFlUrANuRne1Vb7II/O8J0
      /4Z5uP1BmrujNYcD4QhdA25CF4gWGfUaxOGEMlmGIV8QQRC4YWEBuWnxF32ziY6HNGpldiKR
      ZRlBEEZN0KfdE8AXGH0nijPpaOi0caK5D1mG94+3s35RIU53gEFXNLQ4MCxHcjZ1bQO8tLMO
      jUbFl+5eTqLFgF6jxmzQEghFONk+yNd/9TY/+sJNoy70P751jJ3HOog36fj+5zbGJqODLh/b
      j7ZSVpCKxagjJd50jvTJ028f5/V9jbHszn6njye2HGXdwgJONPdhHXTz7U/dwCOPvcWA08eP
      n9tLKHJuCNI66CYl3kT3oBu3L8Sft9cC0bu9LxBGlmW+ev8q1lbkcarbzup5uRRlJdLR50Kv
      1WAf8hMWJYqyEllYnIE/GObtQ80AHKzrjrVTkJGATqumqcsORIt6/PDzGzlY183z79UAoFGr
      WFE2PaUzp50BzM1PZemcLI419SJKMnZ3gMdfr4q97vQEiIgSde0DsTtdeWHaOefx+EP86Nk9
      uLzRRanFJZnctmo2YVEiEDqdpt1r99Le54oZgCzLeIfdgSFfiP/363ewGHV8eE0p71a20D3g
      jk5Q5egq79I52Rh0ao429iLJMn12D6IU1f9XqQQkSWbXsXZ2HWuPtZmeZMZk0BLyiPiC508Z
      d/tCMRUJILaekGgxxP4eDEV480ATf3zrGADVzX38/Cu3kXweH31VeS4fWVfGK7vrY65Zblo8
      3/z4dViMOh75+Zu4PEEEAU5127nrujmIw+nFayryKBhnmfbJYloZgMcf4umtx0mOMzIrOyl2
      VzqTjl4Xbx1sYmj4wrYYdSwoPldGMBwRYxd6vElHaX4qAGqVgE6rxhsIkxJvZGFJxigDOnSy
      m9phzR6I5vXYw36e3no8ttttRNXZNuTnncPN5/0seo2aL969jLZeJ2/saxx1lx+5m4/FSAkl
      Abh1ZQlrKvKIiBJ/eDN6M9iwuJCNS4t4t7I19p4hX4h+p/e8BqDTqvnULQvJSDLzm1ePIMtR
      Q8xOjeNHz+7BObx6HQiJvLqngU3Livn4pgVIkszRxh66B4ZYWZ6LZozJ+NXItDKAPSc6eHv4
      grpxSRFdA0P4z7hDmg1aNGoVT7xx+omwsCSDktxzY9J1bQMEhwvUrSzPZfOOWnyBMI/cu4Lv
      fmY9jV12MpPNZKfEjZoD7K3pjLlhFUXptPY48AbCl7zV0x+KsHlHHfMK02LvFYRouaQem+ei
      zyMPf8Yt+xtptjoYcEbdvoYOG30OLw63n5XlOTg9ARaVZFKam4IoSbRYnWQkmXnzQBOHTnbz
      4MYKVpTlsLIsm99vURMMi7T1ODnZPoB10A2AVqNCo1axcUkR4YjIO4eb6R5w89bBU0iyzN/f
      u4JNy2Zd4khMLdPKAHLT41Gro+5FdAEG3jvjDnfXdXNp7BzkSENP7G97qzuZV5jG7atLR50r
      Jy0es0FLMCzi8Yc4UBuNb793tJWHNlZQ3zHIv/9+Jxq1CoNOgyDALStKKCtIZffxDhbPzuQf
      H1zDj5/fS1VT7wX7XJKTTHKcgUP1ViDqjtW1RcOLXQNDdA0MxY5Nshi467q5/H7LUcLn8fsv
      xC9fPoT3rLmR1ebmO3/YGZsHGXUa7r2hjMpGK1VNvbx5oIl4kx5vIExElPjZ5v08uLGCPSc6
      YjcGu9vPNx9/j5R4IwlmPcnxRr71ietJTTDx6t56nnzr+Kg2LzbF4mpiWuwHsLv9/HFLFb5g
      mKON0Yvt5hXFFGQk8PhrlbHjkuONFGcncXj4YhshI9nMY39/KybD6EqXgy4fHn+IvdWdbN4R
      dTs++6FFdA+6OXSyG4c7cME+XTc/j87+6AUsnlE8pDg7CYToJHXk6ZSeZKZ/eCKuUUfDtROR
      63M5GHSaUXOe86EShFh/tRoVK8ty2F/XhSie/gwWo47ffP32cyb9ZyNJMv1OLwlmPUa9dsr3
      A1z1BuBw+/nVXw5zpMH6gceeiQCohmPtarWK+24ow2zUkp+RwKGTVuo7BvnQqtm09Tp4Y19T
      7H1mg/acu+mlUJiZwEfWlfO7N47G5iFXMx/0eVUqgaQ4Q2wVGUYbxAiCAD/+u02U5o2tXr15
      Ry1/3l7LrOxEvvfZDWjVwswygHDATU1tIyq9hYqSLPYebeC61cuIeB3sO9bMuuuWI3DxBvCz
      P+9n17BorMWoJSLKH3jHUpgabllezJfuWT7mMf/6xHaqW6ILbivLcrhj9WwWlJwuwB4IRXhp
      Vx2RiMQDG+ad89S+Es5nAOM+Ze9qHpZFwcOAO0jI58buC2O19iBKl+4jmoc3lJiNWn7wuY1U
      zDq9yqjXqrEYdeMq2ahwGp1GfUkXYMfwCvZYfPTGCuYVpiEAB09288u/Hh71+r6aTl7cUcdf
      d9fz3tHW859kHBn3Z08oLI6WRSnMp7e9A6TRsiiyLBMOn370jkhVnL1S99DGcsoKUshJjSMz
      yciX71pC1bxcdFo1c3KT0ahVHDrZTXXrICqVQFVTD1q1Coc7EIuu6DTqC65qQnRl03+BePul
      IgjR1dGkOAP+YGTMp5VaLYzyo8ebkXJKCWY9JoOWHpsnFtqdV5hOn91D16CbE829ePxh1lTk
      Ul6YRmuPk/QkMxsW5hGKSPx5x0l2n+gAonlJPTYP+RnxfOym+ew50UlaoolBl487Vs8mHA6P
      knE5e5V3bl4S33n4er79ux00dTvISDKPug4SzVrUKgFZhtR4A8Fg8LwrxWe2cfY1c75jVCoV
      oiiiUp1OlZFlefxdIFv3KXr9OvyDVsrKS2i3hQgNRmVRPLYelixfdkku0MUwMpGKfmBAgEhE
      oratn4wkC5nJFjoHXEgSpCYYae1xUpiZSLPVgUolUFaQii8QprHThkolkJZgotc+HIoUQEBA
      q1ETEUXUKhVJFj0uXwiBaFTn0MluTnXbqShKZ3ZuCm29TopzkjDqtEREiZrWfjRqFelJZpq7
      7dR32Jidm8zyudm4vEHae13A6S+zprWfgowEOvqH8AVClOamEG/W02J1oNdpGPIGyU6Nw2LU
      0dBhQ5IlMpIsZKXGUd8+QKLFQHqSmeLsZHrsHrKSLWg1Klp7nMwtSD0ntcM25KPP7mVOfgqy
      JJ3jk/uDEV7ZU0+CWc+NS4po7LQxKzvpimpG+AJhTnXbKc5KwGw6nRIjyzKd/UOIkkRhZuK4
      7iuYnEmwLDPY34vGlECCSUcgIkEkgFpvIRz0YzKbJ8wAJgtFFWJ6tjc5qhCCQGrG6YomRjWg
      j94pdBqlxJLC1cX0WrdWUBhnYk8An89HKBQa69hxxes9f4bm5RCtaD950oGT2d7IRG6yUoZn
      8liOaIOeOa+46hfCLoaZ7Lcqc4DxY1LWARQUphOKAUwTQmGRNw80sftEeyzdWuHKmVbZoNca
      9iE/7X1OyvJT2HqohT++dQxBgDiTnkVnpA8oXD6KAVxFRDf8N3OsqZdNy4v59SuHGXD6uGV5
      MfmZ0R1XgiBMu00nVzOKAVxF2If8/H5LFcGwyCmrI5ZN2uf08rkPLyXOqMNi1FFecO4WT4XL
      QzGAqwiTQUtmsoWOfhfL52ZTVpBKdUs/d6yajVajYt2iwqnu4oxDCYNeZe15/CF6bR6KshJR
      q1XnDYPKssy+mi52Hmtl07JiVlyk5MvFMJPG8myUAhnTAItRd949zGciA79+5TAef4hT3Y5x
      NYBrDWU2dZUiSTL+YPi81SEFonuNBYFpI0J7taK4QFdhe5Ik86u/HGJPdQd3XTeHB2+cF3OB
      3L4g+2q6yE2Pw6DVkJeecElKbB/ETBvLM1FWgqcJwXCEPdVRdYYdVW30O7209TqRZZkn3qji
      168c5ofP7CEp3jiuF/+1iDIHuAoZ2fgC0V1df//YVkRJ4mv3ryI8XFhalGRkZUX4ilEMYIpp
      63Xy7DsnKMhM5KGbKlCrVPzi5UMMeYPEm/W4vMGYrPmheivZKXHcsqKYGxYUkJJgmuLeT38U
      F2iKeWlnHYfqrby0q47WHicQrSQDUXn0W1eUYNBpWFmeQ3VzHy/urKOubWCUOIDC5aM8AaaY
      Ofkp7K+NFqH75//bxqzsZL7+wCr6HV5KcpIx6jU8tLEcrUbDl/7nTVzeIG5fCFGSzqnppXDp
      KCM4xdy+upSff+VWEi0GIqJMY6eNf378XYx6LWajDkEQUA8rGXzspgogqoD95FvH+N5Tu3hq
      67GYVr/CpaMYwBSjEgRy0+K5Y00p6uG6Xy5PkGPn0Rs16k9r9Lyxr4nKhh7++n49LVbHpPV3
      pqG4QFcJ960rY9OyWfzP5v0EwiJrF+Th8gRGSY8snp3J3921lCFvEJ1WzTPvVJMSbyQjyTKF
      PZ/eKAthU9hev8PLvppOFpZkUJSVhCTLvLK7nqONPQgC1LfbWDs/j0/ePJ+UhNGKGpIs02vz
      EGfSEWcaW5D2UpiuY3kxKLlAVxk/3byf+vZB9Fo1+RkJfPrWhTz3bvUoafQdVW0EQhG++fHr
      Rr1XJQhkp8ZNdpdnHOMyB5AiYdraWgmLMpIYobmhjnZrP1LYT31TC7IMYshHXev8qLIAAB8s
      SURBVEPzJReSmMmMaJoGwyJNXXZ2n+ggK+Xci/pSawIrXDzjYgBul4OBwQHCokxPaz2apFw8
      1hZcXi+nTjXjDYv0Wztp6+z54JNdQ3zt/lWxiS/AtsMtDA5XeAH4yLoyPv/hJXzu9sVT0b1r
      gnFxgRJS0kmyRaueeNwBsgviMXkM2N1hCgoy6ejoQ/aHSI03xPLbJUkiEhkfQVpRnNzKJOPV
      XqJFR2leCieHa45JcjQDFKK1ymwuH3lpcZj06nEbqw9iuo7lxTCiCySdETYe9zmAJU6Pa8iL
      xxUivVBLMJJC2NGJzpKOOhCtJ6tSq1GpVOM6+ZnMidt4tvfvD6/j9b0NNHXZY4K8UXFYmZ3H
      2tlT3UFpXio5E1Cw+0JM17H8ICZsEtxvbcfp8uGtb6Rs3hxaGxrRpeSRaDYhCQZkfSa6hGz8
      cZdeGHum09Rl44XttUiSzCP3riA/I4H//NP7DHmDyHI09m/QKRmfE8WYBrBly+vcdPPt2NuO
      0RFJZ2VZ7nmPS88uID27IPb7nPKK2M+pOiAxGqdOMGed/dZrnkBIjOn8+IJhSvNS+O0/fphQ
      RKSx00ZWsoVEi3LjmCguaACVu7fy/PMvUFPXQNDr5u6HH5nMfl0zLCvN4pF7V+ALhrl1RQkQ
      LVxn0Gkw6bU8ufUYoihz07JZrJ6XiyAIiJLEC+/V0GPz8IlNC8hMURbCLpcLGsDS62/lETSE
      VSbUKoG0uPFbbFE4jVqt4qYL1Nb9w5tVsWLgjV02Vs3LRQAaO21s3lEHRJUkvnT32HW5FC7M
      mGHQY0eOIGv1GI1GRYxpEqnvGOTXfz1MMBRBEKJ7gGdlJzESME1PNBNn0qFSCRRlJU1lV6c9
      Y84BMhONnKitJ9WkwZSSS1qiUuBiIpAkmQGXjwSzHoNOw2MvHqDH5iHOqOOHn98Issys7OSY
      rHdKgolffvU2hnxB8tMTprj305sxDeDGez+FLxCtGRCXMHlhuGuFQCjCmweaaLE6OFDbxey8
      ZL7z8HrSEs302DykJ5mZnZuMAOfIoyfFGUmKM05Nx2cQYxrAyWMHqD5lpbOpjg0f/yrr5udP
      Vr+uCV7ZXc/z79XEfm/qsjPkDfIvH7+Okx2DlOYmo1apRi3cKIwvYxpAQUk5cemFtBiDON3+
      sQ5VuAxGavCqh3355WXZpCaYUKkElpZGQ8ZTlKx7zTCmAXiGnNSeqEWfWs5NS4snq0/XDAuL
      M8hJjUOlEoiIIoWZiaMS3/bXdvLCezWsLM/lwRsrlKS4CWDM0E5LTSVOUUfL0d00diu7jsab
      n798kO5BN539Q7T1unhq6/FYYe1+h5ffvHKEtl4Xf3n/JE5vYIp7OzMZ0wD6bE4WLFjE7PxU
      Bp2eyerTNcPZVeKtg27213YBUNloxTUsjy6KMjaXT3GHJoAxDeC+TzyMra0Wfd5S1i8snKQu
      XTuM3O1Hihaq1QJpiVGtn0UlmeSkxSEI0SzRb/1uO//718NUt/RNVXdnJGNuiXz7padoHPCj
      V6tYs+lOKorGryyPsiUS3qts4aWdJ1m3qIAVZTloNSpy0+Jj8X5ZljlY180Pn90Te0+cScfj
      /+8OzGfsFR5PputYXgyXnA3qD4RZed16ko0aUtOUBZfxZuPSWWxcOjoNorHTRn3HINcvyEev
      1ZCaYOTGJYVUt/Qz4PRhNugIhCM4PAGyU+KUifEVMqYBDNoGibQ249Br0MalkGhRFl4mEpc3
      wH88HU2Ffv94O+GIRGe/i4+sK+OxR26lqrGHnPR4vvvHXXQPDvHgxgruXz9vqrs9rRlzDpBk
      1uPy+PD5fEQiymLMeCPLUSGsA7VdhCMiIMTyfZq67LT1OhElmbq2QSxGHdcvLEASZTr7h4iI
      MifbBqey+zOCMZ8AN9/3abwjqRCJigLBeNM1MMS//PY9IqLEJ26ez/3r5/HIR1bw/T/tRpYh
      K8VCRpKZ+zeUA9Bn9/Dj5/ciyTJ56fF8dGPFB7Sg8EGMaQAn9r3Lq3ur0YsBPvTpr7L6Ahti
      FC6PQCgSU352+6I3mmVzsvncHUto63Vy7w3lZCabY6kQTV12+hxeAJbPzWFOXsrUdHwGMaYB
      VJ/qYuP69RjCvQycoVagMD6U5CTztQdW0Wf3cvvq2ciyjNMTYOPSWRiG6wOcGaRbPDuTleU5
      DHmDbLrAHgKFS2PMMOigtRNZq2H3+wdYd/NtpIzjnt5rMQxa29rPs9uqmVeUxkMb558TwXnn
      cDNPbDlKbmo8//m3N2IyaM9bJXIimS5jeTlcchg0JSvq8txz790T27NrhM076qhtG6C+c5D1
      iwrPUXqobLASDIm0WB08tfU4ZoOWe26Yi0mvCPhNFGOO7La//InGfi8+xyCi2sBtH/kEi0qU
      je2Xy8KSDGrb+inITCQ5fnRIOSJKsSdCRrKFrYdOASAj84lN8ye9r9cKYxpAa0cP9372qwxU
      vs4pt4533j/AopJ7JqtvM467r5vL2vn5xJt0o6TOAeraBthXE80DSks0YRvyEY5IpCplkCaU
      MQ3g3vvu5oWnHkfQWrjj5jXkBz54DuBz9HCouoWU5FRmF6XyxnuHufuOWwjYu3lrXx333Xkz
      1+rapUolkJF0/m2l6UlmLEYtvmCEdYsK+ds7ljDkDVJemDrJvby2GNMAGurrycgtYvGSpeTm
      ZVF4ERvj/V4PKq0eU5wFtSyTnWLG6vAR7LeTmZqELMuxf+O102lEanGymIj20hNNPPbILXj8
      IfLTE0blA41I+k0GM2Esx2pLddYOuzGv6LU33cmS2Vn87mffY/ux1otqJCV3NjesWoow1EWf
      RyIxuwCXtZWgrMWkvVbv/RdHSryJgozESbvYFT7gCbBv26t0ezU88q0fkJ1+cfIb9t4uOvps
      +DwyCwvUeIM6pJALc2YZkWA7giDE/qnGqcibSqUat3Ndbe2NRKknq72ZPpZnX3djrgPUHHiX
      V7YfRi1F2PTA37CsNHvcOnMtrgNcDso6wPhxyesAu/YfY8mKVWRqXfQPKZviFWYeYz57br/1
      ZspLcjlY20N5gVKYWWHmoRTJu8rbU1yg8eN8LpAi+KlwTaMYgMI1jWIACtc0SprhFFDfMchv
      XjlCMBxh45Ii7r5+LlqNUgZpKlCeABNA18AQP3/pAG/sb0Q6T4xhy/5G2nqd9Ng8PLOtmo/9
      x1944QyRXIXJQzGACeC5bdVsP9rGH7ZU0dU/NOq12rYBnJ7gqM0wobDIa3sbJrubCigGMCGM
      bHSJN+tJMJ8uLTXo8vGfT7/PieY+lpZm8d3Pro8VwIs365FlmSP1Vv7wZhU9Nvc5542GROXL
      lkjs7Hfx+y1HOX6q96LO4Q2E+N5Tu/jar95mb3UHbl/wgscGQxFONPfFRBSmC8ocYAJ4aGMF
      y+dmk5ZoIuGMCo+CcFoG0WzUsagkk29/8nr213Zxw8J8nJ4A//3nffiDEdp6nHzn4XVUNlox
      aDVUFGdQ1djDYy8dJCc1jkcfXo/hEneKPfbSQU512dl+tI3ffuMOTHotO6raqGzs4a61cyg9
      a5P98VN9VDb0APDj5/eRlx7PVz6ykl67h7kFqcSb9LG9yz96bi9HG3sozkniv75w07SZ0ygG
      MAGoVMI5FxNEsz2/8+l11LT2U9s2wH88tYsHbqzgkzcvQKUS8PhDWIw6/MEIzVYHX//fd2jr
      daJWCXzvsxvYdbydIW+QIW+Q5h4H8wrTLrpPgVAEmysqbGAyaNGoVLg8QR5/rZJAKEKr1cGi
      kkxaehw8uLGCRSWZ2IZGCyF09g/xrd+9RzgioVYJ5KXH84PPbcRs1NE7/MRq7o5u5/zbO5Zc
      wQhOHooBTDJz8lPpd3p5+u0TABxt6uX+9eX02b00ddm4b305Pn+YZ989QVuvEwBRkvEFw2xc
      UkRNaz+5qfGU5Fxacbx+h5ehYbXpzGQLCPCLlw/GBHq7B910D0Yv4uffrSYl3sjz70Yn5oIA
      cSY9Q94g4WGBNFGSaet1seNYG3esLuXL96zg0T/uJCxKHKjrmjYGoH700UcfnYqGA4EABsPl
      qUz4g2EaO208ufUYTk+Q4uzEcU0VCIVFnN4ABq3mvLn5IxsrLhdZhncONSMP/9xn91DfYWPI
      F8Th9nO43kogJCIIsGR2JresKEYQQKNREQhFKM5JomJWOtuPtvLizlpS4k0xVenzYR/y84Nn
      d+NwR2sMpCaaeP9YB8ebo0rTS0uzEEUZbyAMwPpFhby2r5Fe+2lJ/GBYPO+5O/pcpCQYWVCc
      gVGvxekJ8MCG8ouuXnmlY3kpjKRDn/mdTrsngNsX5JuPv0v3gBsZOHSym4XFaQy4ArT2ONi4
      pIgEiwFJktm8o5aqpl4e2ljBotkXp2wdDEf4z6d3U98+wP0b5vHAhvHX3kyJN2LQa/AFwiRa
      DHz9gdU8+241rVYnC4ozeLUnGhGam5/KP39sLb99vZL3jraNOodep+H5d2sIhCL0Obx877Mb
      6Hd4KchMQH3WBXWyfYD2Xlfs99rWgVGvL5+bjVol0O+Mim7NzkthT3XHRX2WQZePnzy/L6Zs
      d/f1cy91OKaUaWcAzd0OugZOR0jiTXq8/hA/fGY3wbBIZ7+Lr963ikGXj5d21hEWJV7YXnNe
      A5AkmVPddlQqgeLsJARBYMgb5GT7AOGIxGt7G7AYddy6omRU2PJAXRdPvV3NguIMvnjXslgN
      ZVmWCUckNGrVBVWb23qcbD10iniTHl8gjC8QxuMP8ejD6znR0kd6opn0RDO/31JFffsgP9u8
      n/Y+1znneW1vA0lxBnpsHlq6HXz+J6/jD0a4bkEe/Q4foYjINx5aQ3ZKHHMLUinNS8E+5MM+
      FIjWHJBkZMCk1zK/OAN/KMKheisAP3l+X0yx7nzctLSIZquD1h5n7G++QGTsL+4qZdoZQFqi
      CY1aFfuCHJ4Av32jKvaIdvtCyLJM96A7dkxh5rlZpxFR4rEXD7D7RAdqlcC/ffoGFs/OIt6s
      JzXBRI/Ng9sX4vHXKinKSqSs4PSE862DzfQ7vLxX2YIAzMlLYXlZDtuPtrJ5Ry1z8lIxGbQU
      5yRxw4ICNGoVJ9sHkCSZ59+rifnaAKGIyOOvVZKeZOZk+yA6jYoffH4jOq0anyhx8KT1vOPg
      8YVid3oZYu7LnupOJCka4txb3cmC4gx++Mxu9FoNNy4pYu38fAw6DU5PAFGUSE8yk5ZoJiJK
      vLK7Hpc3GBs3Afj0rQvJSLbw0z/vJyJKJJj1fHzTAvocHr7/9G5kYFFJBvfeML3u/CNMOwNQ
      q1R88e5lbN5RS5/dO3wXP12/rK5tgGBYxOUNMBLpzkk9V9jX4w9xoC4qQyJKMvahqH/s8gZH
      yUDqNGriTfpR7xu5wGQZth1pYduRFjJ3naTf4UWSZY6d6gVgX00nz79bg0atik02RzAbtOSm
      x9Pa48Q25Mc2vOEoFJH46Z/3I37ARvFgWEQQxOExESgvTMOgi85ZDp3sJiXeyNLSLPZWd8R8
      /8076lg6J5vCzMToRPgMCjMT+e8v3cyPnt1DszU6nusWFXDn2jkcbrCi16oRRQmXN8gv/3KI
      7zy8jl997UMIAiSYx08xcLKZVgZQ09rP957chUz0C+uze885JhgW+bufvoFeG/1oq+flctN5
      dDTtQ35G1oJWlOWQlWKhrm2A0twUblpaxJGGHm5bVcLKshyyzzCg59+roa49KksuCMTOceaE
      8UwionRed8IXCHPjkiLm5KXwrd9txzd8BwfosV1cPTZZjvbh+5+7EY1aRW3rAE++dQyAJaVZ
      FGUlEhEl9tZ00ufwYjHoSE8cLctic/lo6XEwf1YG6Ulm/uXja/m7n71JRJSo77ChVqt4dlt1
      7AkD0UUviLpPDo+f7/9pG4FghH96aC256dOroPq0MoCu/qGYq3PDgnx8gTBdA6dTDRaWZODy
      BGg7Y8JX1zaA1eamODt51Ll67Z7YhRkIRfjX329HFGW+/sAqvnj3cnrtHp5++zgOd4Cc1Git
      rsWzszAOL/xoNSq++fHreHrr8ZiPLgz/d+Yia0q8EUEQGByOwZsNOryBEDLwm1eOoBJg+IFC
      gkXPRzdU8PstRxGli1vtlWV4+1Az7x9vH/We7UdbsRh1vH2omdREE/MK0/jyPctJjjfS2Gnj
      xZ11lOQks/1oK712D8vmZPMP96/kZMdgbLHO6Qnw6B93IknycNw/gbXz81i3qIAWq4Pv/2k3
      bl8w9p3sqe7gwWkm2T5tDKCz30V6khmdRo2MTMWsdAoyE/m33++IHZOVbKEkJ3mUAbi8QV7d
      08A/3Ldq1MR0SWkWd103B7cvxOzcZE4MhwRtQ3567R6e2nqcfTWdo/qQkWQmLz0BlSDw8G2L
      8AXCo0Jqcuy/04iSzJy85JgBZCabaesNxy7WM69zrz/MG/sbudRMhx1Vbef8TZRkXtlTjyxH
      Q5UAv3j5EKGwiNsXpM/h5dDJ7tjxRxqsfP1XbzPo8scS+AKhCFVNvZj0Wgw6DVabG48/hNsX
      4ok3jsY+E4BRp2H53PETTZgsrvotkbIss7e6k59t3o8ky7GLQ6NWkWDWx3znEdQqIXZxqQQB
      SZbRalT88qu3kRxnRK/T0Gvz0NHvYmFJBp19Q/zouT0xv39VeS5VTT0XjHuPcOZE/Ew2LC5k
      +dwcntx6jP5hLX/hrKfC1URqgpFB19iCBwkWPS7P6TwgnVZN6Kzx0agFfv6V28hNG9sF6ux3
      8dreRuYVpbFuYQGiKE7plsjxNwBZxmEfRGOIw2LU4HB5SUpKACmC3ekhOTkRgYs3gPcqW3j8
      tcrYBSlwzk32gowcqxIE4ky6qDRhsoWOPhe+QJic1LhoisA4Kl4IQEFmIu19zqv2or8UVIKA
      WiUQPsPYL2TQ33hoDdfNzx/zfN99cidHG3vRadV85+F1lGQnYtCPrnjpcEfnZ2cLCF8pk7In
      2GZtpnPATd3xKnxeJ9t37yMsSjh6O9i1r/KSz7e3pjMa8QBuXVlC+gW0Nc/HyHckyTIubxCH
      O0B9+2Bswtk96B7Xi3+kzbbemXHxQ3Tswmc96S702S4mpTsjKRp9CoVF/u33O/i/146Oer25
      285Xfr6Vv3/sTWrb+i+v05fAuD97BgecFM1bil87RJ8rwqycFNp7XEScHrLSEmIqB7IsEw6f
      jiyM6DWevVR96/IiegbdlOYl8+mbKyjOimfzjnp0WhULZqVj0ms5WG/FavMgwEVPHq81zrxr
      a9QqkiwGfMEw/mAk5vPrNGoMOjW+YASLUcvKuVlIMuyt6cIXHB3G1apV5Gcm0Gp1Rl2iiEhp
      TjLhcDim/QrnKtp9+pb5LCvN4McvHCAYFqlq6hl1HdS39zM0nHZ9sm2AkqyE86ZKnNnG2dfM
      +Y5RqVSIoohKpRqluzruLlBrXRXxhfPxtB1Hl5aPwxMi4upDrbcQ8AyxZPmyS3KBLga314/N
      HUQQoim8Wo2KAaeP6pZ+spIt5KXH02x1IMkyKfEm2nqdFGYm0Gx1oBIElpRmYXP5aey0oVJF
      q7WfGdYUBAGtRkUkIqFWq0iJN+JwR1dUywvTONbUS/egm7z0eErzUmjtcbJ8bjayDB5/kJqW
      ATTqqPvVbHXQY3OTlRzHsrnZONz+aNKbDAhRl6NzYIjUBBM2l49gWCQz2YJBp2HA5UWrVuEP
      RkiKM6LXqumxe5BlmQSzgaQ4A92Dbsx6LXFmPXPzU+jsH2JOfirxZj0HartYOz8vWoU+NW74
      qehn17F2mq0OPn7TfIqzE+h3+TEbdLG9Ciea+/iv5/ZiNmi594Yydh1vZ21FHresKKZ70E2C
      OZool5sef04axvmQZZl3K1vYfrSNW5bPYv3iothrQ74gv32tkogo8YU7l5IUN35u0KTMAUL+
      IWrqmlDpLVSUZGF1RRCdnRhTS3DbrJSUzh53A5hqLZtgOII/GCHBrP9AYVtJknF5A1iMuvPm
      zEuyzJAniMmgxRcME46IxBm1GPQ63L7oTrJwRMKk16LRqBjyBpFlGYNOg0Gnwe0LodWozqk/
      cLmfbQS3L4harcJ0mee91PYmgsmZBF8kM8kAJhJFGGv8UISxFBTOImZ6Pp+PUGjy9nN6veem
      MVwuoihO2h1ystsbmchNVs78TB7LkUIjZ7qpM8IFmslf2mS7QDN5LM+OAsEMcYEmu6LKTG7v
      Wvts0yYXaCwms6LJZLd3oRj3RDGTx/J8bc2IJ4CCwuUy7Z8AjdVV+GQ1SamZFGRPXBEPl62X
      gyeauGn9dQSHBjnR2I5KrWPJ4gWox/0GLdPd1kzbgIe1yxfR0XiCfi8kpaRSnD/+GZdiwM2J
      +makUIDc0gXY2k/iD4XJLp5PVvLFp55cLO2nTuL0BEFnpiBeorYnQEpiAqUlhVxgJ+nlEwlS
      c7KeUDBEWl4JIUcXLm+AxIxCZuWmTfcngIzNYUet0pCacmkyIZeKJSGVrLRoGx0dHZTPX0yG
      WWLQE/6Ad14eGbmFxBmj96fBQQdqtYq01ImpGazSmVm4cCHZyWYcLgdBwciSZcvobm2ckPby
      Zs2hvGw2Po+bvj4HWp2K1LTUiakfrdZRVj6P9GQLvoAfhyfE4iVLsfdFN/1PcwMQWH3DRsrn
      zOLY0aoJbUmt0TDyDUly1J9Uq1WIY2wev3yEUYtDS9asY9G8OZyouvRkwotsjsbqSpxCIiWZ
      cQiCGkFQAxNTv9dt6+HwsZMsWrSAOUtXsXx+OadOniA8EfWCBQGXrQ+HJ4hGJSMII1GgaPBz
      ertAskxz40kisoDeZPng468Ae38P1m4rBoOFtLRU6mpPEAkEWTpL98FvvlRkic6ONqzd3SSl
      pCN6HQRF0BgurP1zJQTsnZzq81Na4McbSiHis1NzvJLE9KIPfvNlcKSyitxZpQwM2NCIXtz+
      MJKgRT0Bk/1wwEPf4BBajZpAQEQrhKmrOYEhLuouT/t1AEmMEAxH0Ov1qCYwWhIOh4hERBAE
      DHo94VAIlVqDZiI0MGWZYDCIJMuo1Bq0GhXBYDj6GcfdSQZZEgkEo4ugWp0eFRKhiIhep5uQ
      CFQoGECUZFQqNTqdhmAwiEarj8nLjCeyLBMOhZBk0Ot1IEsEQ9GxFARh+huAgsKVMM3nAAoK
      V4ZiAArXNIoBKFzTKAZwlTLQ3UZHj23K2heDHrr67BDxceDw8djfd1XWX9F5e04dp7pttDjv
      kQPvY/cE6OjoOuf4ge4O/BEZW2c9VfXnvn6lTEt59BmPLPHiM3/gaFMPyxbMoqWtn0SDSFO3
      E09vCydO9ZCTkcSpllbaOrrQSj527TlEUkYOBFzsfH8PAUlNslnDrp070calEW/W4+rroPpk
      I+3WAbpb6ghp4zHgZ+eO3ZiTMxnqaae5rZnOAQ/u1iP8ZvM75Oels2/vEVyOQRIzctm27zhx
      QoDktDQa6utJS0ujv7OF2oZ6+pxBErQh2qx99PQPEbB3cqyxm7ycTKwtdRyuaSYzPQWdKZ7O
      U7XUVtcSn5aNIAYRA05+9rPfkJiZiypgY8/BKtIzM3j6F/9Fi1umICcLnSkewT/Irr2HSM3M
      obulkVNNJ3GLOlITz5W/vBiUJ8BVSNhnR04oIl3jxRuBHdvfpfbgdjr7e3n5rX0M1O1mf00b
      f/zdbwmpjQwO9OFxdPDMS1vZ/Ken0MUn8fZbb7Ht1T8TUJt57tlnAehtPMqR5kF2btmMX1Dx
      6l/eZPPTT6JPiOPpJ//E8QM7ODXoZ8cbr6A2x5GYnEaixcRAXx/q4ADvHagDoK16Pw2trew9
      En0aNFXtpc0RYeeWF2lqrOWJZ19DI7vZ/Ob7OJsPsX3/If70l3dJjjfQXl9FQ5eDt958E5NR
      5rk/v8HRg+8TVJmIT0gkPTWJ/v4+bNYGXnprH/FxcWTn5uLqrqe6uZenn3yKOLOap559md1v
      v4ZH1vLKyy9f9lgrBnAV0lp9gMqjRzhx4hhHGu1kWGDbiT4W5ZtxOIdIzJmFRRWhdPEaVs8v
      4UhlDQsWL4RQgICoZfGCeRi0apxOOx6Pl1nFp7VRKxavoKh4FsuWLkEvRPCHBebPX4BOCiFh
      YOXaVWQkGUlOyyAxNZOM5DhyZ5WyeGE5quGV2jXXr+G5/3uc8mUrh8+qZt6ChaQmmBFFiRs2
      3U5eihGn040lPRczfizJOVSUl6EbXjZJSMuiomwOSNFUEnNiKsmJCRTmJlN5rImFCyqQwhEy
      0pPJL5qNXiMgA6JKx4IFCxCDHgzmVFauWY1Fd/kryIoLdBXS1trFfZ/6LLdvXE1HZz+L5mZj
      j5hZvngR0lAXlfWdLF2+HL1WQ15OFj5bB4dOdlFaMpfFc9J5/uUteEIyH7v/Lvbs3I4uMYcF
      c2cRCfrRJqRjUoXJzskn4A9x3cpynnr6Ba6//V7SzDqSs3ORA14KyhbSfHAbLnUSqYkJ5GWl
      EBFMxFkMlM2dTWVlFXfecStatUBnwzFeeXs7RRVrWDw7C/QJ5ObmILitVNa1s2LdrZi9rby2
      4wjl5XMxJ6ZxZPvLVNX3cM8D96EXImTkFCM6WzjS7CTbFKC6w8Wc0jksnl/C5uc3U1xWgSUh
      hfJcM8+8+CYfvu9BTBqZ7IICAh43RbPOFUC+GJSFsBnG/m1/ZcehWpbfeDebVk+MUO3+d/9K
      v5DDXRtXAHB811bi56+nKPkib2iyxF9ff5177rxrQvp3KSgGoHBN8/8BR67DD0Sfb2kAAAAA
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='rain_amount_asia' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='rain_amount_continent' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='rain_unit' width='192'>
      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
      zAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='rain_unit_america' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='rain_unit_asia' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='rain_unit_con' width='192'>
      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
      0JFQAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='rainfall_amount' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='temp_amoumt_america' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='temp_amoumt_asia' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='temp_amoumt_continent' width='192'>
      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
      hdlobdEhAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='temp_unit_america' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='temp_unit_amount' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='temp_unit_amount_con' width='192'>
      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
      /H+3Umc8iSHHXQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='temp_unit_asia' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAcNklEQVR4nO2deXAc153fP909931gcF8EQIAEQIIEKVKUHK1dsiRLVhxlN951ZV1xlVP5
      J6lUkkrlfyepVGUrx1ZSm3KyW9mkZCeO/oiijR2vrXgty5apSCQOgrgv4r4G52Awd3fnDxAQ
      uSZmgB5ghtS8zz8kpvHr35uH/vZ7/d73vZZ0XdcRCEoUudgFEAiKSUEEoGnaEz9Pp9OGz6mq
      quGyGG30jObMJ1bX9SPr76xy5hP7rNVRQQRwFr0so+fUdT2vWKMUI7ZUcsLRN9lciC6QoKQp
      qgDE87eg2AgBCEoak9HARHSL8el5/OXVVHqtjIxP4Q5U0VgdZGx0mIzJSUdbM9JpllYgOGUM
      twCjY1O0tLZSWeZnfHSMpouX2FyeY3VxCkugnqC8y8JWMus5JEnIQ1BcDLcAm5th5h5MsxFJ
      YDGB06LglCQ24jHK/U7cJg8TkT2qPSZUVX1id0dVVTKZjKH8+QyDSpJkaNSgWEN8RkeuxDBo
      bgwLwOf1U9/UwnZfP36rmXAkxo6q0uoNshxeZ2dvg8qmehRFATj89y8X3GQyXARDsaqqIkkS
      smys8St0eQ/+uE+qv7PKmW9sMepIVVVDsYZLevlKF5MTE7R1XsJrNzE1OUHzhU58XgexuSnU
      YCNlTuMVIRAUAqkQXiBVVZ94B0un05jNZkPnzGQyBW8BjObMJzafFqAY5S1WHRltAcREmKCk
      EfMAgpJGCEBQ0ogukKCkKaoAjA5FCgSnhbgCBSWNEICgpDE8UzU7PsxWIoMvWEHQlmZoag2P
      z09bYyX3B4fJyBaudl1CEXYfwVOM4RZgZX0dvz9AdUWIjZVl7N4A9bXVrC1OE6y/wDm/zOx6
      7DTLKhCcOoZbgK4r14jHY9zt6eO5K5fwxeMM9PRQXu7AY7Xg0Gwsx5OoqjWrGc6oI1SY4c4u
      Zz6xJWOGW11dwelyISsKm+trYHGALBMqCzE18wAlsUHj5XMoyn4j86SpfKPT14eFF2a4M8mZ
      b2xJmOGqqioJb+zQfeUyJlRWV9e43N2Ny26mWVpHM9XgtYpnbMHTjWEBWGxOamqcD3+Sqaqp
      OTzmDYSOdQ6xIEZQbIp6ixYCEBQb0UcRlDRCAIKSRghAUNIIAQhKGrEeQFDSCAEIShrD8wBj
      9/uI6Qr+YAU+U5KxuTAmi4PLrTX0Doyg6TLXbzyHWXSyBE8xhgWwvbONw1dO0O9jcuQ+165f
      Y6Snh7nFWerbunDuzTC9uktrpSurl6XQ25wfxBiNLUZ58401wrOW89F/T4JhAdz8wpfQMkn+
      35172CwKMhIyEqquI8syiqKgZrTDF1I8yeh01OfHQdM0Q7H5XFBGc55GbDFyGol91urIsACm
      RgdJZHQsDhe1PhN3+/rJ6ArdFVX0DvWDmubK8y0oDxcEiJ3hjBu9JEkSZrgsHNzMCmqGa2pt
      R33EpRisUZFkBVmGmzcCIEkosrA6CJ5uDAtAkmVMj9xFlUfUZ/RuJRAUGjFGIyhpiioAow8u
      AsFpIVoAQUkjBCAoacTOcIKSRlyBgpImr1e46LoGD98DqWna4di/pumAhCzmAQRPOYYFoOsa
      /R+9T6a8k3P2XUaWE4SCfhrLnfQMTqOrabpvvYjDJEQgeHoxLICNpRnc5XVEZYl4Io3VLGMy
      WwivLNHSeRVnbJaZlQgXqt1HDneqqmr4OSAfr4okSc+MFyifTZ9KxQt0UEdGYg0KQOVOzwAV
      IR/z0QiXvvw8tcC9Tz5FCjkwaRqaqqEoMpIkHem9yceTo2maodgDb42RWKM584k9EOqzUt5n
      rY4MCkDh9a+9RXp3FdsGhBcesLq5S8Jsp6O6gd5799BQuH7DjSRxKIInYXRrlGznPE5cPrFG
      KEZsqeR8NP7EMcV8S2QymcRqtRo6p3hL5NnlzCdWvCXyBIiNsQTFRghAUNKIiTBBSSMEIChp
      hAAEJY0QgKCkERtjCUqavAQQXphmYT1CJrnH0P0B5lc20LUMk2PDjE3NkevyFgIQFBvDAlBT
      e8zOzhLe2mViZJSalouszE4RXpoGZwWO9DrLO6nTLKtAcOoYNsNNjI3T3Hqe2W2IZnS8djNu
      WWZtb4+K6nO4rT4mtqNUuLxHviVS0zQymYyh/OItkWeXM5/YEnlLpEosnuDB5CTzUSttlVY2
      owkimkazx8/65hZ70S3K6+sOp/DFxljiLZFnFVuEt0QqdN+4hZbcoz4BfoeJiYkJ6pvbCATd
      RKcnUN3VlLvNxk4vEBSIrALQNZVUer+LYjKZD9/5e4BsdVL20Mt2ob3z8POG5rZTLqZAcDZk
      FcD/+v4fE07bsJlknvvi67Q3lBeqXAJBQcgqAJvFSn19KwG7iYDbXqgyCQQFI+uT4PzyKlaz
      gqIoZ+LcFDvDCYpN1hag3GtncGgYn82EM1RPhd9VqHIJBAUhqwAqWy7zQuc1IvPD7MQSp55c
      rAcQFJsnd4F0HU1VudjWzPe++4e837vIpfO1p55cCEBQbJ7cAugaf/7eD1jciKHYnGjxdSbm
      w3Seqyhw8QSCsyXroviJwR6mFsKHW4nUNLdz6Xw9AHNTY2xF4zh9FVS5YXBqGbfXz4WmagYH
      h1AVO1c6LyJJRy+KT6fTmM3GJsvEovizy5lP7OdqUfyvfvURNedaMO0ts42HyjLf4bG6plba
      L7axsbbM+uoSvvJqzjXUsrYwha+mlTqXysxG/MQFEggKSVbJtDVU8JOfvE96a5lXv/kGIb/n
      8FgqtsPA0ChWV4iKhnK2dnbp/fQuleV2PEErTt3Byl4C1W850gx3cDc2gjDDnV3OfGI/V2a4
      po7rNHRZ6Osb5kJt2WPHtiIxOjsv0TcwxM62FYfHjyzrBAJB5hYXMcfC1FxsyGqG0zRNmOFy
      IMxwuTkzM9y7//M9qivdrEUy/KynkbdevHB4zGEzs7C4TNeVq9gUjbm5edq7uvG6rKjqElro
      An579j+aWBAjKDZZBfDC9Q7+on+Rl7oasNeGHjvm8Yfw+D/77Fxzy+H/yyprTrmYAsHZkFUA
      V196nasv7f9/eGSItOrHrJzeMmIxDyAoNse+mnd3dzntHosQgKDYiG1RBCVNVgEMDNwjo2rs
      rM5i9VZiEq88EnzOOPIZYKTvNv/hP/4Xnn/hJbYWJ+h649vinV+Czx1HCqC+pYOvfvVNrl67
      gdXyBsFgoJDlEggKwpECcLq9eOUE7733HmZF4sVX3+JSU+WpJhcLYgTFJusw6MraFn/9979F
      pcuCLD8+qXVghpOtHhrKrIzOrGCxuelsqab//jAqJq5d68YkHrMFTzFZ3aC/fv9dBh5sYFYk
      nn/5rz5mh9Z1nXh0i/vj81hJ03H1GiO9Pbj9NiyBZpzRGcLmOloqnEe6QVOpFBaLxVDBjzpn
      Lg68QEaGYI3mzCf2wAdkxLpRjPIWI2c+sVlbAFkxI+kqG2vrxFOPG5VSsR3Gp+ex2exkEhkU
      ScKERFJVcSgKZouZVCqDpmlHdnXyeaVmvmY4owIwijDDnV3smZnh6psvYPXXMNHzC3bi6ceO
      xWIxTIoJs81CMFDO2OgIePw0VPl4MD/Jpq7T0Oo53EvoSerMxzRlNF6Y4c4+9nNjhlPVDKlk
      kqZrX+ZSx+NLIv2havyh6sOfy6o+O9befrwRo3wWxAgEp0FWAUTXF7n96Sh6Ok1lYzN1Aeep
      JhejQIJik31F2O1e/ua3/w5fvlpNz8h8ocokEBSMrC3AX3vrDd75z9/F5PDxzW82n3pyYYYT
      FJusLUDPJ59gsjuwyhnmVzdPPbkQgKDYZH8I1uDytZsE7CYqg+5ClUkgKBhZBbC6toYUDKNa
      TXjLT39jLIGg2GTtAgXddpZWwqytrRFPprP9qkDwTJK1BXjt975N4uGF73R5HjuWScWZmV2g
      orYBu5xmemYB2eqkpbGG9ZVFVLObiqD37EouEJwCWQVw5+c/5Ee3h7FqcV7/1j/iCx11h8dW
      lleprK5moL+PpkoXtkA9FV4bkbU5Frd1THvDmB03CGTZGULsCiEoNlkFMDazxisvfwkltshm
      5PFd3mrq65mbHMETrEA2qawvTrO+bCFgTVJd04ErrjG1FsFb6zlyY6x0Om3YkiA2xjq7nPnE
      fq68QL/7jW+gm0x8fDvFX7nc+NixyaF+TP46OqpDqGqG8joTA3fuIHlcxBNJ2Ivh8lRl3RjL
      qH/jsPDCC3QmOfON/dx4gXyhCnQdXn/jK78xZr+XSCJvLDOejBOw6SyFtzF5y6irrWFoaJBN
      xUFXY/bXKol5AEGxyboe4Mfv/CnTmymiGyuoso3XfuebXG87+XCo2B1a7A59lrFntjv0/NIa
      b33jW3zlVjtt7Rf5i4/unDiBQPA0k+MZ4Hf5wff/BMnm481XrtCStBWqXAJBQcgqgKHB+/jK
      q7l8pZvKukbqTnFbRIHgaSDrFf3il7/G852NvP1H/5Kf900XqkwCQcHI2gLc/r9/xkrSzj/5
      5/+WMu/pLoYBsSBGUHyytgBOu5X7/Xf5T//uX3F3fLlQZRIICkbWFuDXd4e5eesFyk3brO7E
      ClUmgaBgZG0BvvbmG3S2NdA7vk5XS9Vjx6Lb6wzev8/q5g5qOsHo8CDL69vomsrM1BhTs0vk
      mrw3OhsrEJwWWSfCsrEeXsMXCHLn07sEnCbKmjuZvN9Pc12QjYwHS3QOe30XlW6zmAjLI1ZM
      hOXmzKwQ2QgGAwzd6yFU28jW6jytTiteRWEluktFdQNuR5SJzV1CDq94S2QescIMl5szM8Nl
      Y7DvLlXnuyjz2BndWmQnniKq6zS43OzsREhEdwhW12Y1w+m6LsxwORBmuNycmRUiGxarjaWZ
      Ccam52hpu8Di1CiV9U2UVZ1D2lslbglS5TG276dAUCgMPwOchLPYHFc8A5xdznxin7VngKIO
      w4gVYYJiI8YhBSVNUQUgFsQIio0QgKCkEV0gQUkjBCAoaYQABCWNYQHEo9v09Q2iArHtVe7c
      7WN4/AG6mmbofj8Dw+M5zXACQbExLIBURscq6WjAxuoS5XVNnG+qZ21hEmd5ExXWBHObiazn
      EPMAgmJj2LTh9flZlhcBCFQ1srq+zicTI1SFrHgCdlySi7XdGKrXLHaGyyNWmOFyUxQz3KPE
      YnFq6hoIL6/i9flZWQuzFV2n6ny92Bkuz1hhhstNUawQizOTJHWV8bFp/AE/DybGaOnsIlje
      QNCSxFHZTNCRvUBiQYyg2BTVDCcWxORGmOFy88ya4QSCYiMEIChphAAEJY0QgKCkKaoAxM5w
      gmIjWgBBSSPWAwhKGsMC2F5f5uPbd8kAe1ur3O3p4f7oFGoqRm/PXe703kPNMcMgBCAoNoYF
      YHP58Lts6MDk9DyXr3ajRbdYWHhAeWM7zWVmZsJiP1HB041h04bN9tkL8NJImCUJCxKxTJqg
      xYwtYyWRSKKq1iPNcJlMRuwMlwNhhstNUcxwke0Ntra3CK9vUuW1MTo9y7aqczlUwcjUBHJy
      h5ar51AevlVG7AwnzHBnFVuUvUFBoqmtFUmSCDVfxLG5ybm6GmwWhQuKDU05h8ciBpkETzeG
      BeDxBfA88rM/WHb4f5fHf6xziAUxgmIjdoYTlDSijyIoacREmKCkEQIQlDSiCyQoaYQABCWN
      EICgpDmVbVG2liYZnN0hGAzQUuun594omi7x3PM3EXNhgqeZUxHAztY2JosFn8/H2uIcje1X
      ce3NML2yS1uV60ivxlG7RRwHo/6Pg7kHo7FGPSf5lDef2GKUt9A584k9FQE0dlynQdfouf0J
      vnInbklCkiR0Tctq5jJq8sonNp/Jt2KVN99YIzyLOY3EnooAluemWNuKEpfNdFTW0Hu/BzSd
      7ufPI8sSuq4/8U4vy3JeLYDRWKNmuHxyGo3NxwxXrPIWIyc82XCZC7ExVgFy5hMrNsbKjdgY
      SyAwiBCAoKQRAhCUNEIAgpJGrAcQlDRCAIKS5lTmAQQCI0TjKWZXtrFZTZT7nCys7aAoCgGP
      neGZMOHtPW511hFPpmms9KGcwQtVzmAeQCedSoMsY344LnvUPEAqlcJisRjKIuYBjp8zo2qk
      MyqyJKHpOrIkgQSqqiPL+5+ZFBld17GYFCRJIplKoSNjNStHrtuIJdIMPlijtS6Iz2Ujnkzz
      x/+7h3tTq3S3VqEoMum0isthQQLSqsZHA3PIssTFhhATCxuEt2NIEpgVhXRGBQlMskxa3bc1
      mBQZVdP47Zcu8rde6zqyjuLJFD/6eJJkWqW9oYzdWIrh2TDN1X6unq9iZmWbaDzFndElRmfD
      dLdVI0vS6QsgvrNG/+gcZBJcvvEiTrMkJsLyiD1KAPFkmu+9P8D86g432mv46q3W/Qsb0DSd
      dz4YYmZ5i9dvnuftn95jZmUbu9VMMpXBYlZQFJnIXhKH1UwilSHgsZNMZ/jHv3eLjsZy/uC/
      f8TQgzAd58qxW038w68/j0l5vM7+6X/9kN7xZRoqvPybv/cqf/LDXn56Z8pQ/eSiOujmD//+
      a9gsv1mHuq7z855p/v27d0583lPvAoVXl2m6eBlXbJbZ1QhtVS40TXuiUSmVSh0+Bxx1lznq
      uPaIz+iA45zjYGOsR3/3uGXIZDJHPrfkOkcmkzmsg5N810fNcI/mvju2zP/5eAKAkbl1rp2v
      JORzoOs6s6sR3vn5ILoOPePLpDP7eaPxFMDh3RUglkwDsL6zv4vfx4MLhLx2+iZWUDWdu2NL
      AHzlRjOttf7HyrfxMGZrN0EylSK8HX3i9zoNljZ26R1f5nprxeFnj9aTx2FGkSVU7WT381MX
      gKIoqKpGJqNiMinIsnykx0PX9aK0ALIsG1qOKUnSU7MxVm3Ig9NmZi+RprrMjc9tPzx/ud9F
      0ONgazfOlZZK+idWkGQJj8PKZiSO9oiQDi4aSYKQ18krzzVRGfTwcncjfZOrxBJpkmmVqqD7
      N/5W/+DrN/nZ3QfcbK/Babfxt9+8RvBXI9SUeagJeXj7p/eYX4sAIAGKIpNRNRR5v+5zXaxm
      0/7v6zq47GZqQ54nXi+6rnPlfBX/+u++SiSWpH9ihWg8RVXQxd2xJRbCuzRV+wlv7ZHKqLgd
      VhLJDGU+x+l3gdKJXfoHRtAw0X29G7MsvED5xGZ7BljfjrERie2Lwf74s9TOXpKNnSiNVQFW
      NqJYzAplXgcPlrdIpDKH3SWn3UI0nkKRZerKPYddjIPybkRiJJIZqsvcx7ppPPo99+IpFsKR
      wzin3czuXgqX3QxI7MaTj8Ue+HkOyuZz2diNp8hkVIJeB2Vex5F1ZNQLJMxwBciZT6www+Xm
      mTXDiXkAQbERAhCUNMILJChpiioAo1uUCwSnhbgCBSVNQbxAB0/pf5mDMXkjaJpm6I0iBxNh
      Rp4/jObMJzafnRKKUd5i1pGR2IIIINvwlNEF1EZjD8akjQqv0OXVdR1JkgznLXR5i5Eznzoq
      qhs0n81xjcYWI2exYkslZz6xBZkIEwieVsRDsKCkKVoXaGV2gsX1XWzuAB2tjccP1FMM9g+T
      1tP4K5torA6eKO/Wyhy9U6u8/OJzJ4pbmp1gdStGeXUdNeWBY8el9rYZGJkCXaOl4wo+x3Gs
      HzqLM1PMhKO8+NwVlmbGWd7cxe4J0d5SnzUyk4oxNtCLUtlJa4WN4ZEx0ukUwZpm6iuzl3tz
      bZGekVle+a0XANhYmuL+TIQvvnA1+3eM7zJ0rw9/83UaQzaG+vvISFZaLrbhtGT/vmtLsww9
      WOVLL95geW6Klc0ommSi+3J71m6NrutMjg4SS2awuIL4zSkW13ewuoN05riektEtRiZnySTj
      xWsBFtZ26O6+SjqyTvpEnTAz7V1dNNWG2Imc7EXcmppidnUHl/WE/UUtzezCKhaTgtvlOlFo
      IhrB6i2nwmdjZy+ZO+AhFbWNuO0mQGdpPUL31WvEttdyxskmKxfON5LKqEgmK+2XLtNQXUYk
      upcz1hOooCK4/+pDXUsxu7qL6xh6NVkctDXXkcyoxMMzbKYtWOx2rMfw5gTKawg+NLltbm7R
      2NSCmtzjOK7m5rYO2loa2Y3ssBjeprv7GonIes44i8PL5a4uylzmInaBJAmQkCU40VOIJDE3
      OcSDcJpLbbUnSjk52I/dEyAaiZBIZY4fqGukVJm2C63c7+89UU4UM6m9TbaiqRPslP2o7Xp/
      hIP96sqJLCuHSwclCWbGBpnfVulorssZ++ho3XDfXbxlZUQiEZLp7MOLsqIcOjhTiThOXzl1
      PhP3JxdOlNNut7M4PwNK7lWCkgTrSzPcG5vjalfH/gfHrCPQGOr7lIy7rngC8DlMDA0PkzI5
      MJ+kFJldBkbmcZh1Nk+4AKOqoQWPTUbT1JOJTrEQ8lqZmJjC6vTk/v1Hi5tOomqg6xmSqfTx
      gnSN+dlplhYXmV9ex2NTGBoaQjLnbn1SsV3Gp2dZmp9hY22JkZlV7IrG5k7uugqvLLC0uMj0
      zBzVTW04TByrruK7W0zNzLEw+wAlUEdy7QEzS2G8bmfOnCuLsywtLvJgbol4PIasKCTicXLN
      fOiaRu+9IfxuO+H1LXwOM4NDQ2B6smX6UTYWJljdk9CSkeKNAum6TjKZxGyxHi6QOF6gRjyx
      35UwmS2YTScf+zWyLbuuaSRTKSxW6+Hd7niBOqn0/vpai8V8vBvUw7rRdB1ZMWExKySTx8ut
      qSrJ1P7KL7PZTCadRud4dZVOJcmoGpIkY7VakSQdVc1txVbVDKmH4rZYraCppFUdq8Wcc3gy
      lUzsL8iRZawWM8lkEpPJgilHWXVdJ5VMoOk8XkcWK3KO60lTP7sZiWFQQUkjhkEFJY0QgKCk
      EQIQlDRCAAJAZ3FuDmMezmcb5Tvf+c53il0Iwemiqyk+/uUHLO+ksGR2iEkuIssPyJgdjPZ+
      zOTsGsGKciwPR1rU2Cb/4p/9AWm7h7qQmw9/8UtcwUo2FqYZHRtlczfO0Og0VWVOBgYGGJ6Y
      p7au+rPROz3F4NAkoaCb0ck55OQ2v747SHVtLfPj9/j03jg1tXU8mJpgYX4ef7D8NzbZKhZi
      b9DPIWpil7WtCHd/9t/41je+yp2BdVgd4EpnIx8ORfDtzlF58SLnrfvTvJLJis/rpaa6gj/7
      wfepuNDFD/7Hu9RZt7A3XeWXb3+f2pCV8oCNn90e4EIwwwe9Zbz2XMt+QsnM7Q9+jMvyW4zM
      JvhJ76+4cukcP/qgh1rzBrNDfbxvLWPyg7dpffEtOk4y7H3GPB0yFJwqS5P3UZ3VVJV5cdZ0
      Epn6mITiRYvucKHrGlUh32O/L1ucVJT5aTrXyPb2JrFYmuaGWhSzk2vP36TlfCv11SE0VaO+
      qY3mhqr9/V8Pkfjic2189+0/59q1C2yub4EtQKVf4t7wEpfbW0klknirz/Pmy7eemrs/CAF8
      LgnVt7I4eBtXeQMOq5VLrXVcvnGLizdfZvr2u3zYN46aTLCxscHGxgaR3Ri3Xujie2+/w9d+
      5+uM9t8hLVtpaGnFLsu0tbZQ13QBt03hzi9+yIfje7x0pfEwfntnl3Ndt/C6XdT5A/yNt77E
      J3d6cbhCVHjSjCzFOFcTpK2t7XgTgQVETISVEHtr0/zRn76D1V/L7//2q6yt7RvHHJ4g5+oq
      c8eHp7k9tssrX+giEd1menYRHTDb3Qzd/jGVV17nVmfDGX+L00UIQFDS/H/KNFTyxOQY+AAA
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='temp_unit_year' width='192'>
      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
      AYKreh/mmIMuAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='temperature_amount' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='top_rain_amount' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='top_rain_amount_asia' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='top_rain_amount_con' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='top_tem' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='top_tem_america' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='top_tem_asia' width='192'>
      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
      ORkYAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='top_tem_con' width='192'>
      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
      ihSApKn5/4ZnOd8y9gXtAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
